var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AppCache.html",[0,0.115,1,2.762]],["body/classes/AppCache.html",[0,0.143,1,4.014,2,0.886,3,0.09,4,0.09,5,0.08,6,2.968,7,0.12,8,0.503,9,3.77,10,5.422,11,1.874,12,5.3,13,5.91,14,2.554,15,5.422,16,5.91,17,0.217,18,0.011,19,0.289,20,1.489,21,0.99,22,3.72,23,4.654,24,0.512,25,4.126,26,5.615,27,3.72,28,2.058,29,1.022,30,0.521,31,5.369,32,2.516,33,3.765,34,3.72,35,4.654,36,6.494,37,2.696,38,6.831,39,3.72,40,3.72,41,3.72,42,2.724,43,3.72,44,0.34,45,4.229,46,3.266,47,5.422,48,1.07,49,3.266,50,2.968,51,1.051,52,5.422,53,4.654,54,4.654,55,3.149,56,4.654,57,3.086,58,6.247,59,0.903,60,4.654,61,4.654,62,4.654,63,1.769,64,3.266,65,4.654,66,0.09,67,0.004,68,0.006,69,0.004]],["title/injectables/AppLogger.html",[70,1.758,71,2.932]],["body/injectables/AppLogger.html",[0,0.153,3,0.136,4,0.136,5,0.121,7,0.182,11,2.476,17,0.182,18,0.011,21,0.755,24,0.492,28,1.881,29,0.934,30,0.477,32,1.996,33,3.157,44,0.696,57,2.587,66,0.136,67,0.007,68,0.008,69,0.007,70,2.895,71,4.829,72,3.157,73,4.502,74,1.493,75,6.071,76,3.749,77,7,78,7.957,79,5.643,80,5.165,81,7,82,1.881,83,6.147,84,3.668,85,4.163,86,4.502,87,4.955,88,5.643,89,5.643,90,3.893,91,4.955]],["title/modules/AppLoggerModule.html",[92,1.648,93,2.617]],["body/modules/AppLoggerModule.html",[0,0.157,3,0.14,4,0.14,5,0.125,18,0.011,44,0.652,66,0.14,67,0.007,68,0.009,69,0.007,71,6.063,82,1.939,92,2.992,93,5.239,94,2.989,95,2.989,96,3.254,97,3.254,98,2.989,99,4.316,100,4.316,101,5.108,102,5.108,103,5.108,104,3.99,105,3.115,106,3.254,107,5.817,108,5.817]],["title/modules/ApplicationModule.html",[92,1.648,109,3.135]],["body/modules/ApplicationModule.html",[0,0.134,3,0.119,4,0.119,5,0.106,18,0.011,44,0.75,66,0.119,67,0.006,68,0.008,69,0.006,82,1.648,92,2.775,93,4.962,94,2.54,95,2.54,96,2.766,97,2.766,98,2.54,99,3.6,100,2.766,104,3.6,105,2.647,106,2.766,109,6.452,110,4.341,111,4.341,112,5.558,113,5.237,114,4.962,115,5.558,116,4.721,117,4.944,118,3.963,119,3.647,120,4.341,121,4.944,122,3.944,123,3.944,124,4.944,125,2.188,126,2.351]],["title/injectables/AuthMiddleware.html",[70,1.758,127,2.617]],["body/injectables/AuthMiddleware.html",[0,0.123,3,0.11,4,0.11,5,0.098,7,0.147,11,2.155,14,2.842,17,0.196,18,0.011,21,0.816,28,2.032,29,1.008,30,0.515,32,1.61,44,0.735,57,3.507,59,1.038,63,2.165,66,0.11,67,0.005,68,0.007,69,0.006,70,2.521,72,2.547,82,1.517,84,2.959,85,3.359,126,2.165,127,3.754,128,3.632,129,6.095,130,4.553,131,5.117,132,4.553,133,6.095,134,5.414,135,5.069,136,5.414,137,6.443,138,7.338,139,4.553,140,3.141,141,6.095,142,3.632,143,3.141,144,3.998,145,3.998,146,3.632,147,1.517,148,3.632,149,3.998,150,3.998,151,3.998,152,3.632,153,3.632,154,4.862,155,3.998,156,0.894,157,2.959,158,1.026,159,7.338,160,3.998,161,5.352,162,4.205,163,2.959,164,3.998,165,4.553,166,3.68,167,4.553,168,4.497,169,4.553,170,4.553,171,6.095,172,3.632,173,4.553,174,4.553]],["title/controllers/CacheController.html",[175,1.881,176,3.135]],["body/controllers/CacheController.html",[0,0.142,1,3.417,3,0.127,4,0.127,5,0.113,7,0.169,11,2.368,14,3.387,18,0.011,21,0.896,32,2.368,42,3.985,44,0.673,55,2.327,66,0.127,67,0.006,68,0.008,69,0.006,82,1.752,125,2.327,126,2.5,175,2.963,176,4.94,177,4.616,178,7.756,179,7.756,180,3.44,181,5.257,182,4.94,183,7.756,184,7.756,185,5.257,186,5.257,187,4.352,188,5.257,189,4.616,190,3.878,191,4.123,192,3.237,193,4.789,194,3.08,195,5.257,196,5.257,197,4.352,198,5.257,199,5.257,200,5.257]],["title/classes/CacheObject.html",[0,0.115,26,3.135]],["body/classes/CacheObject.html",[0,0.158,1,3.789,2,1.015,3,0.103,4,0.103,5,0.091,6,3.401,7,0.137,8,0.554,9,3.417,10,3.743,13,3.743,14,1.763,15,3.743,16,3.743,17,0.214,18,0.011,21,0.889,23,3.743,24,0.43,25,4.283,26,5.697,28,1.421,29,0.705,30,0.36,31,3.401,33,3.261,35,3.743,36,5.119,37,2.125,38,6.271,42,2.19,44,0.39,45,4.651,46,5.119,47,6.941,48,1.509,49,3.743,50,3.401,51,1.152,52,5.833,53,5.119,54,5.119,55,3.31,56,5.119,57,3.275,58,6.567,59,0.993,60,5.119,61,5.119,62,5.119,63,2.027,64,3.743,65,5.119,66,0.103,67,0.005,68,0.007,69,0.005,126,2.027,201,4.263,202,4.263,203,4.263]],["title/modules/CoreModule.html",[92,1.648,204,2.377]],["body/modules/CoreModule.html",[0,0.135,3,0.12,4,0.12,5,0.107,11,1.769,18,0.011,21,0.67,32,1.769,33,2.799,44,0.696,51,0.896,66,0.12,67,0.006,68,0.008,69,0.006,82,1.668,92,2.791,94,2.571,95,2.571,96,2.799,97,2.799,98,2.571,99,4.026,100,4.026,104,3.628,105,2.679,106,2.799,118,3.081,125,2.214,156,0.982,204,4.843,205,4.393,206,4.393,207,4.393,208,5.972,209,5.972,210,5.942,211,5.003,212,4.678,213,5.003,214,4.216,215,5.003]],["title/interfaces/CreateListingDto.html",[216,0.21,217,3.135]],["body/interfaces/CreateListingDto.html",[3,0.088,4,0.088,5,0.078,7,0.118,8,0.497,17,0.282,18,0.011,19,0.284,24,0.581,29,1.105,30,0.654,37,3.098,66,0.088,67,0.004,68,0.006,69,0.004,147,2.225,216,0.18,217,3.861,218,0.972,219,3.209,220,4.926,221,4.606,222,4.926,223,4.926,224,3.735,225,4.926,226,0.951,227,4.926,228,4.606,229,3.575,230,4.926,231,4.606,232,4.926,233,4.606,234,5.326,235,3.298,236,4.606,237,4.34,238,4.926,239,3.735,240,4.926,241,4.606,242,5.326,243,4.606,244,4.926,245,4.926,246,2.804]],["title/interfaces/CreateStoryDto.html",[216,0.21,247,2.932]],["body/interfaces/CreateStoryDto.html",[3,0.114,4,0.114,5,0.102,7,0.153,8,0.595,17,0.277,18,0.011,19,0.368,24,0.578,30,0.711,37,2.903,66,0.114,67,0.006,68,0.008,69,0.006,147,2.485,216,0.234,218,1.26,226,1.062,229,3.993,235,3.683,239,4.171,247,4.319,248,4.162,249,3.993,250,5.144,251,5.144,252,5.144,253,5.144,254,5.144,255,3.3,256,5.144]],["title/classes/Currency.html",[0,0.115,257,2.762]],["body/classes/Currency.html",[0,0.114,2,1.005,3,0.102,4,0.102,5,0.09,7,0.136,8,0.55,9,2.925,17,0.27,18,0.011,19,0.328,21,1.055,24,0.527,30,0.601,44,0.604,48,1.435,51,1.199,59,0.986,66,0.102,67,0.005,68,0.007,69,0.005,74,1.235,156,1.136,158,1.836,216,0.208,226,1.097,257,3.763,258,3.113,259,1.663,260,4.875,261,3.264,262,2.983,263,1.334,264,5.272,265,5.498,266,1.334,267,2.743,268,4.219,269,4.219,270,4.219,271,4.219,272,4.07,273,4.219,274,4.219,275,4.219,276,2.859,277,1.062,278,1.49,279,1.033,280,3.705,281,3.366,282,2.26,283,3.705,284,1.062,285,1.062,286,1.305,287,1.062,288,5.083,289,1.457,290,1.305,291,1.062,292,3.113,293,3.705,294,2.084,295,2.084,296,1.538,297,3.113]],["title/interfaces/CurrencyAttributes.html",[216,0.21,260,3.135]],["body/interfaces/CurrencyAttributes.html",[0,0.129,3,0.114,4,0.114,5,0.102,7,0.153,8,0.596,9,2.103,17,0.262,18,0.011,19,0.369,24,0.553,30,0.529,44,0.642,48,1.266,51,1.122,59,1.068,66,0.114,67,0.006,68,0.008,69,0.006,74,1.014,156,0.933,158,1.582,216,0.235,218,1.263,226,1.158,257,3.088,258,3.505,259,1.578,260,5.178,261,2.347,262,3.19,263,0.959,264,3.79,265,5.879,266,0.959,272,3.861,276,3.097,277,1.195,278,1.582,279,1.163,280,4.172,281,3.79,282,2.544,283,4.172,284,1.195,285,1.195,286,1.413,287,1.195,288,5.506,289,1.578,290,1.413,291,1.195,292,3.505,293,4.172,294,2.347,295,2.347,296,1.732,297,3.505]],["title/interfaces/CurrencyDto.html",[216,0.21,298,2.932]],["body/interfaces/CurrencyDto.html",[3,0.133,4,0.133,5,0.118,7,0.177,8,0.655,17,0.271,18,0.01,19,0.428,24,0.571,29,1.305,48,1.673,66,0.133,67,0.007,68,0.008,69,0.007,216,0.272,218,1.464,226,1.124,262,3.158,263,1.592,265,5.82,266,1.592,298,4.757,299,4.837,300,5.82]],["title/controllers/DevController.html",[175,1.881,301,3.135]],["body/controllers/DevController.html",[0,0.129,3,0.114,4,0.114,5,0.102,7,0.153,11,2.217,14,2.903,17,0.153,18,0.011,21,0.636,28,1.584,29,0.786,30,0.401,32,1.68,42,3.222,44,0.754,55,2.103,57,2.178,59,0.809,63,2.259,66,0.114,67,0.006,68,0.008,69,0.006,82,1.584,125,2.103,134,5.506,135,5.178,136,5.506,140,4.326,143,3.278,144,4.172,145,4.172,146,3.79,147,1.584,148,3.79,158,1.071,172,3.79,175,2.775,180,2.441,191,3.861,192,2.926,194,2.784,278,1.796,279,1.163,301,4.626,302,3.79,303,7.018,304,4.751,305,6.27,306,6.27,307,4.751,308,5.506,309,5.178,310,4.751,311,3.79,312,4.172,313,3.508,314,5.954,315,4.172,316,4.172,317,4.172,318,4.172,319,4.172,320,4.172,321,4.751,322,4.751,323,4.076,324,4.172,325,4.751,326,4.751,327,4.751]],["title/modules/DevModule.html",[92,1.648,112,2.932]],["body/modules/DevModule.html",[0,0.146,3,0.13,4,0.13,5,0.116,11,1.912,18,0.011,21,0.724,32,1.912,33,3.025,44,0.716,51,0.942,66,0.13,67,0.006,68,0.008,69,0.007,82,1.802,92,2.895,94,2.779,95,2.779,96,3.025,97,3.025,98,2.779,99,3.813,100,3.813,104,3.813,105,2.896,106,3.025,112,5.691,118,4.198,125,3.017,156,1.061,176,5.507,204,4.615,212,4.852,214,4.431,301,5.507,328,5.408,329,5.408,330,5.408,331,5.408,332,3.731,333,3.731,334,5.408,335,3.731,336,5.408]],["title/classes/Disclaimer.html",[0,0.115,337,2.762]],["body/classes/Disclaimer.html",[0,0.119,2,1.052,3,0.106,4,0.106,5,0.095,7,0.142,8,0.567,9,2.995,17,0.268,18,0.011,19,0.343,21,1.045,24,0.505,30,0.612,44,0.619,48,1.463,51,1.192,59,0.752,66,0.106,67,0.005,68,0.007,69,0.005,74,1.274,156,1.172,158,1.854,216,0.218,226,1.112,259,1.702,261,3.342,262,3.031,263,1.366,266,1.366,267,2.871,276,2.95,277,1.111,278,1.525,279,1.081,282,2.366,284,1.111,285,1.111,286,1.346,287,1.111,289,1.111,290,0.996,291,1.111,294,2.182,295,2.182,296,1.61,337,3.882,338,3.259,339,4.992,340,5.398,341,4.417,342,4.417,343,4.417,344,4.417,345,4.167,346,4.417,347,4.417,348,3.878,349,3.524,350,3.878,351,2.366,352,3.259,353,3.878,354,3.259]],["title/interfaces/DisclaimerAttributes.html",[216,0.21,339,3.135]],["body/interfaces/DisclaimerAttributes.html",[0,0.135,3,0.12,4,0.12,5,0.107,7,0.16,8,0.614,9,2.204,17,0.254,18,0.011,19,0.387,24,0.539,30,0.546,44,0.656,48,1.305,51,1.115,59,0.848,66,0.12,67,0.006,68,0.008,69,0.006,74,1.062,156,0.977,158,1.619,216,0.246,218,1.324,226,1.171,259,1.627,261,2.459,262,3.232,263,1.005,266,1.005,276,3.194,277,1.253,278,1.619,279,1.219,282,2.667,284,1.253,285,1.253,286,1.458,287,1.253,289,1.253,290,1.122,291,1.253,294,2.459,295,2.459,296,1.815,337,3.236,338,3.674,339,5.297,340,3.972,345,3.982,348,4.372,349,3.972,350,4.372,351,2.667,352,3.674,353,4.372,354,3.674]],["title/interfaces/DisclaimerDto.html",[216,0.21,355,2.932]],["body/interfaces/DisclaimerDto.html",[3,0.139,4,0.139,5,0.124,7,0.186,8,0.675,17,0.265,18,0.01,19,0.449,24,0.559,29,1.328,48,1.693,66,0.139,67,0.007,68,0.009,69,0.007,216,0.286,218,1.538,226,1.144,262,3.213,263,1.62,266,1.62,355,4.904,356,5.079]],["title/classes/ErrorCodes.html",[0,0.115,357,3.135]],["body/classes/ErrorCodes.html",[0,0.15,2,1.322,3,0.134,4,0.134,5,0.119,7,0.179,8,0.658,9,3.801,17,0.243,18,0.011,19,0.587,20,3.025,21,1.011,24,0.489,51,1.044,66,0.167,67,0.007,68,0.008,69,0.007,357,5.113,358,4.43,359,8.142,360,8.142,361,7.15,362,5.552,363,5.552,364,5.552,365,5.552,366,4.875,367,4.875,368,4.875]],["title/classes/ErrorResult.html",[0,0.115,369,3.39]],["body/classes/ErrorResult.html",[0,0.145,2,1.278,3,0.129,4,0.129,5,0.115,7,0.173,8,0.644,17,0.26,18,0.011,19,0.578,20,2.716,21,1.079,24,0.347,25,3.485,28,1.788,29,0.888,30,0.453,44,0.49,51,1.179,66,0.129,67,0.01,68,0.008,69,0.006,74,1.447,76,4.317,90,4.679,126,2.552,147,2.261,369,5.411,370,4.711,371,6.783,372,5.366,373,5.366,374,3.002,375,5.487,376,3.959,377,3.959,378,3.959,379,5.366,380,5.366]],["title/controllers/FilesController.html",[175,1.881,381,3.135]],["body/controllers/FilesController.html",[0,0.079,3,0.07,4,0.07,5,0.171,7,0.094,11,1.568,14,3.231,17,0.271,18,0.011,21,0.802,24,0.547,28,1.996,29,1.321,30,0.506,32,2.397,42,3.73,44,0.664,55,3.118,57,3.328,59,1.02,66,0.07,67,0.003,68,0.005,69,0.004,82,0.973,84,1.897,85,2.153,125,1.292,134,4.417,135,5.001,136,5.198,140,3.059,143,3.059,147,0.973,157,1.897,175,1.962,180,3.076,182,3.271,187,2.882,190,2.153,191,2.73,192,1.798,193,4.185,194,1.71,197,3.892,229,2.871,243,3.059,249,1.563,290,0.658,308,4.707,309,3.955,313,2.48,374,1.292,381,3.271,382,2.328,383,4.707,384,4.434,385,4.707,386,5.361,387,2.563,388,4.13,389,5.001,390,7.013,391,2.919,392,2.919,393,2.919,394,4.417,395,4.434,396,4.434,397,3.537,398,2.919,399,2.919,400,5.257,401,2.563,402,2.919,403,2.919,404,2.919,405,4.434,406,2.919,407,2.919,408,2.153,409,2.919,410,2.014,411,4.434,412,2.919,413,2.563,414,2.153,415,2.153,416,2.598,417,2.328,418,2.328,419,2.563,420,2.919,421,2.919,422,2.919,423,2.919,424,5.361,425,4.707,426,5.653,427,2.919,428,2.919,429,2.919,430,2.919,431,2.919,432,4.434,433,2.919,434,4.434,435,2.919,436,2.919,437,4.277,438,2.919,439,2.563,440,2.919,441,2.919,442,2.919,443,4.434,444,4.707,445,4.707,446,3.893,447,4.707,448,2.919,449,2.919,450,2.919,451,2.919]],["title/injectables/FireBase.html",[70,1.758,208,2.932]],["body/injectables/FireBase.html",[0,0.147,3,0.131,4,0.131,5,0.116,7,0.175,11,2.414,14,3.091,17,0.175,18,0.011,19,0.421,21,0.726,24,0.534,28,1.807,29,0.897,30,0.458,32,1.917,44,0.624,51,1.032,55,2.4,66,0.131,67,0.006,68,0.008,69,0.007,70,2.824,72,3.033,82,1.807,208,4.71,452,4.761,453,6.827,454,6.827,455,4.002,456,5.422,457,5.422,458,5.995,459,5.422,460,5.422,461,5.422,462,5.422,463,5.422,464,5.422,465,5.422,466,4.761,467,5.422,468,5.422,469,5.422,470,5.422,471,5.422,472,5.422,473,5.422,474,5.422,475,5.422,476,4.761]],["title/classes/HiringType.html",[0,0.115,477,2.762]],["body/classes/HiringType.html",[0,0.119,2,1.052,3,0.106,4,0.106,5,0.095,7,0.142,8,0.567,9,2.995,17,0.268,18,0.011,19,0.343,21,1.045,24,0.505,30,0.612,44,0.619,48,1.463,51,1.192,59,0.752,66,0.106,67,0.005,68,0.007,69,0.005,74,1.274,156,1.172,158,1.854,216,0.218,226,1.112,259,1.702,261,3.342,262,3.031,263,1.366,266,1.366,267,2.871,276,2.95,277,1.111,278,1.525,279,1.081,282,2.366,284,1.111,285,1.111,286,1.346,287,1.111,289,1.111,290,0.996,291,1.111,294,2.182,295,2.182,296,1.61,477,3.882,478,3.259,479,4.992,480,5.398,481,4.417,482,4.417,483,4.417,484,4.417,485,4.167,486,4.417,487,4.417,488,3.878,489,3.524,490,3.878,491,2.025,492,3.878,493,3.878,494,3.259]],["title/interfaces/HiringTypeAttributes.html",[216,0.21,479,3.135]],["body/interfaces/HiringTypeAttributes.html",[0,0.135,3,0.12,4,0.12,5,0.107,7,0.16,8,0.614,9,2.204,17,0.254,18,0.011,19,0.387,24,0.539,30,0.546,44,0.656,48,1.305,51,1.115,59,0.848,66,0.12,67,0.006,68,0.008,69,0.006,74,1.062,156,0.977,158,1.619,216,0.246,218,1.324,226,1.171,259,1.627,261,2.459,262,3.232,263,1.005,266,1.005,276,3.194,277,1.253,278,1.619,279,1.219,282,2.667,284,1.253,285,1.253,286,1.458,287,1.253,289,1.253,290,1.122,291,1.253,294,2.459,295,2.459,296,1.815,477,3.236,478,3.674,479,5.297,480,3.972,485,3.982,488,4.372,489,3.972,490,4.372,491,2.283,492,4.372,493,4.372,494,3.674]],["title/interfaces/HiringTypeDto.html",[216,0.21,495,2.932]],["body/interfaces/HiringTypeDto.html",[3,0.139,4,0.139,5,0.124,7,0.186,8,0.675,17,0.265,18,0.01,19,0.449,24,0.559,29,1.328,48,1.693,66,0.139,67,0.007,68,0.009,69,0.007,216,0.286,218,1.538,226,1.144,262,3.213,263,1.62,266,1.62,495,4.904,496,5.079]],["title/interfaces/IGoogleProfile.html",[216,0.21,497,3.39]],["body/interfaces/IGoogleProfile.html",[3,0.1,4,0.1,5,0.089,7,0.133,8,0.543,17,0.267,18,0.011,19,0.322,24,0.573,29,1.168,30,0.737,66,0.1,67,0.005,68,0.007,69,0.005,216,0.205,218,1.102,226,1.005,246,3.001,374,3.933,455,3.779,466,6.196,497,4.561,498,3.638,499,7.057,500,7.057,501,7.057,502,7.057,503,7.057,504,7.057,505,7.057]],["title/classes/KeyValuePair.html",[0,0.115,506,3.39]],["body/classes/KeyValuePair.html",[0,0.153,2,1.351,3,0.137,4,0.137,5,0.122,7,0.183,8,0.667,17,0.246,18,0.011,19,0.441,20,3.054,21,1.021,28,1.891,29,0.939,30,0.479,31,6.086,51,1.153,66,0.137,67,0.007,68,0.008,69,0.007,126,2.698,506,5.604,507,4.982,508,7.024,509,8.462,510,8.619,511,5.674,512,5.674,513,5.674,514,5.674,515,5.674]],["title/classes/Listing.html",[0,0.115,516,2.184]],["body/classes/Listing.html",[0,0.057,2,0.5,3,0.051,4,0.051,5,0.045,7,0.068,8,0.325,17,0.281,18,0.011,19,0.163,21,1.109,24,0.563,29,0.908,30,0.581,37,2.827,44,0.312,48,1.006,51,1.227,59,1.321,66,0.051,67,0.003,68,0.004,69,0.003,74,0.729,147,1.83,156,0.671,158,1.327,216,0.104,220,4.051,221,3.788,222,4.051,223,4.051,224,3.072,225,4.051,226,0.782,227,4.051,228,3.788,229,2.94,230,4.051,231,3.788,232,4.051,233,3.788,234,4.38,235,2.712,236,3.788,237,3.569,238,4.051,239,3.072,240,4.051,241,3.788,242,4.38,243,3.788,244,4.051,245,4.051,246,1.983,259,1.088,263,0.873,266,0.873,277,0.528,278,0.975,279,0.514,284,0.528,285,0.528,286,1.238,287,0.528,289,2.06,290,1.82,291,0.528,351,1.83,516,1.756,517,1.548,518,3.191,519,2.098,520,2.098,521,2.098,522,2.098,523,2.098,524,2.098,525,2.098,526,2.098,527,2.098,528,2.098,529,2.098,530,2.098,531,2.098,532,2.098,533,2.098,534,2.098,535,2.098,536,2.098,537,2.098,538,2.098,539,2.098,540,2.098,541,2.098,542,2.098,543,2.098,544,2.098,545,2.098,546,2.098,547,2.098,548,2.098,549,1.674,550,1.842,551,2.069,552,2.522,553,2.222,554,3.191,555,1.842,556,1.842,557,1.842,558,1.842,559,3.679,560,1.548,561,2.522,562,1.364]],["title/interfaces/ListingAttributes.html",[216,0.21,518,3.135]],["body/interfaces/ListingAttributes.html",[0,0.062,3,0.055,4,0.055,5,0.049,7,0.074,8,0.349,17,0.282,18,0.011,19,0.178,24,0.573,29,1.014,30,0.598,37,2.984,44,0.336,48,0.741,51,1.157,59,1.344,66,0.055,67,0.003,68,0.004,69,0.003,74,0.489,147,2.044,156,0.45,158,0.828,216,0.113,218,0.61,220,4.523,221,4.23,222,4.523,223,4.523,224,3.43,225,4.523,226,0.874,227,4.523,228,4.23,229,3.283,230,4.523,231,4.23,232,4.523,233,4.23,234,4.891,235,3.028,236,4.23,237,3.985,238,4.523,239,3.43,240,4.523,241,4.23,242,4.891,243,4.23,244,4.523,245,4.523,246,2.408,259,0.924,263,0.463,266,0.463,277,0.577,278,1.035,279,0.561,284,0.577,285,0.577,286,1.295,287,0.577,289,2.086,290,1.846,291,0.577,351,1.967,516,1.178,517,1.691,518,3.389,549,1.829,550,2.013,551,2.146,552,2.709,553,2.387,554,3.389,555,2.013,556,2.013,557,2.013,558,2.013,559,3.875,560,1.691,561,2.709,562,1.49]],["title/controllers/ListingController.html",[175,1.881,563,3.135]],["body/controllers/ListingController.html",[0,0.046,3,0.041,4,0.041,5,0.036,7,0.055,11,1.013,14,3.321,17,0.229,18,0.011,19,0.379,20,1.955,21,0.855,24,0.549,28,2.128,29,1.056,30,0.539,32,2.552,37,1.931,42,3.876,44,0.628,55,3.235,57,2.927,59,0.488,63,3.123,66,0.041,67,0.008,68,0.003,69,0.002,82,0.565,125,0.75,147,2.128,157,1.102,158,0.382,162,1.169,166,0.908,175,1.267,180,3.28,182,3.224,187,3.444,190,1.25,191,1.763,192,1.044,193,4.269,194,0.993,197,4.15,217,4.554,224,4.22,226,1.065,249,2.837,255,2.497,286,0.382,290,0.382,323,2.416,388,4.404,389,4.964,408,1.25,410,1.169,414,2.112,415,1.25,516,3.97,562,4.269,563,2.112,564,1.488,565,3.718,566,3.718,567,3.718,568,2.863,569,3.718,570,3.718,571,3.718,572,3.718,573,3.718,574,3.718,575,1.695,576,3.046,577,5.206,578,2.863,579,3.264,580,4.729,581,4.227,582,1.488,583,1.695,584,1.695,585,4.907,586,5.093,587,1.695,588,3.837,589,5.368,590,4.227,591,1.695,592,1.695,593,1.695,594,4.369,595,4.883,596,1.695,597,1.695,598,1.695,599,1.695,600,1.695,601,1.695,602,1.695,603,1.695,604,1.695,605,1.695,606,3.224,607,3.224,608,3.837,609,5.298,610,1.695,611,1.695,612,1.695,613,3.486,614,3.603,615,2.514,616,2.514,617,2.514,618,2.514,619,1.488,620,2.514,621,1.695,622,1.695,623,1.695,624,1.695,625,3.264,626,3.603,627,2.514,628,3.837,629,2.514,630,1.488,631,1.695,632,1.695,633,1.695,634,2.284,635,2.514,636,1.488,637,1.695,638,1.695,639,1.695,640,4.369,641,4.883,642,2.863,643,1.695,644,1.695,645,1.695,646,1.695,647,1.488,648,1.352,649,1.488,650,4.845,651,3.909,652,1.488,653,1.695,654,1.488,655,1.169,656,1.695,657,1.25,658,1.488,659,1.695,660,1.695,661,1.102,662,1.695,663,1.695,664,1.102,665,1.352,666,1.695,667,1.488,668,1.695,669,3.486,670,4.5,671,1.488,672,1.695,673,1.695,674,1.695,675,1.044,676,2.863,677,2.863,678,1.695,679,1.488,680,1.695,681,3.837,682,1.695,683,1.695,684,1.695,685,1.695,686,1.488,687,1.695,688,1.695,689,1.695,690,1.695,691,1.695,692,1.695,693,1.695,694,1.695,695,1.695,696,1.695,697,1.975,698,1.695,699,1.695,700,2.514,701,1.488,702,1.488,703,1.695,704,1.25,705,1.695,706,1.695,707,1.695,708,1.352,709,1.695,710,1.695,711,1.695]],["title/interfaces/ListingDto.html",[216,0.21,655,2.932]],["body/interfaces/ListingDto.html",[3,0.072,4,0.072,5,0.064,7,0.097,8,0.431,17,0.284,18,0.011,19,0.234,24,0.581,29,1.006,30,0.689,37,3.014,48,1.384,66,0.072,67,0.004,68,0.005,69,0.004,147,2.026,216,0.149,218,0.8,220,4.485,221,4.194,222,4.485,223,4.485,224,3.401,225,4.485,226,0.866,227,4.485,228,4.194,229,3.256,230,4.485,231,4.194,232,4.485,233,4.194,235,3.003,236,4.194,237,3.952,238,4.485,239,3.401,240,4.485,241,4.194,243,4.194,244,4.485,245,4.485,246,3.438,263,1.227,266,1.227,655,3.129,712,2.641,713,5.338,714,6.079,715,6.079,716,5.338,717,6.079,718,4.485,719,6.079,720,6.079,721,4.85,722,5.338,723,6.079,724,5.338]],["title/classes/ListingFollower.html",[0,0.115,725,3.135]],["body/classes/ListingFollower.html",[0,0.126,2,1.109,3,0.112,4,0.112,5,0.1,7,0.15,8,0.588,17,0.268,18,0.011,19,0.362,21,1.032,24,0.538,30,0.522,44,0.565,48,1.494,51,1.195,59,1.054,66,0.112,67,0.006,68,0.007,69,0.006,74,1.32,156,1.214,158,1.786,216,0.23,226,1.098,255,3.411,259,1.748,263,1.402,266,1.402,277,1.171,278,1.566,279,1.14,284,1.171,285,1.171,286,1.394,287,1.171,289,1.556,290,1.394,291,1.171,551,2.062,576,3.085,725,4.564,726,3.434,727,5.126,728,4.655,729,4.655,730,4.655,731,4.655,732,4.655,733,3.714,734,4.087,735,4.087]],["title/interfaces/ListingFollowerAttributes.html",[216,0.21,727,3.135]],["body/interfaces/ListingFollowerAttributes.html",[0,0.136,3,0.121,4,0.121,5,0.107,7,0.162,8,0.617,17,0.265,18,0.011,19,0.39,24,0.557,30,0.549,44,0.594,48,1.311,51,1.09,59,1.106,66,0.121,67,0.006,68,0.008,69,0.006,74,1.07,156,0.984,158,1.464,216,0.248,218,1.333,226,1.152,255,3.58,259,1.634,263,1.012,266,1.012,277,1.262,278,1.624,279,1.228,284,1.262,285,1.262,286,1.464,287,1.262,289,1.634,290,1.464,291,1.262,551,2.165,576,3.238,725,3.7,726,3.7,727,5.316,733,4.001,734,4.404,735,4.404]],["title/modules/ListingModule.html",[92,1.648,113,2.762]],["body/modules/ListingModule.html",[0,0.115,3,0.102,4,0.102,5,0.091,11,1.498,17,0.136,18,0.011,21,0.567,28,1.412,29,0.701,30,0.358,32,1.498,33,2.37,44,0.735,51,0.802,66,0.102,67,0.005,68,0.007,69,0.005,82,1.412,92,2.568,93,4.746,94,2.177,95,2.177,96,2.37,97,2.37,98,2.177,99,3.705,100,3.705,104,3.247,105,2.269,106,2.37,113,5.556,114,4.746,116,4.516,118,3.575,119,3.126,122,3.38,123,3.38,125,2.569,127,2.609,156,0.832,204,4.312,212,2.754,214,3.773,313,4.312,323,5.457,332,4.914,333,2.923,335,2.923,563,4.886,652,3.72,736,3.72,737,3.72,738,3.72,739,4.237,740,4.237,741,4.283,742,4.237,743,3.126,744,4.237,745,3.38,746,3.72,747,5.805,748,5.686,749,4.631,750,6.622,751,3.72,752,4.631,753,4.237,754,3.38]],["title/classes/ListingReview.html",[0,0.115,697,2.932]],["body/classes/ListingReview.html",[0,0.101,2,0.891,3,0.09,4,0.09,5,0.08,7,0.12,8,0.505,17,0.276,18,0.011,19,0.29,21,1.076,24,0.557,30,0.449,37,2.257,44,0.486,48,1.362,51,1.214,59,1.262,66,0.09,67,0.004,68,0.006,69,0.005,74,1.135,156,1.044,158,1.67,216,0.185,226,1.016,255,3.155,259,1.558,263,1.25,266,1.25,277,0.941,278,1.396,279,0.915,284,0.941,285,0.941,286,1.199,287,0.941,289,1.918,290,1.718,291,0.941,551,2.376,561,2.759,576,2.854,697,3.671,755,2.759,756,4.57,757,5.26,758,5.26,759,5.26,760,5.26,761,5.26,762,3.74,763,3.74,764,3.74,765,3.74,766,3.74,767,3.74,768,3.74,769,3.74,770,3.74,771,3.74,772,2.984,773,3.284,774,3.284,775,3.284]],["title/interfaces/ListingReviewAttributes.html",[216,0.21,756,3.135]],["body/interfaces/ListingReviewAttributes.html",[0,0.109,3,0.097,4,0.097,5,0.087,7,0.13,8,0.534,17,0.276,18,0.011,19,0.314,24,0.57,30,0.475,37,2.546,44,0.514,48,1.135,51,1.129,59,1.294,66,0.097,67,0.005,68,0.007,69,0.005,74,0.863,156,0.794,158,1.268,216,0.2,218,1.076,226,1.083,255,3.363,259,1.415,263,0.817,266,0.817,277,1.018,278,1.457,279,0.991,284,1.018,285,1.018,286,1.268,287,1.018,289,1.961,290,1.757,291,1.018,551,2.447,561,2.985,576,3.042,697,2.792,755,2.985,756,4.769,757,5.606,758,5.606,759,5.606,760,5.606,761,5.606,772,3.228,773,3.553,774,3.553,775,3.553]],["title/interfaces/ListingReviewDto.html",[216,0.21,661,2.762]],["body/interfaces/ListingReviewDto.html",[3,0.13,4,0.13,5,0.115,7,0.173,8,0.645,17,0.273,18,0.011,19,0.418,24,0.577,37,2.714,66,0.13,67,0.006,68,0.008,69,0.007,216,0.266,218,1.43,226,1.114,255,3.462,576,3.132,661,4.416,757,5.771,758,5.771,759,5.771,760,5.771,761,5.771,776,4.724]],["title/interfaces/ListingReviewDto-1.html",[162,2.442,216,0.175,661,2.301]],["body/interfaces/ListingReviewDto-1.html",[3,0.121,4,0.121,5,0.108,7,0.162,8,0.618,17,0.276,18,0.011,19,0.39,24,0.576,37,2.629,48,1.633,66,0.121,67,0.006,68,0.008,69,0.006,216,0.248,218,1.337,226,1.087,255,3.376,263,1.54,266,1.54,576,3.054,661,4.229,757,5.628,758,5.628,759,5.628,760,5.628,761,5.628,777,4.414,778,7.628]],["title/classes/ListingType.html",[0,0.115,779,2.932]],["body/classes/ListingType.html",[0,0.114,2,1.005,3,0.102,4,0.102,5,0.09,7,0.136,8,0.55,9,2.925,17,0.27,18,0.011,19,0.328,21,1.055,24,0.527,30,0.601,44,0.604,48,1.435,51,1.199,59,0.986,66,0.102,67,0.005,68,0.007,69,0.005,74,1.235,156,1.136,158,1.836,216,0.208,226,1.097,259,1.663,261,3.264,262,2.983,263,1.334,266,1.334,267,2.743,276,2.859,277,1.062,278,1.49,279,1.033,282,2.26,284,1.062,285,1.062,286,1.305,287,1.062,289,1.457,290,1.305,291,1.062,294,2.084,295,2.084,296,1.538,351,2.26,551,1.406,779,3.994,780,3.113,781,4.875,782,5.945,783,5.272,784,4.219,785,4.219,786,4.219,787,4.219,788,4.219,789,4.07,790,4.219,791,4.219,792,3.705,793,3.366,794,3.705,795,3.705,796,3.705,797,3.113]],["title/interfaces/ListingTypeAttributes.html",[216,0.21,781,3.135]],["body/interfaces/ListingTypeAttributes.html",[0,0.129,3,0.114,4,0.114,5,0.102,7,0.153,8,0.596,9,2.103,17,0.262,18,0.011,19,0.369,24,0.553,30,0.529,44,0.642,48,1.266,51,1.122,59,1.068,66,0.114,67,0.006,68,0.008,69,0.006,74,1.014,156,0.933,158,1.582,216,0.235,218,1.263,226,1.158,259,1.578,261,2.347,262,3.19,263,0.959,266,0.959,276,3.097,277,1.195,278,1.582,279,1.163,282,2.544,284,1.195,285,1.195,286,1.413,287,1.195,289,1.578,290,1.413,291,1.195,294,2.347,295,2.347,296,1.732,351,2.544,551,1.584,779,3.278,780,3.505,781,5.178,782,6.357,783,3.79,789,3.861,792,4.172,793,3.79,794,4.172,795,4.172,796,4.172,797,3.505]],["title/interfaces/ListingTypeDto.html",[216,0.21,798,2.932]],["body/interfaces/ListingTypeDto.html",[3,0.139,4,0.139,5,0.124,7,0.186,8,0.675,17,0.265,18,0.01,19,0.449,24,0.559,29,1.328,48,1.693,66,0.139,67,0.007,68,0.009,69,0.007,216,0.286,218,1.538,226,1.144,262,3.213,263,1.62,266,1.62,798,4.904,799,5.079]],["title/classes/LocalizedCurrency.html",[0,0.115,272,2.617]],["body/classes/LocalizedCurrency.html",[0,0.115,2,1.009,3,0.102,4,0.102,5,0.091,7,0.136,8,0.551,17,0.272,18,0.011,19,0.329,21,1.056,24,0.553,29,1.235,30,0.49,44,0.531,48,1.438,51,1.206,59,1.213,66,0.102,67,0.005,68,0.007,69,0.005,74,1.238,156,1.139,158,1.737,216,0.209,226,1.063,259,1.666,263,1.337,266,1.337,272,3.575,277,1.066,278,1.493,279,1.037,284,1.066,285,1.066,286,1.309,287,1.066,289,1.792,290,1.606,291,1.066,296,2.72,297,3.126,300,5.506,491,1.942,551,1.935,800,3.126,801,4.886,802,3.834,803,4.237,804,4.237,805,4.237,806,4.237,807,4.237,808,4.237,809,4.237,810,3.38,811,3.72,812,2.269]],["title/interfaces/LocalizedCurrencyAttributes.html",[216,0.21,801,3.135]],["body/interfaces/LocalizedCurrencyAttributes.html",[0,0.124,3,0.11,4,0.11,5,0.098,7,0.147,8,0.581,17,0.272,18,0.011,19,0.355,24,0.567,29,1.304,30,0.516,44,0.559,48,1.234,51,1.112,59,1.252,66,0.11,67,0.005,68,0.007,69,0.006,74,0.976,156,0.898,158,1.378,216,0.226,218,1.216,226,1.123,259,1.538,263,0.923,266,0.923,272,2.816,277,1.151,278,1.552,279,1.119,284,1.151,285,1.151,286,1.378,287,1.151,289,1.85,290,1.657,291,1.151,296,2.873,297,3.374,300,5.816,491,2.097,551,2.038,800,3.374,801,5.08,802,4.05,810,3.648,811,4.015,812,2.449]],["title/classes/LocalizedDisclaimer.html",[0,0.115,345,2.617]],["body/classes/LocalizedDisclaimer.html",[0,0.12,2,1.056,3,0.107,4,0.107,5,0.095,7,0.143,8,0.569,17,0.27,18,0.011,19,0.345,21,1.046,24,0.547,29,1.254,30,0.506,44,0.548,48,1.465,51,1.201,59,1.155,66,0.107,67,0.005,68,0.007,69,0.005,74,1.278,156,1.176,158,1.761,216,0.219,226,1.08,259,1.706,263,1.369,266,1.369,277,1.116,278,1.529,279,1.086,284,1.116,285,1.116,286,1.35,287,1.116,289,1.706,290,1.529,291,1.116,296,2.764,345,3.689,351,2.376,354,3.273,551,1.479,802,3.896,812,2.376,813,3.273,814,5.003,815,4.436,816,4.436,817,4.436,818,4.436,819,4.436,820,4.436,821,3.539,822,3.895]],["title/interfaces/LocalizedDisclaimerAttributes.html",[216,0.21,814,3.135]],["body/interfaces/LocalizedDisclaimerAttributes.html",[0,0.129,3,0.115,4,0.115,5,0.103,7,0.154,8,0.598,17,0.269,18,0.011,19,0.372,24,0.564,29,1.321,30,0.532,44,0.576,48,1.271,51,1.103,59,1.199,66,0.115,67,0.006,68,0.008,69,0.006,74,1.021,156,0.939,158,1.42,216,0.236,218,1.272,226,1.138,259,1.585,263,0.966,266,0.966,277,1.204,278,1.587,279,1.171,284,1.204,285,1.204,286,1.42,287,1.204,289,1.772,290,1.587,291,1.204,296,2.91,345,2.946,351,2.562,354,3.529,551,1.595,802,4.102,812,2.562,813,3.529,814,5.195,821,3.816,822,4.201]],["title/classes/LocalizedHiringType.html",[0,0.115,485,2.617]],["body/classes/LocalizedHiringType.html",[0,0.12,2,1.056,3,0.107,4,0.107,5,0.095,7,0.143,8,0.569,17,0.27,18,0.011,19,0.345,21,1.046,24,0.547,29,1.254,30,0.506,44,0.548,48,1.465,51,1.201,59,1.155,66,0.107,67,0.005,68,0.007,69,0.005,74,1.278,156,1.176,158,1.761,216,0.219,226,1.08,259,1.706,263,1.369,266,1.369,277,1.116,278,1.529,279,1.086,284,1.116,285,1.116,286,1.35,287,1.116,289,1.706,290,1.529,291,1.116,296,2.764,485,3.689,491,2.034,494,3.273,551,1.479,802,3.896,812,2.376,823,3.273,824,5.003,825,4.436,826,4.436,827,4.436,828,4.436,829,4.436,830,4.436,831,3.539,832,3.895]],["title/interfaces/LocalizedHiringTypeAttributes.html",[216,0.21,824,3.135]],["body/interfaces/LocalizedHiringTypeAttributes.html",[0,0.129,3,0.115,4,0.115,5,0.103,7,0.154,8,0.598,17,0.269,18,0.011,19,0.372,24,0.564,29,1.321,30,0.532,44,0.576,48,1.271,51,1.103,59,1.199,66,0.115,67,0.006,68,0.008,69,0.006,74,1.021,156,0.939,158,1.42,216,0.236,218,1.272,226,1.138,259,1.585,263,0.966,266,0.966,277,1.204,278,1.587,279,1.171,284,1.204,285,1.204,286,1.42,287,1.204,289,1.772,290,1.587,291,1.204,296,2.91,485,2.946,491,2.193,494,3.529,551,1.595,802,4.102,812,2.562,823,3.529,824,5.195,831,3.816,832,4.201]],["title/classes/LocalizedListingType.html",[0,0.115,789,2.617]],["body/classes/LocalizedListingType.html",[0,0.12,2,1.056,3,0.107,4,0.107,5,0.095,7,0.143,8,0.569,17,0.27,18,0.011,19,0.345,21,1.046,24,0.547,29,1.254,30,0.506,44,0.548,48,1.465,51,1.201,59,1.155,66,0.107,67,0.005,68,0.007,69,0.005,74,1.278,156,1.176,158,1.761,216,0.219,226,1.08,259,1.706,263,1.369,266,1.369,277,1.116,278,1.529,279,1.086,284,1.116,285,1.116,286,1.35,287,1.116,289,1.706,290,1.529,291,1.116,296,2.764,491,2.034,551,1.479,789,3.689,797,3.273,802,3.896,812,2.376,833,3.273,834,5.003,835,4.436,836,4.436,837,4.436,838,4.436,839,4.436,840,4.436,841,3.539,842,3.895]],["title/interfaces/LocalizedListingTypeAttributes.html",[216,0.21,834,3.135]],["body/interfaces/LocalizedListingTypeAttributes.html",[0,0.129,3,0.115,4,0.115,5,0.103,7,0.154,8,0.598,17,0.269,18,0.011,19,0.372,24,0.564,29,1.321,30,0.532,44,0.576,48,1.271,51,1.103,59,1.199,66,0.115,67,0.006,68,0.008,69,0.006,74,1.021,156,0.939,158,1.42,216,0.236,218,1.272,226,1.138,259,1.585,263,0.966,266,0.966,277,1.204,278,1.587,279,1.171,284,1.204,285,1.204,286,1.42,287,1.204,289,1.772,290,1.587,291,1.204,296,2.91,491,2.193,551,1.595,789,2.946,797,3.529,802,4.102,812,2.562,833,3.529,834,5.195,841,3.816,842,4.201]],["title/classes/LocalizedPriceType.html",[0,0.115,843,2.617]],["body/classes/LocalizedPriceType.html",[0,0.115,2,1.009,3,0.102,4,0.102,5,0.091,7,0.136,8,0.551,17,0.272,18,0.011,19,0.329,21,1.056,24,0.553,29,1.235,30,0.49,44,0.531,48,1.438,51,1.206,59,1.213,66,0.102,67,0.005,68,0.007,69,0.005,74,1.238,156,1.139,158,1.737,216,0.209,226,1.063,259,1.666,263,1.337,266,1.337,277,1.066,278,1.493,279,1.037,284,1.066,285,1.066,286,1.309,287,1.066,289,1.792,290,1.606,291,1.066,296,2.72,491,2.662,551,1.412,802,3.834,812,2.269,843,3.575,844,3.126,845,4.886,846,5.506,847,4.237,848,4.237,849,4.237,850,4.237,851,4.237,852,4.237,853,4.237,854,3.38,855,3.72,856,3.126]],["title/interfaces/LocalizedPriceTypeAttributes.html",[216,0.21,845,3.135]],["body/interfaces/LocalizedPriceTypeAttributes.html",[0,0.124,3,0.11,4,0.11,5,0.098,7,0.147,8,0.581,17,0.272,18,0.011,19,0.355,24,0.567,29,1.304,30,0.516,44,0.559,48,1.234,51,1.112,59,1.252,66,0.11,67,0.005,68,0.007,69,0.006,74,0.976,156,0.898,158,1.378,216,0.226,218,1.216,226,1.123,259,1.538,263,0.923,266,0.923,277,1.151,278,1.552,279,1.119,284,1.151,285,1.151,286,1.378,287,1.151,289,1.85,290,1.657,291,1.151,296,2.873,491,2.803,551,1.524,802,4.05,812,2.449,843,2.816,844,3.374,845,5.08,846,5.816,854,3.648,855,4.015,856,3.374]],["title/classes/LoginUserDto.html",[0,0.115,857,3.135]],["body/classes/LoginUserDto.html",[0,0.196,2,1.425,3,0.144,4,0.144,5,0.128,7,0.193,8,0.689,17,0.234,18,0.011,19,0.465,21,0.972,24,0.525,44,0.547,66,0.144,67,0.007,68,0.009,69,0.007,180,3.729,455,4.183,857,5.355,858,5.255,859,5.763,860,6.859,861,5.985,862,5.763,863,5.985,864,3.89]],["title/controllers/LookupsController.html",[175,1.881,865,3.135]],["body/controllers/LookupsController.html",[0,0.085,3,0.075,4,0.075,5,0.067,7,0.101,11,1.653,14,3.375,17,0.232,18,0.011,19,0.515,20,2.657,21,0.888,24,0.519,28,2.212,29,1.098,30,0.56,32,2.885,42,3.965,44,0.678,55,2.937,63,3.156,66,0.075,67,0.004,68,0.006,69,0.004,82,1.043,125,1.385,147,2.212,157,2.035,158,0.706,175,2.068,180,3.41,187,5.016,191,2.878,192,1.928,193,4.689,194,1.834,197,4.314,224,4.317,237,4.031,257,3.038,292,2.309,298,2.159,337,4.031,355,2.159,388,4.578,397,2.497,410,2.159,416,3.277,417,2.497,425,2.749,495,2.159,516,3.187,585,5.472,586,6.156,589,6.156,648,2.497,650,5.322,651,2.309,669,2.497,798,2.159,865,3.448,866,2.749,867,4.104,868,4.104,869,4.104,870,4.91,871,4.104,872,2.749,873,3.13,874,3.13,875,3.13,876,2.749,877,3.13,878,3.13,879,3.13,880,2.749,881,6.202,882,5.592,883,3.13,884,6.776,885,3.13,886,3.13,887,3.13,888,4.673,889,3.13,890,2.749,891,3.13,892,3.13,893,2.749,894,2.749,895,2.749,896,2.749,897,2.159,898,2.749,899,3.13,900,3.13,901,3.13,902,3.13,903,3.13,904,3.13,905,3.13,906,3.13,907,3.13,908,3.13,909,3.13,910,3.13,911,4.673,912,3.13,913,3.13,914,2.749]],["title/modules/LookupsModule.html",[92,1.648,114,2.617]],["body/modules/LookupsModule.html",[0,0.125,3,0.111,4,0.111,5,0.099,11,1.628,17,0.148,18,0.011,21,0.616,28,1.534,29,0.762,30,0.389,32,1.628,33,2.575,44,0.737,51,0.848,66,0.111,67,0.006,68,0.007,69,0.006,82,1.534,92,2.679,94,2.365,95,2.365,96,2.575,97,2.575,98,2.365,99,3.865,100,3.865,104,3.435,105,2.465,106,2.575,114,5.202,116,4.628,118,3.781,119,3.396,125,2.718,127,2.835,156,0.904,204,4.418,212,2.992,214,3.991,313,3.435,332,5.085,333,3.176,335,3.176,381,5.097,416,4.985,417,3.672,741,4.53,743,4.53,745,3.672,748,4.53,749,3.672,754,3.672,865,5.097,915,4.042,916,4.042,917,4.603,918,4.042,919,4.603,920,4.603,921,4.603,922,4.603,923,4.042,924,4.042,925,4.603,926,4.603]],["title/injectables/LookupsService.html",[70,1.758,416,2.49]],["body/injectables/LookupsService.html",[0,0.044,1,1.047,3,0.039,4,0.039,5,0.035,7,0.052,11,0.97,14,3.186,17,0.262,18,0.011,21,0.863,24,0.551,25,3.399,28,2.087,29,1.193,30,0.529,32,2.214,42,3.399,44,0.688,51,1.1,55,3.3,57,3.855,59,0.878,63,3.472,66,0.039,67,0.008,68,0.003,69,0.002,70,1.134,72,0.901,76,0.863,82,0.537,83,2.408,84,1.047,85,1.188,90,1.111,91,1.414,126,1.703,189,1.414,226,0.735,246,1.257,257,2.327,262,2.065,263,1.041,264,2.188,265,1.188,266,1.041,272,1.689,286,0.363,290,0.618,292,1.188,296,1.305,298,1.111,300,1.188,313,1.534,337,1.782,340,1.285,345,2.205,352,2.023,355,1.111,374,1.214,383,2.408,385,2.408,387,2.408,390,5.937,394,3.805,401,2.408,414,1.188,415,1.188,416,1.607,426,6.411,447,3.144,477,1.782,480,1.285,485,2.205,495,1.111,585,4.755,779,2.47,782,3.372,783,2.188,789,2.919,798,1.111,802,2.65,843,2.205,846,1.188,867,2.408,868,2.408,869,2.408,870,3.144,871,2.408,872,2.408,876,2.408,880,2.408,890,2.408,893,1.414,894,1.414,895,1.414,896,1.414,897,1.111,898,1.414,927,1.285,928,2.742,929,2.742,930,3.581,931,1.611,932,1.611,933,2.742,934,1.611,935,2.742,936,1.611,937,1.611,938,1.611,939,1.611,940,1.611,941,1.611,942,1.611,943,1.611,944,1.611,945,4.227,946,1.611,947,1.611,948,1.611,949,1.782,950,1.611,951,1.611,952,1.611,953,1.611,954,1.611,955,1.611,956,1.611,957,1.611,958,1.285,959,1.414,960,5.158,961,1.611,962,5.158,963,5.158,964,4.227,965,2.742,966,2.742,967,2.742,968,3.144,969,4.227,970,2.742,971,2.742,972,2.742,973,2.742,974,2.742,975,2.742,976,5.158,977,2.742,978,5.158,979,1.611,980,1.611,981,2.742,982,1.611,983,1.285,984,1.611,985,2.742,986,1.611,987,1.611,988,1.611,989,1.611,990,3.581,991,3.581,992,1.611,993,1.611,994,1.611,995,1.611,996,1.611,997,1.611,998,1.611,999,1.414,1000,1.611,1001,1.611,1002,1.611,1003,1.611,1004,1.611,1005,1.611,1006,1.611,1007,1.611,1008,1.611,1009,2.742,1010,2.742,1011,1.611,1012,1.611,1013,2.742,1014,1.611,1015,1.611,1016,2.742,1017,1.611,1018,1.611,1019,1.611,1020,1.611,1021,1.611,1022,1.611,1023,1.611,1024,1.611,1025,2.742,1026,1.611,1027,1.611,1028,1.611,1029,1.611,1030,1.611,1031,1.611,1032,5.158,1033,1.611,1034,1.611,1035,1.611,1036,1.611,1037,1.611,1038,1.611,1039,4.74,1040,3.581,1041,1.611,1042,1.611,1043,1.285,1044,1.611,1045,1.285]],["title/injectables/MailManager.html",[70,1.758,209,2.932]],["body/injectables/MailManager.html",[0,0.141,3,0.125,4,0.125,5,0.112,7,0.168,11,2.352,14,3.033,17,0.168,18,0.011,19,0.404,21,0.891,24,0.549,28,1.735,29,1.321,30,0.439,32,1.84,44,0.67,51,1.013,55,2.303,57,2.386,59,0.886,66,0.125,67,0.006,68,0.008,69,0.006,70,2.752,72,2.911,82,1.735,126,3.487,209,4.589,262,2.083,455,4.138,1046,4.57,1047,7.332,1048,5.204,1049,5.204,1050,7.727,1051,5.204,1052,5.204,1053,5.204,1054,5.841,1055,5.204,1056,4.57,1057,5.204,1058,6.652,1059,5.204,1060,5.204,1061,5.204,1062,5.204,1063,5.204,1064,5.204,1065,5.204,1066,5.204,1067,5.204]],["title/classes/NoDataResult.html",[0,0.115,1068,3.39]],["body/classes/NoDataResult.html",[0,0.153,2,1.344,3,0.136,4,0.136,5,0.121,7,0.182,8,0.665,17,0.245,18,0.011,19,0.591,20,2.803,21,1.065,24,0.365,25,3.597,44,0.516,51,1.152,66,0.136,67,0.01,68,0.008,69,0.007,74,1.493,76,3.749,126,3.619,147,2.333,374,3.098,375,5.615,376,4.163,377,4.163,378,4.163,1068,5.585,1069,4.955,1070,5.643,1071,5.643]],["title/classes/NotFoundResult.html",[0,0.115,1072,3.39]],["body/classes/NotFoundResult.html",[0,0.153,2,1.344,3,0.136,4,0.136,5,0.121,7,0.182,8,0.665,17,0.245,18,0.011,19,0.591,20,2.803,21,1.065,24,0.365,25,3.597,44,0.516,51,1.152,66,0.136,67,0.01,68,0.008,69,0.007,74,1.493,76,3.749,126,3.619,147,2.333,374,3.098,375,5.615,376,4.163,377,4.163,378,4.163,1072,5.585,1073,4.955,1074,5.643,1075,5.643]],["title/classes/OperationResult.html",[0,0.115,664,2.762]],["body/classes/OperationResult.html",[0,0.158,2,1.389,3,0.14,4,0.14,5,0.125,7,0.188,8,0.679,17,0.23,18,0.01,19,0.555,20,2.336,21,1.034,24,0.521,30,0.68,51,1.196,66,0.14,67,0.007,68,0.009,69,0.007,80,5.699,262,3.092,286,1.611,437,6.162,664,4.644,1076,5.122,1077,5.834,1078,5.834,1079,5.834]],["title/classes/PasswordRecoveryToken.html",[0,0.115,1080,2.762]],["body/classes/PasswordRecoveryToken.html",[0,0.135,2,1.189,3,0.12,4,0.12,5,0.107,7,0.161,8,0.615,17,0.265,18,0.011,19,0.388,21,0.962,24,0.545,30,0.547,44,0.592,51,1.164,59,1.103,66,0.12,67,0.006,68,0.008,69,0.006,74,1.382,156,1.271,163,5.124,216,0.246,226,1.123,259,1.809,277,1.256,278,1.62,279,1.222,284,1.256,285,1.256,286,1.46,287,1.256,289,1.629,290,1.46,291,1.256,491,2.288,576,3.156,1080,4.209,1081,3.682,1082,5.303,1083,4.991,1084,4.991,1085,4.991,1086,3.982,1087,4.383,1088,3.682,1089,3.682]],["title/interfaces/PasswordRecoveryTokenAttributes.html",[216,0.21,1082,3.135]],["body/interfaces/PasswordRecoveryTokenAttributes.html",[0,0.138,3,0.123,4,0.123,5,0.11,7,0.165,8,0.625,17,0.266,18,0.011,19,0.397,24,0.559,30,0.556,44,0.601,51,1.005,59,1.12,66,0.123,67,0.006,68,0.008,69,0.006,74,1.091,156,1.004,163,5.285,216,0.253,218,1.36,226,1.158,259,1.655,277,1.287,278,1.639,279,1.252,284,1.287,285,1.287,286,1.483,287,1.287,289,1.655,290,1.483,291,1.287,491,2.345,576,3.255,1080,3.324,1081,3.773,1082,5.365,1086,4.08,1087,4.491,1088,3.773,1089,3.773]],["title/classes/PriceType.html",[0,0.115,949,2.762]],["body/classes/PriceType.html",[0,0.119,2,1.052,3,0.106,4,0.106,5,0.095,7,0.142,8,0.567,9,2.995,17,0.268,18,0.011,19,0.343,21,1.045,24,0.505,30,0.612,44,0.619,48,1.463,51,1.192,59,0.752,66,0.106,67,0.005,68,0.007,69,0.005,74,1.274,156,1.172,158,1.854,216,0.218,226,1.112,259,1.702,261,3.342,262,3.031,263,1.366,266,1.366,267,2.871,276,2.95,277,1.111,278,1.525,279,1.081,282,2.366,284,1.111,285,1.111,286,1.346,287,1.111,289,1.111,290,0.996,291,1.111,294,2.182,295,2.182,296,1.61,351,2.366,843,4.167,856,3.259,949,3.882,983,5.398,1090,3.259,1091,4.992,1092,4.417,1093,4.417,1094,4.417,1095,4.417,1096,4.417,1097,4.417,1098,3.878,1099,3.524,1100,3.878,1101,3.878,1102,3.878]],["title/interfaces/PriceTypeAttributes.html",[216,0.21,1091,3.135]],["body/interfaces/PriceTypeAttributes.html",[0,0.135,3,0.12,4,0.12,5,0.107,7,0.16,8,0.614,9,2.204,17,0.254,18,0.011,19,0.387,24,0.539,30,0.546,44,0.656,48,1.305,51,1.115,59,0.848,66,0.12,67,0.006,68,0.008,69,0.006,74,1.062,156,0.977,158,1.619,216,0.246,218,1.324,226,1.171,259,1.627,261,2.459,262,3.232,263,1.005,266,1.005,276,3.194,277,1.253,278,1.619,279,1.219,282,2.667,284,1.253,285,1.253,286,1.458,287,1.253,289,1.253,290,1.122,291,1.253,294,2.459,295,2.459,296,1.815,351,2.667,843,3.982,856,3.674,949,3.236,983,3.972,1090,3.674,1091,5.297,1098,4.372,1099,3.972,1100,4.372,1101,4.372,1102,4.372]],["title/interfaces/PriceTypeDto.html",[216,0.21,897,2.932]],["body/interfaces/PriceTypeDto.html",[3,0.136,4,0.136,5,0.121,7,0.182,8,0.665,17,0.269,18,0.01,19,0.438,24,0.566,29,1.316,48,1.683,66,0.136,67,0.007,68,0.008,69,0.007,216,0.279,218,1.5,226,1.134,262,3.186,263,1.606,266,1.606,846,5.871,897,4.829,1103,4.955]],["title/injectables/PrismaService.html",[70,1.758,210,2.932]],["body/injectables/PrismaService.html",[0,0.155,3,0.138,4,0.138,5,0.123,7,0.184,11,2.497,14,3.46,18,0.011,21,0.945,32,2.497,44,0.645,63,3.357,66,0.138,67,0.007,68,0.009,69,0.007,70,2.92,72,3.2,74,1.506,82,1.907,156,1.123,210,4.871,1104,5.023,1105,7.657,1106,8.365,1107,8.365,1108,5.721,1109,5.721,1110,5.023,1111,5.721,1112,5.721]],["title/classes/RegisterUser.html",[0,0.115,1113,3.39]],["body/classes/RegisterUser.html",[0,0.185,2,1.291,3,0.131,4,0.131,5,0.116,7,0.175,8,0.648,17,0.266,18,0.011,19,0.421,21,1.105,24,0.557,29,1.236,44,0.496,66,0.131,67,0.006,68,0.008,69,0.007,180,3.508,226,1.065,246,3.13,455,4.002,859,5.514,860,6.562,862,5.514,864,3.524,1113,5.447,1114,4.761,1115,5.514,1116,5.962,1117,5.422,1118,5.422,1119,5.422,1120,5.422,1121,5.422,1122,5.422]],["title/interfaces/ResetPassword.html",[216,0.21,1123,3.135]],["body/interfaces/ResetPassword.html",[3,0.147,4,0.147,5,0.131,7,0.196,8,0.697,17,0.254,18,0.01,19,0.473,24,0.564,66,0.147,67,0.007,68,0.009,69,0.007,163,5.31,216,0.301,218,1.619,455,4.375,1123,5.411,1124,5.348,1125,8.169]],["title/classes/Result.html",[0,0.115,67,0.005]],["body/classes/Result.html",[0,0.149,2,1.312,3,0.133,4,0.133,5,0.118,7,0.177,8,0.655,17,0.254,18,0.011,19,0.585,20,2.761,21,1.056,24,0.525,25,3.868,28,1.836,29,0.911,30,0.465,51,1.185,66,0.133,67,0.009,68,0.008,69,0.007,76,4.031,126,2.619,147,2.708,374,3.492,1126,4.837,1127,6.896,1128,5.508,1129,5.508,1130,5.508,1131,5.508,1132,5.508]],["title/classes/SearchListingDto.html",[0,0.115,614,3.135]],["body/classes/SearchListingDto.html",[0,0.138,2,1.212,3,0.123,4,0.123,5,0.109,7,0.164,8,0.623,17,0.27,18,0.011,19,0.509,20,2.037,21,1.12,24,0.551,30,0.741,37,2.959,66,0.123,67,0.006,68,0.008,69,0.006,147,2.418,228,5.005,235,3.584,236,5.005,606,5.353,607,5.353,614,4.838,1133,4.469,1134,5.005,1135,7.255,1136,5.089,1137,5.089,1138,5.089,1139,5.089,1140,5.089,1141,5.089,1142,5.089,1143,5.231,1144,5.089]],["title/classes/SearchResultDto.html",[0,0.115,1145,3.135]],["body/classes/SearchResultDto.html",[0,0.161,2,1.417,3,0.143,4,0.143,5,0.128,7,0.192,8,0.687,17,0.233,18,0.011,19,0.605,20,2.895,21,0.968,25,4.004,37,2.169,51,1.167,66,0.143,67,0.007,68,0.009,69,0.007,394,5.336,675,4.454,1145,5.336,1146,5.225,1147,7.792,1148,5.951,1149,5.951]],["title/classes/SearchStoryDto.html",[0,0.115,1150,2.932]],["body/classes/SearchStoryDto.html",[0,0.15,2,1.319,3,0.133,4,0.133,5,0.119,7,0.178,8,0.657,17,0.262,18,0.011,19,0.537,20,2.217,21,1.089,24,0.511,30,0.73,37,3.025,66,0.133,67,0.007,68,0.008,69,0.007,147,2.515,235,3.727,255,3.34,606,5.567,607,5.567,1143,5.519,1150,4.773,1151,4.862,1152,5.538,1153,5.538,1154,5.538,1155,5.538,1156,5.538]],["title/classes/Story.html",[0,0.115,1157,2.762]],["body/classes/Story.html",[0,0.082,2,0.726,3,0.073,4,0.073,5,0.065,7,0.098,8,0.435,17,0.278,18,0.011,19,0.237,21,1.087,24,0.558,30,0.666,37,2.512,44,0.419,48,1.235,51,1.218,59,1.282,66,0.073,67,0.004,68,0.006,69,0.004,74,0.977,147,2.187,156,0.899,158,1.554,216,0.15,226,0.935,229,3.514,235,3.241,239,3.67,249,3.514,250,4.526,251,4.526,252,4.526,253,4.526,254,4.526,255,2.904,256,4.526,259,1.385,263,1.111,266,1.111,277,0.767,278,1.241,279,0.746,284,0.767,285,0.767,286,1.612,287,0.767,289,1.984,290,1.612,291,0.767,374,2.436,551,2.04,552,2.248,553,2.977,554,4.06,559,3.379,675,1.877,1157,2.977,1158,2.248,1159,4.06,1160,3.047,1161,3.047,1162,3.047,1163,3.047,1164,3.047,1165,3.047,1166,3.047,1167,3.047,1168,3.047,1169,3.047,1170,3.047,1171,3.047,1172,3.047,1173,3.047,1174,3.047,1175,2.431,1176,2.676,1177,2.676,1178,2.676,1179,2.676,1180,2.676,1181,2.248]],["title/interfaces/StoryAttributes.html",[216,0.21,1159,3.135]],["body/interfaces/StoryAttributes.html",[0,0.089,3,0.079,4,0.079,5,0.071,7,0.106,8,0.461,17,0.278,18,0.011,19,0.256,24,0.571,30,0.677,37,2.743,44,0.444,48,0.98,51,1.137,59,1.308,66,0.079,67,0.004,68,0.006,69,0.004,74,0.703,147,2.364,156,0.647,158,1.094,216,0.163,218,0.876,226,1.01,229,3.798,235,3.503,239,3.968,249,3.798,250,4.893,251,4.893,252,4.893,253,4.893,254,4.893,255,3.139,256,4.893,259,1.221,263,0.665,266,0.665,277,0.829,278,1.299,279,0.806,284,0.829,285,0.829,286,1.653,287,0.829,289,2.017,290,1.653,291,0.829,374,2.814,551,2.12,552,2.43,553,3.155,554,4.252,559,3.581,675,2.029,1157,2.141,1158,2.43,1159,4.252,1175,2.628,1176,2.893,1177,2.893,1178,2.893,1179,2.893,1180,2.893,1181,2.43]],["title/controllers/StoryController.html",[175,1.881,1182,3.135]],["body/controllers/StoryController.html",[0,0.066,3,0.059,4,0.059,5,0.052,7,0.078,11,1.361,14,3.301,17,0.227,18,0.011,19,0.46,20,2.369,21,0.842,24,0.547,28,2.097,29,1.041,30,0.531,32,2.549,42,3.843,44,0.643,55,3.254,57,2.885,59,0.656,63,3.134,66,0.059,67,0.006,68,0.005,69,0.003,82,0.811,125,1.077,147,2.097,157,1.581,158,0.548,166,1.303,175,1.704,180,3.233,182,2.84,187,3.53,190,1.795,191,2.371,192,1.498,193,4.284,194,1.425,197,4.09,224,4.184,226,1.066,247,4.854,249,2.908,388,4.341,389,4.007,408,1.795,410,1.678,414,2.84,415,1.795,576,2.994,577,4.768,580,4.332,581,4.332,582,2.136,585,5.362,586,5.75,588,3.38,589,5.452,590,3.071,613,4.332,615,3.38,616,3.38,617,3.38,618,3.38,619,2.136,620,3.38,634,3.071,635,3.38,636,2.136,647,2.136,648,1.941,650,4.863,651,4.007,654,2.136,657,1.795,658,2.136,667,2.136,669,4.332,670,4.332,671,2.136,679,2.136,681,4.194,686,2.136,1150,4.082,1157,5.147,1181,5.191,1182,2.84,1183,2.136,1184,4.776,1185,4.194,1186,3.38,1187,4.194,1188,4.194,1189,4.194,1190,2.433,1191,4.768,1192,3.849,1193,3.849,1194,2.433,1195,2.433,1196,2.433,1197,2.433,1198,2.433,1199,2.136,1200,2.433,1201,2.433,1202,2.433,1203,2.433,1204,2.433,1205,2.433,1206,2.433,1207,2.433,1208,2.433,1209,2.433,1210,2.433,1211,2.433,1212,2.433,1213,3.105,1214,2.136,1215,2.136,1216,1.678,1217,2.136,1218,2.136,1219,2.433,1220,2.433,1221,2.433,1222,2.433,1223,2.433,1224,2.433,1225,2.433,1226,2.433,1227,2.433,1228,2.433,1229,2.433,1230,2.433,1231,2.433,1232,2.433,1233,2.433,1234,2.433]],["title/interfaces/StoryDto.html",[216,0.21,1216,2.932]],["body/interfaces/StoryDto.html",[3,0.102,4,0.102,5,0.091,7,0.137,8,0.553,17,0.283,18,0.011,19,0.33,24,0.576,30,0.709,37,2.813,48,1.557,66,0.102,67,0.005,68,0.007,69,0.005,147,2.378,216,0.21,218,1.131,226,1.017,229,3.822,239,3.992,246,3.043,249,3.822,250,4.923,251,4.923,252,4.923,253,4.923,254,4.923,255,3.158,256,4.923,263,1.44,266,1.44,516,3.667,721,5.693,1216,4.016,1235,3.735,1236,6.266,1237,6.266]],["title/modules/StoryModule.html",[92,1.648,115,2.932]],["body/modules/StoryModule.html",[0,0.111,3,0.099,4,0.099,5,0.088,11,1.454,17,0.132,18,0.011,21,0.55,28,1.37,29,0.68,30,0.347,32,1.454,33,2.3,44,0.74,51,0.785,66,0.099,67,0.005,68,0.007,69,0.005,82,1.37,92,2.528,93,4.703,94,2.112,95,2.112,96,2.3,97,2.3,98,2.112,99,3.646,100,3.646,104,3.181,105,2.201,106,2.3,113,4.964,114,4.703,115,5.926,116,4.475,118,3.501,119,3.033,120,3.609,122,3.279,123,3.279,125,2.516,127,2.532,156,0.807,204,4.272,212,2.672,214,3.696,313,4.272,332,4.852,333,2.836,335,2.836,741,4.195,743,3.033,745,3.279,746,3.609,748,5.634,749,4.536,751,3.609,752,4.536,754,3.279,1182,4.809,1213,5.429,1214,3.609,1238,3.609,1239,3.609,1240,3.609,1241,4.111,1242,4.111,1243,4.111,1244,4.111,1245,5.686,1246,6.518,1247,4.111]],["title/injectables/StoryService.html",[70,1.758,1213,2.762]],["body/injectables/StoryService.html",[0,0.05,3,0.044,4,0.044,5,0.04,7,0.059,11,1.088,14,3.203,17,0.212,18,0.011,19,0.143,20,0.739,21,0.855,24,0.543,28,2.128,29,1.09,30,0.539,32,2.174,42,3.685,44,0.632,51,1.042,55,2.915,57,3.577,59,0.524,63,3.508,66,0.044,67,0.006,68,0.004,69,0.002,70,1.272,72,1.033,76,1.647,82,0.615,126,1.463,131,3.815,147,0.615,149,1.621,162,2.728,166,1.647,221,1.273,226,1.085,229,2.117,231,1.273,233,1.273,235,2.733,237,1.2,239,1.033,241,1.273,247,4.049,249,0.988,250,1.273,251,1.273,252,1.273,253,1.273,254,1.273,255,0.817,256,1.273,263,0.798,266,0.373,286,0.693,290,0.891,323,3.815,352,1.362,357,1.362,374,1.361,400,3.472,416,3.243,444,2.701,445,2.701,446,2.701,477,1.2,516,2.37,562,1.999,576,2.556,585,5.343,613,2.454,655,3.535,664,1.999,665,1.472,675,3.408,704,1.362,713,1.621,716,1.621,721,1.472,722,1.621,724,1.621,914,1.621,949,1.2,968,1.621,999,2.701,1043,1.472,1045,1.472,1143,3.154,1145,2.269,1150,3.182,1157,4.662,1181,3.403,1185,3.472,1186,2.701,1187,3.472,1188,3.472,1189,3.472,1191,4.859,1199,2.701,1213,1.999,1215,1.621,1216,2.122,1217,1.621,1218,1.621,1236,1.621,1237,1.621,1248,1.621,1249,3.954,1250,3.076,1251,3.954,1252,1.846,1253,1.846,1254,1.846,1255,1.846,1256,1.846,1257,1.846,1258,1.846,1259,3.076,1260,1.846,1261,3.472,1262,1.846,1263,1.846,1264,1.846,1265,6.384,1266,1.846,1267,1.846,1268,1.846,1269,1.846,1270,1.846,1271,1.846,1272,1.846,1273,1.846,1274,1.846,1275,1.846,1276,1.846,1277,3.472,1278,1.846,1279,3.954,1280,1.846,1281,3.954,1282,1.846,1283,3.076,1284,3.076,1285,1.846,1286,4.612,1287,1.846,1288,1.846,1289,3.076,1290,1.846,1291,1.846,1292,3.954,1293,3.076,1294,1.846,1295,3.954,1296,3.076,1297,1.846,1298,3.076,1299,1.846,1300,1.846,1301,1.846,1302,1.846,1303,3.954,1304,1.846,1305,3.954,1306,1.846,1307,3.076,1308,1.846,1309,1.846,1310,1.846,1311,1.846,1312,3.076,1313,1.846,1314,3.076,1315,1.846,1316,3.076,1317,1.846,1318,3.954,1319,1.846,1320,3.076,1321,1.846,1322,1.846,1323,3.076,1324,1.846,1325,1.846,1326,1.846,1327,1.846,1328,1.846,1329,1.846,1330,1.846,1331,1.846,1332,1.846,1333,1.846,1334,1.846,1335,1.846,1336,1.846,1337,1.846,1338,1.846,1339,1.846,1340,1.846,1341,1.846,1342,1.846,1343,1.846,1344,1.846,1345,1.846,1346,1.846,1347,1.846,1348,1.846,1349,1.846,1350,1.846,1351,1.846,1352,1.846,1353,1.846,1354,1.846,1355,1.621,1356,1.846,1357,1.846,1358,1.846,1359,1.846,1360,1.846,1361,1.846,1362,1.846,1363,1.846,1364,1.846,1365,1.846,1366,1.846,1367,1.846,1368,1.846]],["title/classes/SuccessResult.html",[0,0.115,1369,3.39]],["body/classes/SuccessResult.html",[0,0.149,2,1.312,3,0.133,4,0.133,5,0.118,7,0.177,8,0.655,17,0.254,18,0.011,19,0.585,20,2.761,21,1.056,24,0.356,25,3.543,28,1.836,29,0.911,30,0.465,44,0.504,50,4.394,51,1.145,66,0.133,67,0.01,68,0.008,69,0.007,74,1.471,76,3.693,126,2.619,147,2.298,374,3.052,375,5.554,376,4.064,377,4.064,378,4.064,1369,5.501,1370,4.837,1371,6.896,1372,5.508,1373,6.896,1374,5.508]],["title/interfaces/ToggleListingFollowDto.html",[216,0.21,626,3.135]],["body/interfaces/ToggleListingFollowDto.html",[3,0.147,4,0.147,5,0.131,7,0.196,8,0.697,17,0.254,18,0.01,19,0.473,24,0.549,66,0.147,67,0.007,68,0.009,69,0.007,216,0.301,218,1.619,246,3.609,255,3.615,576,3.27,626,5.411,718,6.027,1375,5.348]],["title/classes/ToggleUserFollowDto.html",[0,0.115,1376,3.135]],["body/classes/ToggleUserFollowDto.html",[0,0.192,2,1.374,3,0.139,4,0.139,5,0.124,7,0.186,8,0.674,17,0.248,18,0.011,19,0.448,21,1.029,24,0.519,44,0.527,66,0.139,67,0.007,68,0.009,69,0.007,180,3.949,246,3.254,576,3.077,718,5.67,862,6.074,864,3.75,1134,5.302,1376,5.235,1377,5.065,1378,5.769,1379,7.686,1380,5.769,1381,5.769]],["title/classes/User.html",[0,0.115,166,2.276]],["body/classes/User.html",[0,0.083,2,0.727,3,0.073,4,0.073,5,0.065,7,0.098,8,0.436,9,2.438,17,0.276,18,0.011,19,0.237,21,1.078,24,0.555,29,1.086,30,0.648,44,0.56,48,1.236,51,1.212,59,1.174,66,0.073,67,0.004,68,0.006,69,0.004,74,0.978,156,0.9,158,1.697,166,2.456,216,0.151,226,1.019,235,1.507,246,2.525,259,1.386,261,2.721,263,1.112,266,1.112,267,1.984,276,2.721,277,0.768,278,1.242,279,0.747,284,0.768,285,0.768,286,1.612,287,0.768,289,1.894,290,1.381,291,0.768,294,2.265,295,2.265,374,3.332,455,3.516,491,2.525,516,3.147,551,1.017,553,1.984,560,2.252,562,4.267,576,1.222,1080,3.58,1088,3.383,1089,2.252,1115,4.843,1116,5.237,1382,2.252,1383,4.064,1384,5.764,1385,4.843,1386,4.843,1387,5.764,1388,4.843,1389,3.052,1390,3.052,1391,3.052,1392,3.052,1393,3.052,1394,3.052,1395,3.052,1396,3.052,1397,3.052,1398,3.052,1399,3.052,1400,3.052,1401,3.052,1402,3.052,1403,2.435,1404,2.68,1405,2.68,1406,2.435,1407,2.68,1408,2.68]],["title/interfaces/UserAttributes.html",[216,0.21,1383,3.135]],["body/interfaces/UserAttributes.html",[0,0.091,3,0.081,4,0.081,5,0.072,7,0.108,8,0.468,9,1.489,17,0.274,18,0.011,19,0.261,24,0.569,29,1.182,30,0.639,44,0.587,48,0.995,51,1.132,59,1.217,66,0.081,67,0.004,68,0.006,69,0.004,74,0.718,156,0.66,158,1.315,166,1.801,216,0.166,218,0.894,226,1.079,235,1.661,246,2.945,259,1.24,261,1.661,263,0.679,266,0.679,276,2.881,277,0.846,278,1.315,279,0.823,284,0.846,285,0.846,286,1.664,287,0.846,289,1.943,290,1.448,291,0.846,294,2.434,295,2.434,374,3.563,455,3.826,491,2.675,516,2.997,551,1.121,553,2.186,560,2.482,562,3.792,576,1.347,1080,3.792,1088,3.636,1089,2.482,1115,5.271,1116,5.7,1382,2.482,1383,4.304,1384,6.274,1385,5.271,1386,5.271,1387,6.274,1388,5.271,1403,2.684,1404,2.954,1405,2.954,1406,2.684,1407,2.954,1408,2.954]],["title/controllers/UserController.html",[175,1.881,1409,3.135]],["body/controllers/UserController.html",[0,0.038,3,0.077,4,0.033,5,0.03,7,0.045,11,0.854,14,3.342,17,0.216,18,0.011,21,0.861,24,0.483,28,2.143,29,1.145,30,0.543,32,2.274,37,2.559,42,3.836,44,0.588,55,3.146,57,3.072,59,0.738,63,3.187,66,0.033,67,0.009,68,0.003,69,0.002,76,1.715,80,1.782,82,0.805,90,3.279,105,0.744,125,0.615,131,2.082,134,5.108,135,3.507,136,5.108,137,1.22,140,4.623,142,1.108,143,0.959,147,1.445,152,3.792,153,1.108,157,0.903,158,0.313,162,2.209,163,4.18,166,3.359,168,3.197,175,1.069,180,3.304,187,3.516,191,1.487,192,0.856,193,3.32,194,0.814,197,3.09,224,3.298,226,0.617,249,1.715,255,1.694,309,5.306,324,2.12,361,2.12,374,1.069,388,3.279,389,4.35,397,3.792,408,1.025,410,0.959,437,3.457,439,2.12,455,2.321,516,0.714,576,2.772,579,1.22,580,4.703,581,1.926,590,3.053,606,4.628,607,4.628,608,4.174,625,2.812,627,2.12,628,3.36,629,2.12,630,2.12,634,1.926,649,1.22,650,3.507,651,2.363,664,0.903,665,1.108,670,2.555,700,1.22,701,2.812,702,2.812,704,2.363,708,1.926,857,2.823,859,3.507,1054,1.22,1115,1.782,1123,1.782,1134,2.209,1261,4.174,1355,3.36,1376,3.197,1406,3.457,1409,1.782,1410,1.22,1411,3.203,1412,3.203,1413,3.203,1414,3.203,1415,2.415,1416,3.203,1417,2.415,1418,2.415,1419,2.415,1420,2.415,1421,3.203,1422,3.203,1423,1.389,1424,2.415,1425,1.389,1426,1.389,1427,2.415,1428,1.389,1429,1.389,1430,2.415,1431,3.203,1432,1.389,1433,1.389,1434,1.389,1435,1.389,1436,1.389,1437,1.389,1438,2.415,1439,1.389,1440,1.389,1441,1.389,1442,1.389,1443,1.389,1444,3.827,1445,3.203,1446,1.389,1447,1.389,1448,1.389,1449,2.415,1450,1.389,1451,1.389,1452,2.415,1453,1.389,1454,2.415,1455,1.389,1456,2.415,1457,1.389,1458,1.389,1459,2.415,1460,1.389,1461,1.389,1462,1.389,1463,1.389,1464,1.389,1465,3.203,1466,3.197,1467,2.415,1468,2.415,1469,1.389,1470,1.389,1471,1.389,1472,1.22,1473,1.108,1474,1.389,1475,1.389,1476,1.389,1477,1.389,1478,1.389,1479,1.025,1480,1.389,1481,1.389,1482,1.389,1483,1.389,1484,6.272,1485,4.749,1486,5.107,1487,1.22,1488,3.827,1489,4.334,1490,3.827,1491,3.827,1492,3.827,1493,1.389,1494,3.203,1495,1.389,1496,3.203,1497,1.389,1498,2.415,1499,1.389,1500,2.812,1501,1.389,1502,1.389,1503,1.389,1504,1.025,1505,1.389,1506,1.389,1507,1.389,1508,1.389,1509,3.827,1510,1.389,1511,1.389,1512,1.389,1513,1.389,1514,1.389,1515,1.389,1516,1.389,1517,2.415,1518,2.415,1519,2.415,1520,2.415,1521,2.415,1522,1.389,1523,1.389,1524,1.389,1525,1.389,1526,1.389,1527,1.389,1528,1.389,1529,1.389,1530,1.389,1531,2.415,1532,1.389,1533,1.389,1534,1.389,1535,1.389,1536,1.389,1537,1.389,1538,1.389,1539,1.389,1540,1.389,1541,2.415,1542,1.389,1543,1.389,1544,1.389,1545,1.389,1546,1.389]],["title/classes/UserDto.html",[0,0.115,1466,3.135]],["body/classes/UserDto.html",[0,0.177,2,1.203,3,0.122,4,0.122,5,0.108,7,0.163,8,0.62,17,0.278,18,0.011,19,0.392,21,1.13,24,0.558,29,1.196,30,0.684,37,2.954,44,0.462,66,0.122,67,0.006,68,0.008,69,0.006,180,2.596,226,1.03,862,5.334,864,3.284,1385,5.334,1386,5.334,1388,5.334,1466,4.815,1547,4.436,1548,7.23,1549,7.23,1550,7.23,1551,5.052,1552,5.052,1553,5.052,1554,5.052,1555,5.052,1556,5.052,1557,5.052,1558,5.052,1559,5.052]],["title/classes/UserFollower.html",[0,0.115,1560,3.135]],["body/classes/UserFollower.html",[0,0.126,2,1.109,3,0.112,4,0.112,5,0.1,7,0.15,8,0.588,17,0.268,18,0.011,19,0.362,21,1.032,24,0.538,30,0.522,44,0.565,48,1.494,51,1.195,59,1.054,66,0.112,67,0.006,68,0.007,69,0.006,74,1.32,156,1.214,158,1.786,216,0.23,226,1.098,259,1.748,263,1.402,266,1.402,277,1.171,278,1.566,279,1.14,284,1.171,285,1.171,286,1.394,287,1.171,289,1.556,290,1.394,291,1.171,551,2.062,576,3.085,1134,5.317,1560,4.564,1561,3.434,1562,5.126,1563,4.655,1564,4.655,1565,4.655,1566,4.655,1567,4.655,1568,3.714,1569,4.087,1570,4.087]],["title/interfaces/UserFollowerAttributes.html",[216,0.21,1562,3.135]],["body/interfaces/UserFollowerAttributes.html",[0,0.136,3,0.121,4,0.121,5,0.107,7,0.162,8,0.617,17,0.265,18,0.011,19,0.39,24,0.557,30,0.549,44,0.594,48,1.311,51,1.09,59,1.106,66,0.121,67,0.006,68,0.008,69,0.006,74,1.07,156,0.984,158,1.464,216,0.248,218,1.333,226,1.152,259,1.634,263,1.012,266,1.012,277,1.262,278,1.624,279,1.228,284,1.262,285,1.262,286,1.464,287,1.262,289,1.634,290,1.464,291,1.262,551,2.165,576,3.238,1134,5.58,1560,3.7,1561,3.7,1562,5.316,1568,4.001,1569,4.404,1570,4.404]],["title/modules/UserModule.html",[92,1.648,116,2.49]],["body/modules/UserModule.html",[0,0.133,3,0.118,4,0.118,5,0.105,11,1.736,17,0.158,18,0.011,21,0.657,28,1.636,29,0.812,30,0.414,32,1.736,33,2.746,44,0.717,51,0.885,66,0.118,67,0.006,68,0.008,69,0.006,82,1.636,92,2.765,94,2.522,95,2.522,96,2.746,97,2.746,98,2.522,99,3.989,100,3.989,104,3.584,105,2.629,106,2.746,116,4.921,118,3.945,125,2.835,127,3.023,131,5.583,156,0.963,204,4.498,212,3.191,214,4.164,313,2.746,332,5.214,333,3.386,335,3.386,741,4.726,743,4.726,748,3.621,752,3.916,923,4.31,924,4.31,1409,5.261,1472,4.31,1571,4.31,1572,4.908,1573,4.31,1574,4.31,1575,4.908,1576,4.908,1577,4.908,1578,4.31,1579,4.908]],["title/classes/UserSnippetDto.html",[0,0.115,1479,3.135]],["body/classes/UserSnippetDto.html",[0,0.143,2,1.255,3,0.127,4,0.127,5,0.113,7,0.17,8,0.637,17,0.28,18,0.011,21,1.139,24,0.561,29,1.22,66,0.127,67,0.006,68,0.008,69,0.006,226,1.051,246,3.757,718,5.442,1385,5.442,1386,5.442,1388,5.442,1479,4.948,1580,4.628,1581,7.376,1582,7.376,1583,5.27,1584,5.27,1585,5.27,1586,5.27,1587,5.27,1588,5.27,1589,5.27,1590,5.27,1591,5.27]],["title/injectables/ValidationPipe.html",[70,1.758,1504,3.135]],["body/injectables/ValidationPipe.html",[0,0.178,3,0.101,4,0.101,5,0.09,7,0.135,11,2.036,14,2.722,17,0.185,18,0.011,20,2.975,21,0.881,24,0.271,25,2.958,28,2.193,29,1.089,30,0.556,32,2.327,37,1.525,44,0.648,55,3.137,57,3.521,59,0.98,63,1.99,66,0.101,67,0.008,68,0.007,69,0.005,70,2.381,72,2.341,80,3.088,82,1.395,142,3.339,152,4.592,153,3.339,156,0.821,168,4.247,246,3.017,394,3.088,675,2.578,708,4.592,864,2.72,884,3.675,1277,6.742,1485,5.778,1504,4.247,1592,3.675,1593,5.757,1594,5.757,1595,5.757,1596,5.757,1597,4.185,1598,5.757,1599,4.185,1600,7.087,1601,5.757,1602,6.223,1603,7.087,1604,4.185,1605,5.757,1606,4.185,1607,4.185,1608,4.185,1609,3.675,1610,4.185,1611,4.185,1612,4.185,1613,4.185,1614,4.185,1615,4.185,1616,4.185,1617,4.185,1618,4.185,1619,4.185,1620,4.185,1621,4.185,1622,4.185,1623,4.185,1624,4.185,1625,4.185,1626,4.185,1627,4.185,1628,4.185]],["title/coverage.html",[1629,4.641]],["body/coverage.html",[0,0.228,1,1.412,5,0.047,6,2.805,17,0.07,18,0.011,26,1.603,59,0.37,67,0.004,68,0.004,69,0.003,70,2.879,71,1.499,73,2.805,75,1.733,84,1.412,86,1.733,92,0.843,98,1.116,127,1.338,128,2.805,131,1.412,154,3.534,166,1.883,175,2.788,176,1.603,177,1.908,208,1.499,209,1.499,210,1.499,216,0.412,217,1.603,219,1.908,247,1.499,248,1.908,257,1.412,258,2.594,260,1.603,272,1.338,278,0.49,298,1.499,299,1.908,301,1.603,302,2.805,314,1.733,323,1.412,337,1.412,338,2.594,339,1.603,345,1.338,355,1.499,356,1.908,357,1.603,358,1.733,369,1.733,370,1.908,381,1.603,382,2.805,416,1.273,418,1.733,452,1.908,477,1.412,478,2.594,479,1.603,485,1.338,495,1.499,496,1.908,497,1.733,498,1.908,506,1.733,507,1.908,516,1.116,517,2.594,518,1.603,563,1.603,564,1.908,614,1.603,626,1.603,655,1.499,657,1.603,661,2.286,664,1.412,675,5.511,697,1.499,712,1.908,725,1.603,726,2.594,727,1.603,755,2.594,756,1.603,776,1.908,777,1.908,779,1.499,780,2.594,781,1.603,789,1.338,798,1.499,799,1.908,800,2.594,801,1.603,813,2.594,814,1.603,823,2.594,824,1.603,833,2.594,834,1.603,843,1.338,844,2.594,845,1.603,857,1.603,858,1.908,865,1.603,866,1.908,897,1.499,927,2.805,949,1.412,958,1.733,1046,1.908,1068,1.733,1069,1.908,1072,1.733,1073,1.908,1076,1.908,1080,1.412,1081,2.594,1082,1.603,1090,2.594,1091,1.603,1103,1.908,1104,1.908,1113,1.733,1114,1.908,1123,1.603,1124,1.908,1126,1.908,1133,1.908,1145,1.603,1146,1.908,1150,1.499,1151,1.908,1157,1.412,1158,2.594,1159,1.603,1182,1.603,1183,1.908,1213,1.412,1216,1.499,1235,1.908,1248,1.908,1369,1.733,1370,1.908,1375,1.908,1376,1.603,1377,1.908,1382,2.594,1383,1.603,1409,1.603,1410,1.908,1466,1.603,1473,1.733,1479,1.603,1504,1.603,1547,1.908,1560,1.603,1561,2.594,1562,1.603,1580,1.908,1592,1.908,1629,1.733,1630,2.173,1631,2.173,1632,2.173,1633,6.776,1634,4.43,1635,7.931,1636,8.159,1637,3.516,1638,4.43,1639,2.173,1640,4.43,1641,7.484,1642,4.43,1643,2.173,1644,2.173,1645,5.591,1646,6.96,1647,6.96,1648,6.559,1649,4.061,1650,5.591,1651,1.908,1652,1.908,1653,2.173,1654,2.173,1655,4.43,1656,2.173,1657,3.889,1658,1.908,1659,3.889,1660,1.908,1661,1.908,1662,3.088,1663,1.908,1664,1.908,1665,2.173,1666,4.43,1667,3.088,1668,4.47,1669,2.173,1670,1.908,1671,1.908,1672,1.908,1673,3.088,1674,2.173,1675,2.173]],["title/dependencies.html",[95,2.629,1676,3.54]],["body/dependencies.html",[0,0.178,18,0.011,45,4.07,67,0.006,68,0.008,69,0.006,82,1.7,95,2.621,143,4.531,146,4.07,147,1.7,148,4.07,151,4.48,194,2.989,278,1.637,311,4.07,312,4.48,313,2.854,413,4.48,458,4.48,864,3.316,1056,4.48,1110,4.48,1602,4.48,1609,4.48,1677,7.264,1678,5.102,1679,5.102,1680,6.568,1681,5.102,1682,5.102,1683,5.102,1684,5.102,1685,5.102,1686,5.102,1687,5.102,1688,5.102,1689,5.102,1690,5.102,1691,5.102,1692,5.102,1693,5.102,1694,5.102,1695,5.102,1696,5.102,1697,5.102,1698,7.264,1699,5.102,1700,5.102,1701,5.102,1702,5.102,1703,5.102,1704,5.102,1705,6.568,1706,5.102,1707,5.102,1708,5.102,1709,5.102,1710,5.102,1711,5.102,1712,5.102,1713,5.102,1714,5.102,1715,5.102,1716,5.102,1717,5.102,1718,5.102,1719,5.102,1720,5.102,1721,5.102,1722,5.102,1723,5.102]],["title/miscellaneous/enumerations.html",[1724,2.075,1725,4.492]],["body/miscellaneous/enumerations.html",[7,0.217,18,0.009,67,0.008,68,0.009,69,0.008,358,5.38,366,6.839,367,5.922,368,5.922,1724,3.952,1725,5.922,1726,6.744]],["title/miscellaneous/functions.html",[1724,2.075,1727,4.492]],["body/miscellaneous/functions.html",[7,0.193,18,0.01,28,2.607,29,1.294,30,0.66,67,0.007,68,0.009,69,0.007,90,5.016,98,4.019,249,3.894,309,4.428,455,3.894,1473,5.8,1500,5.271,1649,4.789,1651,6.867,1662,5.271,1663,6.384,1664,6.384,1672,5.271,1724,3.517,1727,5.271,1728,6.384,1729,6.002,1730,7.27,1731,6.002,1732,7.27,1733,6.002]],["title/index.html",[7,0.114,1734,3.54,1735,3.54]],["body/index.html",[18,0.011,67,0.007,68,0.009,69,0.007,224,3.31,311,4.72,476,5.195,1629,4.72,1736,5.917,1737,5.917,1738,5.917,1739,8.537,1740,5.917,1741,5.917,1742,8.433,1743,5.917,1744,5.917,1745,7.207,1746,5.917,1747,5.195,1748,5.917,1749,5.917,1750,7.207,1751,7.207,1752,5.917,1753,5.917,1754,5.917,1755,5.917,1756,5.917]],["title/modules.html",[94,2.989]],["body/modules.html",[18,0.009,67,0.007,68,0.009,69,0.007,93,3.762,94,3.139,109,4.507,112,4.214,113,3.971,114,3.762,115,4.214,116,3.579,204,3.417,1757,8.666,1758,8.666,1759,8.666,1760,8.666]],["title/overview.html",[1761,5.108]],["body/overview.html",[2,0.935,18,0.011,67,0.005,68,0.007,69,0.005,71,5.331,72,2.195,92,1.522,93,4.857,94,2.016,95,2.016,96,2.195,97,2.195,98,2.016,99,2.195,100,2.195,101,3.445,102,3.445,103,3.445,104,3.079,105,2.101,106,2.195,109,6.203,110,3.445,111,3.445,112,5.008,113,5.497,114,5.103,115,5.864,116,4.811,125,1.737,131,5.023,204,4.755,205,3.445,206,3.445,207,3.445,208,5.331,209,5.331,210,5.331,218,1.043,323,5.023,416,4.528,704,2.895,736,3.445,737,3.445,738,3.445,915,3.445,916,3.445,918,3.445,1213,5.023,1238,3.445,1239,3.445,1240,3.445,1571,3.445,1573,3.445,1574,3.445,1761,3.445,1762,3.924,1763,3.924,1764,3.924,1765,3.924]],["title/miscellaneous/typealiases.html",[1724,2.075,1766,5.116]],["body/miscellaneous/typealiases.html",[7,0.172,17,0.172,18,0.008,30,0.747,67,0.006,68,0.008,69,0.006,258,3.948,281,5.402,338,3.948,349,5.402,478,3.948,489,5.402,517,3.948,549,5.402,726,3.948,733,5.402,755,3.948,772,5.402,780,3.948,793,5.402,800,3.948,810,5.402,813,3.948,821,5.402,823,3.948,831,5.402,833,3.948,841,5.402,844,3.948,854,5.402,1081,3.948,1086,5.402,1090,3.948,1099,5.402,1158,3.948,1175,5.402,1382,3.948,1403,5.402,1561,3.948,1568,5.402,1724,3.136,1767,5.352,1768,5.352,1769,5.352,1770,5.352,1771,5.352,1772,5.352,1773,5.352,1774,5.352,1775,5.352,1776,5.352,1777,5.352,1778,5.352,1779,5.352,1780,5.352,1781,5.352,1782,5.352,1783,5.352,1784,5.352]],["title/miscellaneous/variables.html",[1724,2.075,1785,4.492]],["body/miscellaneous/variables.html",[7,0.116,14,1.488,17,0.116,18,0.011,19,0.662,20,3.41,25,2.659,30,0.304,55,2.682,57,2.779,59,1.246,63,1.711,67,0.004,68,0.006,69,0.004,73,2.87,75,4.128,76,1.926,84,4.308,86,4.128,87,3.159,92,2.007,128,2.87,140,2.482,150,3.159,154,6.011,155,5.322,160,4.544,161,3.159,163,3.364,164,3.159,166,3.761,168,2.654,172,4.128,278,1.649,302,2.87,313,2.895,314,4.835,315,3.159,316,3.159,317,3.159,318,3.159,319,3.159,320,3.159,374,1.592,382,2.87,418,4.128,419,3.159,657,3.818,859,2.654,927,2.87,958,4.128,959,3.159,1043,2.87,1045,2.87,1487,3.159,1578,3.159,1649,2.87,1652,4.544,1657,3.159,1658,4.544,1659,3.159,1660,5.322,1661,5.322,1667,3.159,1668,3.159,1670,5.322,1671,4.544,1673,3.159,1724,2.108,1728,4.544,1747,3.159,1785,3.159,1786,3.597,1787,6.061,1788,5.175,1789,3.597,1790,5.175,1791,6.061,1792,3.597,1793,6.061,1794,3.597,1795,3.597,1796,3.597,1797,3.597,1798,3.597,1799,3.597,1800,3.597,1801,3.597,1802,5.175,1803,3.597,1804,5.175,1805,3.597,1806,3.597,1807,3.597,1808,3.597,1809,3.597,1810,3.597,1811,5.175,1812,5.175,1813,3.597,1814,3.597,1815,3.597,1816,3.597,1817,3.597,1818,3.597,1819,3.597,1820,3.597,1821,3.597,1822,3.597,1823,3.597,1824,3.597,1825,3.597,1826,3.597,1827,3.597,1828,3.597,1829,3.597,1830,3.597,1831,3.597,1832,3.597,1833,3.597]]],"invertedIndex":[["",{"_index":18,"title":{},"body":{"classes/AppCache.html":{},"injectables/AppLogger.html":{},"modules/AppLoggerModule.html":{},"modules/ApplicationModule.html":{},"injectables/AuthMiddleware.html":{},"controllers/CacheController.html":{},"classes/CacheObject.html":{},"modules/CoreModule.html":{},"interfaces/CreateListingDto.html":{},"interfaces/CreateStoryDto.html":{},"classes/Currency.html":{},"interfaces/CurrencyAttributes.html":{},"interfaces/CurrencyDto.html":{},"controllers/DevController.html":{},"modules/DevModule.html":{},"classes/Disclaimer.html":{},"interfaces/DisclaimerAttributes.html":{},"interfaces/DisclaimerDto.html":{},"classes/ErrorCodes.html":{},"classes/ErrorResult.html":{},"controllers/FilesController.html":{},"injectables/FireBase.html":{},"classes/HiringType.html":{},"interfaces/HiringTypeAttributes.html":{},"interfaces/HiringTypeDto.html":{},"interfaces/IGoogleProfile.html":{},"classes/KeyValuePair.html":{},"classes/Listing.html":{},"interfaces/ListingAttributes.html":{},"controllers/ListingController.html":{},"interfaces/ListingDto.html":{},"classes/ListingFollower.html":{},"interfaces/ListingFollowerAttributes.html":{},"modules/ListingModule.html":{},"classes/ListingReview.html":{},"interfaces/ListingReviewAttributes.html":{},"interfaces/ListingReviewDto.html":{},"interfaces/ListingReviewDto-1.html":{},"classes/ListingType.html":{},"interfaces/ListingTypeAttributes.html":{},"interfaces/ListingTypeDto.html":{},"classes/LocalizedCurrency.html":{},"interfaces/LocalizedCurrencyAttributes.html":{},"classes/LocalizedDisclaimer.html":{},"interfaces/LocalizedDisclaimerAttributes.html":{},"classes/LocalizedHiringType.html":{},"interfaces/LocalizedHiringTypeAttributes.html":{},"classes/LocalizedListingType.html":{},"interfaces/LocalizedListingTypeAttributes.html":{},"classes/LocalizedPriceType.html":{},"interfaces/LocalizedPriceTypeAttributes.html":{},"classes/LoginUserDto.html":{},"controllers/LookupsController.html":{},"modules/LookupsModule.html":{},"injectables/LookupsService.html":{},"injectables/MailManager.html":{},"classes/NoDataResult.html":{},"classes/NotFoundResult.html":{},"classes/OperationResult.html":{},"classes/PasswordRecoveryToken.html":{},"interfaces/PasswordRecoveryTokenAttributes.html":{},"classes/PriceType.html":{},"interfaces/PriceTypeAttributes.html":{},"interfaces/PriceTypeDto.html":{},"injectables/PrismaService.html":{},"classes/RegisterUser.html":{},"interfaces/ResetPassword.html":{},"classes/Result.html":{},"classes/SearchListingDto.html":{},"classes/SearchResultDto.html":{},"classes/SearchStoryDto.html":{},"classes/Story.html":{},"interfaces/StoryAttributes.html":{},"controllers/StoryController.html":{},"interfaces/StoryDto.html":{},"modules/StoryModule.html":{},"injectables/StoryService.html":{},"classes/SuccessResult.html":{},"interfaces/ToggleListingFollowDto.html":{},"classes/ToggleUserFollowDto.html":{},"classes/User.html":{},"interfaces/UserAttributes.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserFollower.html":{},"interfaces/UserFollowerAttributes.html":{},"modules/UserModule.html":{},"classes/UserSnippetDto.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":675,"title":{},"body":{"controllers/ListingController.html":{},"classes/SearchResultDto.html":{},"classes/Story.html":{},"interfaces/StoryAttributes.html":{},"injectables/StoryService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["0.1.13",{"_index":1711,"title":{},"body":{"dependencies.html":{}}}],["0.12.2",{"_index":1685,"title":{},"body":{"dependencies.html":{}}}],["0.20.0",{"_index":1683,"title":{},"body":{"dependencies.html":{}}}],["0.3.1",{"_index":1684,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":1699,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1636,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1666,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1642,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1640,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1655,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1656,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":1654,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1644,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":1669,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1634,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":1665,"title":{},"body":{"coverage.html":{}}}],["0/29",{"_index":1637,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1633,"title":{},"body":{"coverage.html":{}}}],["0/31",{"_index":1653,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1641,"title":{},"body":{"coverage.html":{}}}],["0/42",{"_index":1639,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1648,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1646,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1647,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1645,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1638,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":162,"title":{"interfaces/ListingReviewDto-1.html":{}},"body":{"injectables/AuthMiddleware.html":{},"controllers/ListingController.html":{},"injectables/StoryService.html":{},"controllers/UserController.html":{}}}],["1.0.0",{"_index":1704,"title":{},"body":{"dependencies.html":{}}}],["1.1.0",{"_index":1720,"title":{},"body":{"dependencies.html":{}}}],["1.9.1",{"_index":1694,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":704,"title":{},"body":{"controllers/ListingController.html":{},"injectables/StoryService.html":{},"controllers/UserController.html":{},"overview.html":{}}}],["120",{"_index":963,"title":{},"body":{"injectables/LookupsService.html":{}}}],["2.0.0",{"_index":1702,"title":{},"body":{"dependencies.html":{}}}],["2.1.3",{"_index":1690,"title":{},"body":{"dependencies.html":{}}}],["2.23.0",{"_index":1680,"title":{},"body":{"dependencies.html":{}}}],["2.29.1",{"_index":1692,"title":{},"body":{"dependencies.html":{}}}],["2.3.3",{"_index":1708,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":589,"title":{},"body":{"controllers/ListingController.html":{},"controllers/LookupsController.html":{},"controllers/StoryController.html":{}}}],["201",{"_index":580,"title":{},"body":{"controllers/ListingController.html":{},"controllers/StoryController.html":{},"controllers/UserController.html":{}}}],["3.0.0",{"_index":1682,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":1713,"title":{},"body":{"dependencies.html":{}}}],["3.1.5",{"_index":1697,"title":{},"body":{"dependencies.html":{}}}],["31",{"_index":1765,"title":{},"body":{"overview.html":{}}}],["35",{"_index":1764,"title":{},"body":{"overview.html":{}}}],["4.1.4",{"_index":1723,"title":{},"body":{"dependencies.html":{}}}],["4.4.0",{"_index":1679,"title":{},"body":{"dependencies.html":{}}}],["401",{"_index":1509,"title":{},"body":{"controllers/UserController.html":{}}}],["59.0.0",{"_index":1689,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":1718,"title":{},"body":{"dependencies.html":{}}}],["6.3.5",{"_index":1716,"title":{},"body":{"dependencies.html":{}}}],["6.6.6",{"_index":1715,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":962,"title":{},"body":{"injectables/LookupsService.html":{}}}],["7",{"_index":1763,"title":{},"body":{"overview.html":{}}}],["7.2.5",{"_index":1681,"title":{},"body":{"dependencies.html":{}}}],["7.6.15",{"_index":1677,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1762,"title":{},"body":{"overview.html":{}}}],["8.2.0",{"_index":1687,"title":{},"body":{"dependencies.html":{}}}],["8.3.3",{"_index":1706,"title":{},"body":{"dependencies.html":{}}}],["8.5.1",{"_index":1691,"title":{},"body":{"dependencies.html":{}}}],["__currencies_${lang}__",{"_index":995,"title":{},"body":{"injectables/LookupsService.html":{}}}],["__disclaimers_${lang}__",{"_index":1022,"title":{},"body":{"injectables/LookupsService.html":{}}}],["__hiringtypes_${lang}__",{"_index":1012,"title":{},"body":{"injectables/LookupsService.html":{}}}],["__listingtypes_${category}_${lang}__",{"_index":961,"title":{},"body":{"injectables/LookupsService.html":{}}}],["__listingtypes_${lang}__",{"_index":979,"title":{},"body":{"injectables/LookupsService.html":{}}}],["__pricetypes_${lang}__",{"_index":980,"title":{},"body":{"injectables/LookupsService.html":{}}}],["_cache",{"_index":10,"title":{},"body":{"classes/AppCache.html":{},"classes/CacheObject.html":{}}}],["_data",{"_index":1373,"title":{},"body":{"classes/SuccessResult.html":{}}}],["_req",{"_index":308,"title":{},"body":{"controllers/DevController.html":{},"controllers/FilesController.html":{}}}],["_res",{"_index":135,"title":{},"body":{"injectables/AuthMiddleware.html":{},"controllers/DevController.html":{},"controllers/FilesController.html":{},"controllers/UserController.html":{}}}],["_res.send",{"_index":439,"title":{},"body":{"controllers/FilesController.html":{},"controllers/UserController.html":{}}}],["_res.sendfile(file",{"_index":435,"title":{},"body":{"controllers/FilesController.html":{}}}],["_res.sendstatus(404",{"_index":434,"title":{},"body":{"controllers/FilesController.html":{}}}],["add",{"_index":12,"title":{},"body":{"classes/AppCache.html":{}}}],["add(key",{"_index":23,"title":{},"body":{"classes/AppCache.html":{},"classes/CacheObject.html":{}}}],["added/updated",{"_index":693,"title":{},"body":{"controllers/ListingController.html":{}}}],["added/updated.'})@apibody({type",{"_index":644,"title":{},"body":{"controllers/ListingController.html":{}}}],["adds/updates",{"_index":642,"title":{},"body":{"controllers/ListingController.html":{}}}],["addstory",{"_index":1249,"title":{},"body":{"injectables/StoryService.html":{}}}],["addstory(lang",{"_index":1254,"title":{},"body":{"injectables/StoryService.html":{}}}],["advantages",{"_index":220,"title":{},"body":{"interfaces/CreateListingDto.html":{},"classes/Listing.html":{},"interfaces/ListingAttributes.html":{},"interfaces/ListingDto.html":{}}}],["aliases",{"_index":1767,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allownull",{"_index":289,"title":{},"body":{"classes/Currency.html":{},"interfaces/CurrencyAttributes.html":{},"classes/Disclaimer.html":{},"interfaces/DisclaimerAttributes.html":{},"classes/HiringType.html":{},"interfaces/HiringTypeAttributes.html":{},"classes/Listing.html":{},"interfaces/ListingAttributes.html":{},"classes/ListingFollower.html":{},"interfaces/ListingFollowerAttributes.html":{},"classes/ListingReview.html":{},"interfaces/ListingReviewAttributes.html":{},"classes/ListingType.html":{},"interfaces/ListingTypeAttributes.html":{},"classes/LocalizedCurrency.html":{},"interfaces/LocalizedCurrencyAttributes.html":{},"classes/LocalizedDisclaimer.html":{},"interfaces/LocalizedDisclaimerAttributes.html":{},"classes/LocalizedHiringType.html":{},"interfaces/LocalizedHiringTypeAttributes.html":{},"classes/LocalizedListingType.html":{},"interfaces/LocalizedListingTypeAttributes.html":{},"classes/LocalizedPriceType.html":{},"interfaces/LocalizedPriceTypeAttributes.html":{},"classes/PasswordRecoveryToken.html":{},"interfaces/PasswordRecoveryTokenAttributes.html":{},"classes/PriceType.html":{},"interfaces/PriceTypeAttributes.html":{},"classes/Story.html":{},"interfaces/StoryAttributes.html":{},"classes/User.html":{},"interfaces/UserAttributes.html":{},"classes/UserFollower.html":{},"interfaces/UserFollowerAttributes.html":{}}}],["androidinfo",{"_index":469,"title":{},"body":{"injectables/FireBase.html":{}}}],["androidpackagename",{"_index":470,"title":{},"body":{"injectables/FireBase.html":{}}}],["any).datavalues",{"_index":1496,"title":{},"body":{"controllers/UserController.html":{}}}],["api:server",{"_index":1797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apibearerauth",{"_index":191,"title":{},"body":{"controllers/CacheController.html":{},"controllers/DevController.html":{},"controllers/FilesController.html":{},"controllers/ListingController.html":{},"controllers/LookupsController.html":{},"controllers/StoryController.html":{},"controllers/UserController.html":{}}}],["apibody",{"_index":651,"title":{},"body":{"controllers/ListingController.html":{},"controllers/LookupsController.html":{},"controllers/StoryController.html":{},"controllers/UserController.html":{}}}],["apioperation",{"_index":193,"title":{},"body":{"controllers/CacheController.html":{},"controllers/FilesController.html":{},"controllers/ListingController.html":{},"controllers/LookupsController.html":{},"controllers/StoryController.html":{},"controllers/UserController.html":{}}}],["apioperation({summary",{"_index":388,"title":{},"body":{"controllers/FilesController.html":{},"controllers/ListingController.html":{},"controllers/LookupsController.html":{},"controllers/StoryController.html":{},"controllers/UserController.html":{}}}],["apiresponse",{"_index":650,"title":{},"body":{"controllers/ListingController.html":{},"controllers/LookupsController.html":{},"controllers/StoryController.html":{},"controllers/UserController.html":{}}}],["apitags",{"_index":192,"title":{},"body":{"controllers/CacheController.html":{},"controllers/DevController.html":{},"controllers/FilesController.html":{},"controllers/ListingController.html":{},"controllers/LookupsController.html":{},"controllers/StoryController.html":{},"controllers/UserController.html":{}}}],["apitags('authentication",{"_index":1481,"title":{},"body":{"controllers/UserController.html":{}}}],["apitags('cache",{"_index":195,"title":{},"body":{"controllers/CacheController.html":{}}}],["apitags('db_migration",{"_index":321,"title":{},"body":{"controllers/DevController.html":{}}}],["apitags('files",{"_index":420,"title":{},"body":{"controllers/FilesController.html":{}}}],["apitags('listings",{"_index":666,"title":{},"body":{"controllers/ListingController.html":{}}}],["apitags('lookups",{"_index":899,"title":{},"body":{"controllers/LookupsController.html":{}}}],["apitags('stories",{"_index":1219,"title":{},"body":{"controllers/StoryController.html":{}}}],["app",{"_index":311,"title":{},"body":{"controllers/DevController.html":{},"dependencies.html":{},"index.html":{}}}],["appcache",{"_index":1,"title":{"classes/AppCache.html":{}},"body":{"classes/AppCache.html":{},"controllers/CacheController.html":{},"classes/CacheObject.html":{},"injectables/LookupsService.html":{},"coverage.html":{}}}],["appcache._cache",{"_index":65,"title":{},"body":{"classes/AppCache.html":{},"classes/CacheObject.html":{}}}],["appcache._cache[key",{"_index":52,"title":{},"body":{"classes/AppCache.html":{},"classes/CacheObject.html":{}}}],["appcache._cache[key].data",{"_index":56,"title":{},"body":{"classes/AppCache.html":{},"classes/CacheObject.html":{}}}],["appcache._cache[key].expiredate",{"_index":53,"title":{},"body":{"classes/AppCache.html":{},"classes/CacheObject.html":{}}}],["appcache.add(key",{"_index":62,"title":{},"body":{"classes/AppCache.html":{},"classes/CacheObject.html":{}}}],["appcache.clear",{"_index":200,"title":{},"body":{"controllers/CacheController.html":{}}}],["appcache.getasync",{"_index":960,"title":{},"body":{"injectables/LookupsService.html":{}}}],["appcache.getcache",{"_index":198,"title":{},"body":{"controllers/CacheController.html":{}}}],["applicationmodule",{"_index":109,"title":{"modules/ApplicationModule.html":{}},"body":{"modules/ApplicationModule.html":{},"modules.html":{},"overview.html":{}}}],["applogger",{"_index":71,"title":{"injectables/AppLogger.html":{}},"body":{"injectables/AppLogger.html":{},"modules/AppLoggerModule.html":{},"coverage.html":{},"overview.html":{}}}],["applogger('app",{"_index":1806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applogger.service",{"_index":108,"title":{},"body":{"modules/AppLoggerModule.html":{}}}],["apploggermodule",{"_index":93,"title":{"modules/AppLoggerModule.html":{}},"body":{"modules/AppLoggerModule.html":{},"modules/ApplicationModule.html":{},"modules/ListingModule.html":{},"modules/StoryModule.html":{},"modules.html":{},"overview.html":{}}}],["apply(authmiddleware",{"_index":923,"title":{},"body":{"modules/LookupsModule.html":{},"modules/UserModule.html":{}}}],["approot",{"_index":310,"title":{},"body":{"controllers/DevController.html":{}}}],["approot.resolve('migrations",{"_index":320,"title":{},"body":{"controllers/DevController.html":{},"miscellaneous/variables.html":{}}}],["argumentmetadata",{"_index":1603,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["array",{"_index":394,"title":{},"body":{"controllers/FilesController.html":{},"injectables/LookupsService.html":{},"classes/SearchResultDto.html":{},"injectables/ValidationPipe.html":{}}}],["assets/password",{"_index":1053,"title":{},"body":{"injectables/MailManager.html":{}}}],["association",{"_index":276,"title":{},"body":{"classes/Currency.html":{},"interfaces/CurrencyAttributes.html":{},"classes/Disclaimer.html":{},"interfaces/DisclaimerAttributes.html":{},"classes/HiringType.html":{},"interfaces/HiringTypeAttributes.html":{},"classes/ListingType.html":{},"interfaces/ListingTypeAttributes.html":{},"classes/PriceType.html":{},"interfaces/PriceTypeAttributes.html":{},"classes/User.html":{},"interfaces/UserAttributes.html":{}}}],["associations",{"_index":261,"title":{},"body":{"classes/Currency.html":{},"interfaces/CurrencyAttributes.html":{},"classes/Disclaimer.html":{},"interfaces/DisclaimerAttributes.html":{},"classes/HiringType.html":{},"interfaces/HiringTypeAttributes.html":{},"classes/ListingType.html":{},"interfaces/ListingTypeAttributes.html":{},"classes/PriceType.html":{},"interfaces/PriceTypeAttributes.html":{},"classes/User.html":{},"interfaces/UserAttributes.html":{}}}],["async",{"_index":14,"title":{},"body":{"classes/AppCache.html":{},"injectables/AuthMiddleware.html":{},"controllers/CacheController.html":{},"classes/CacheObject.html":{},"controllers/DevController.html":{},"controllers/FilesController.html":{},"injectables/FireBase.html":{},"controllers/ListingController.html":{},"controllers/LookupsController.html":{},"injectables/LookupsService.html":{},"injectables/MailManager.html":{},"injectables/PrismaService.html":{},"controllers/StoryController.html":{},"injectables/StoryService.html":{},"controllers/UserController.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["auth",{"_index":1818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auth.middleware",{"_index":1578,"title":{},"body":{"modules/UserModule.html":{},"miscellaneous/variables.html":{}}}],["authheaders",{"_index":159,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["authmiddleware",{"_index":127,"title":{"injectables/AuthMiddleware.html":{}},"body":{"injectables/AuthMiddleware.html":{},"modules/ListingModule.html":{},"modules/LookupsModule.html":{},"modules/StoryModule.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["authorized",{"_index":174,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["autoincrement",{"_index":285,"title":{},"body":{"classes/Currency.html":{},"interfaces/CurrencyAttributes.html":{},"classes/Disclaimer.html":{},"interfaces/DisclaimerAttributes.html":{},"classes/HiringType.html":{},"interfaces/HiringTypeAttributes.html":{},"classes/Listing.html":{},"interfaces/ListingAttributes.html":{},"classes/ListingFollower.html":{},"interfaces/ListingFollowerAttributes.html":{},"classes/ListingReview.html":{},"interfaces/ListingReviewAttributes.html":{},"classes/ListingType.html":{},"interfaces/ListingTypeAttributes.html":{},"classes/LocalizedCurrency.html":{},"interfaces/LocalizedCurrencyAttributes.html":{},"classes/LocalizedDisclaimer.html":{},"interfaces/LocalizedDisclaimerAttributes.html":{},"classes/LocalizedHiringType.html":{},"interfaces/LocalizedHiringTypeAttributes.html":{},"classes/LocalizedListingType.html":{},"interfaces/LocalizedListingTypeAttributes.html":{},"classes/LocalizedPriceType.html":{},"interfaces/LocalizedPriceTypeAttributes.html":{},"classes/PasswordRecoveryToken.html":{},"interfaces/PasswordRecoveryTokenAttributes.html":{},"classes/PriceType.html":{},"interfaces/PriceTypeAttributes.html":{},"classes/Story.html":{},"interfaces/StoryAttributes.html":{},"classes/User.html":{},"interfaces/UserAttributes.html":{},"classes/UserFollower.html":{},"interfaces/UserFollowerAttributes.html":{}}}],["avgreviews",{"_index":713,"title":{},"body":{"interfaces/ListingDto.html":{},"injectables/StoryService.html":{}}}],["await",{"_index":63,"title":{},"body":{"classes/AppCache.html":{},"injectables/AuthMiddleware.html":{},"classes/CacheObject.html":{},"controllers/DevController.html":{},"controllers/ListingController.html":{},"controllers/LookupsController.html":{},"injectables/LookupsService.html":{},"injectables/PrismaService.html":{},"controllers/StoryController.html":{},"injectables/StoryService.html":{},"controllers/UserController.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["axios",{"_index":458,"title":{},"body":{"injectables/FireBase.html":{},"dependencies.html":{}}}],["axios.post",{"_index":459,"title":{},"body":{"injectables/FireBase.html":{}}}],["backend",{"_index":1737,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":1606,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["badrequestexception('no",{"_index":1610,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["body",{"_index":249,"title":{},"body":{"interfaces/CreateStoryDto.html":{},"controllers/FilesController.html":{},"controllers/ListingController.html":{},"classes/Story.html":{},"interfaces/StoryAttributes.html":{},"controllers/StoryController.html":{},"interfaces/StoryDto.html":{},"injectables/StoryService.html":{},"controllers/UserController.html":{},"miscellaneous/functions.html":{}}}],["boolean",{"_index":246,"title":{},"body":{"interfaces/CreateListingDto.html":{},"interfaces/IGoogleProfile.html":{},"classes/Listing.html":{},"interfaces/ListingAttributes.html":{},"interfaces/ListingDto.html":{},"injectables/LookupsService.html":{},"classes/RegisterUser.html":{},"interfaces/StoryDto.html":{},"interfaces/ToggleListingFollowDto.html":{},"classes/ToggleUserFollowDto.html":{},"classes/User.html":{},"interfaces/UserAttributes.html":{},"classes/UserSnippetDto.html":{},"injectables/ValidationPipe.html":{}}}],["bootstrap",{"_index":98,"title":{},"body":{"modules/AppLoggerModule.html":{},"modules/ApplicationModule.html":{},"modules/CoreModule.html":{},"modules/DevModule.html":{},"modules/ListingModule.html":{},"modules/LookupsModule.html":{},"modules/StoryModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["brandname",{"_index":221,"title":{},"body":{"interfaces/CreateListingDto.html":{},"classes/Listing.html":{},"interfaces/ListingAttributes.html":{},"interfaces/ListingDto.html":{},"injectables/StoryService.html":{}}}],["browse",{"_index":1760,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1757,"title":{},"body":{"modules.html":{}}}],["bucket",{"_index":390,"title":{},"body":{"controllers/FilesController.html":{},"injectables/LookupsService.html":{}}}],["bucket'})@useinterceptors(undefined)@post('v1/files/:bucket/:type/upload",{"_index":406,"title":{},"body":{"controllers/FilesController.html":{}}}],["bucketdir",{"_index":1031,"title":{},"body":{"injectables/LookupsService.html":{}}}],["builderror",{"_index":1593,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["builderror(errors",{"_index":1596,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["c",{"_index":1001,"title":{},"body":{"injectables/LookupsService.html":{}}}],["c.id",{"_index":1002,"title":{},"body":{"injectables/LookupsService.html":{}}}],["cache.controller",{"_index":336,"title":{},"body":{"modules/DevModule.html":{}}}],["cachecontroller",{"_index":176,"title":{"controllers/CacheController.html":{}},"body":{"controllers/CacheController.html":{},"modules/DevModule.html":{},"coverage.html":{}}}],["cached",{"_index":183,"title":{},"body":{"controllers/CacheController.html":{}}}],["cacheobj",{"_index":58,"title":{},"body":{"classes/AppCache.html":{},"classes/CacheObject.html":{}}}],["cacheobj.data",{"_index":64,"title":{},"body":{"classes/AppCache.html":{},"classes/CacheObject.html":{}}}],["cacheobject",{"_index":26,"title":{"classes/CacheObject.html":{}},"body":{"classes/AppCache.html":{},"classes/CacheObject.html":{},"coverage.html":{}}}],["case",{"_index":1815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["catch",{"_index":1045,"title":{},"body":{"injectables/LookupsService.html":{},"injectables/StoryService.html":{},"miscellaneous/variables.html":{}}}],["category",{"_index":782,"title":{},"body":{"classes/ListingType.html":{},"interfaces/ListingTypeAttributes.html":{},"injectables/LookupsService.html":{}}}],["cb",{"_index":38,"title":{},"body":{"classes/AppCache.html":{},"classes/CacheObject.html":{}}}],["class",{"_index":0,"title":{"classes/AppCache.html":{},"classes/CacheObject.html":{},"classes/Currency.html":{},"classes/Disclaimer.html":{},"classes/ErrorCodes.html":{},"classes/ErrorResult.html":{},"classes/HiringType.html":{},"classes/KeyValuePair.html":{},"classes/Listing.html":{},"classes/ListingFollower.html":{},"classes/ListingReview.html":{},"classes/ListingType.html":{},"classes/LocalizedCurrency.html":{},"classes/LocalizedDisclaimer.html":{},"classes/LocalizedHiringType.html":{},"classes/LocalizedListingType.html":{},"classes/LocalizedPriceType.html":{},"classes/LoginUserDto.html":{},"classes/NoDataResult.html":{},"classes/NotFoundResult.html":{},"classes/OperationResult.html":{},"classes/PasswordRecoveryToken.html":{},"classes/PriceType.html":{},"classes/RegisterUser.html":{},"classes/Result.html":{},"classes/SearchListingDto.html":{},"classes/SearchResultDto.html":{},"classes/SearchStoryDto.html":{},"classes/Story.html":{},"classes/SuccessResult.html":{},"classes/ToggleUserFollowDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserFollower.html":{},"classes/UserSnippetDto.html":{}},"body":{"classes/AppCache.html":{},"injectables/AppLogger.html":{},"modules/AppLoggerModule.html":{},"modules/ApplicationModule.html":{},"injectables/AuthMiddleware.html":{},"controllers/CacheController.html":{},"classes/CacheObject.html":{},"modules/CoreModule.html":{},"classes/Currency.html":{},"interfaces/CurrencyAttributes.html":{},"controllers/DevController.html":{},"modules/DevModule.html":{},"classes/Disclaimer.html":{},"interfaces/DisclaimerAttributes.html":{},"classes/ErrorCodes.html":{},"classes/ErrorResult.html":{},"controllers/FilesController.html":{},"injectables/FireBase.html":{},"classes/HiringType.html":{},"interfaces/HiringTypeAttributes.html":{},"classes/KeyValuePair.html":{},"classes/Listing.html":{},"interfaces/ListingAttributes.html":{},"controllers/ListingController.html":{},"classes/ListingFollower.html":{},"interfaces/ListingFollowerAttributes.html":{},"modules/ListingModule.html":{},"classes/ListingReview.html":{},"interfaces/ListingReviewAttributes.html":{},"classes/ListingType.html":{},"interfaces/ListingTypeAttributes.html":{},"classes/LocalizedCurrency.html":{},"interfaces/LocalizedCurrencyAttributes.html":{},"classes/LocalizedDisclaimer.html":{},"interfaces/LocalizedDisclaimerAttributes.html":{},"classes/LocalizedHiringType.html":{},"interfaces/LocalizedHiringTypeAttributes.html":{},"classes/LocalizedListingType.html":{},"interfaces/LocalizedListingTypeAttributes.html":{},"classes/LocalizedPriceType.html":{},"interfaces/LocalizedPriceTypeAttributes.html":{},"classes/LoginUserDto.html":{},"controllers/LookupsController.html":{},"modules/LookupsModule.html":{},"injectables/LookupsService.html":{},"injectables/MailManager.html":{},"classes/NoDataResult.html":{},"classes/NotFoundResult.html":{},"classes/OperationResult.html":{},"classes/PasswordRecoveryToken.html":{},"interfaces/PasswordRecoveryTokenAttributes.html":{},"classes/PriceType.html":{},"interfaces/PriceTypeAttributes.html":{},"injectables/PrismaService.html":{},"classes/RegisterUser.html":{},"classes/Result.html":{},"classes/SearchListingDto.html":{},"classes/SearchResultDto.html":{},"classes/SearchStoryDto.html":{},"classes/Story.html":{},"interfaces/StoryAttributes.html":{},"controllers/StoryController.html":{},"modules/StoryModule.html":{},"injectables/StoryService.html":{},"classes/SuccessResult.html":{},"classes/ToggleUserFollowDto.html":{},"classes/User.html":{},"interfaces/UserAttributes.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserFollower.html":{},"interfaces/UserFollowerAttributes.html":{},"modules/UserModule.html":{},"classes/UserSnippetDto.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AppCache.html":{},"classes/CacheObject.html":{},"classes/Currency.html":{},"classes/Disclaimer.html":{},"classes/ErrorCodes.html":{},"classes/ErrorResult.html":{},"classes/HiringType.html":{},"classes/KeyValuePair.html":{},"classes/Listing.html":{},"classes/ListingFollower.html":{},"classes/ListingReview.html":{},"classes/ListingType.html":{},"classes/LocalizedCurrency.html":{},"classes/LocalizedDisclaimer.html":{},"classes/LocalizedHiringType.html":{},"classes/LocalizedListingType.html":{},"classes/LocalizedPriceType.html":{},"classes/LoginUserDto.html":{},"classes/NoDataResult.html":{},"classes/NotFoundResult.html":{},"classes/OperationResult.html":{},"classes/PasswordRecoveryToken.html":{},"classes/PriceType.html":{},"classes/RegisterUser.html":{},"classes/Result.html":{},"classes/SearchListingDto.html":{},"classes/SearchResultDto.html":{},"classes/SearchStoryDto.html":{},"classes/Story.html":{},"classes/SuccessResult.html":{},"classes/ToggleUserFollowDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserFollower.html":{},"classes/UserSnippetDto.html":{},"overview.html":{}}}],["clear",{"_index":13,"title":{},"body":{"classes/AppCache.html":{},"classes/CacheObject.html":{}}}],["clearcache",{"_index":178,"title":{},"body":{"controllers/CacheController.html":{}}}],["cli",{"_index":1717,"title":{},"body":{"dependencies.html":{}}}],["cluster_applicationmodule",{"_index":110,"title":{},"body":{"modules/ApplicationModule.html":{},"overview.html":{}}}],["cluster_applicationmodule_imports",{"_index":111,"title":{},"body":{"modules/ApplicationModule.html":{},"overview.html":{}}}],["cluster_apploggermodule",{"_index":101,"title":{},"body":{"modules/AppLoggerModule.html":{},"overview.html":{}}}],["cluster_apploggermodule_exports",{"_index":102,"title":{},"body":{"modules/AppLoggerModule.html":{},"overview.html":{}}}],["cluster_apploggermodule_providers",{"_index":103,"title":{},"body":{"modules/AppLoggerModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":205,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_exports",{"_index":206,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_providers",{"_index":207,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_devmodule",{"_index":328,"title":{},"body":{"modules/DevModule.html":{}}}],["cluster_devmodule_imports",{"_index":329,"title":{},"body":{"modules/DevModule.html":{}}}],["cluster_listingmodule",{"_index":736,"title":{},"body":{"modules/ListingModule.html":{},"overview.html":{}}}],["cluster_listingmodule_exports",{"_index":737,"title":{},"body":{"modules/ListingModule.html":{},"overview.html":{}}}],["cluster_listingmodule_imports",{"_index":739,"title":{},"body":{"modules/ListingModule.html":{}}}],["cluster_listingmodule_providers",{"_index":738,"title":{},"body":{"modules/ListingModule.html":{},"overview.html":{}}}],["cluster_lookupsmodule",{"_index":915,"title":{},"body":{"modules/LookupsModule.html":{},"overview.html":{}}}],["cluster_lookupsmodule_exports",{"_index":916,"title":{},"body":{"modules/LookupsModule.html":{},"overview.html":{}}}],["cluster_lookupsmodule_imports",{"_index":917,"title":{},"body":{"modules/LookupsModule.html":{}}}],["cluster_lookupsmodule_providers",{"_index":918,"title":{},"body":{"modules/LookupsModule.html":{},"overview.html":{}}}],["cluster_storymodule",{"_index":1238,"title":{},"body":{"modules/StoryModule.html":{},"overview.html":{}}}],["cluster_storymodule_exports",{"_index":1240,"title":{},"body":{"modules/StoryModule.html":{},"overview.html":{}}}],["cluster_storymodule_imports",{"_index":1241,"title":{},"body":{"modules/StoryModule.html":{}}}],["cluster_storymodule_providers",{"_index":1239,"title":{},"body":{"modules/StoryModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":1571,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":1573,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":1572,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":1574,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["code",{"_index":262,"title":{},"body":{"classes/Currency.html":{},"interfaces/CurrencyAttributes.html":{},"interfaces/CurrencyDto.html":{},"classes/Disclaimer.html":{},"interfaces/DisclaimerAttributes.html":{},"interfaces/DisclaimerDto.html":{},"classes/HiringType.html":{},"interfaces/HiringTypeAttributes.html":{},"interfaces/HiringTypeDto.html":{},"classes/ListingType.html":{},"interfaces/ListingTypeAttributes.html":{},"interfaces/ListingTypeDto.html":{},"injectables/LookupsService.html":{},"injectables/MailManager.html":{},"classes/OperationResult.html":{},"classes/PriceType.html":{},"interfaces/PriceTypeAttributes.html":{},"interfaces/PriceTypeDto.html":{}}}],["codes",{"_index":148,"title":{},"body":{"injectables/AuthMiddleware.html":{},"controllers/DevController.html":{},"dependencies.html":{}}}],["com.imaginative",{"_index":474,"title":{},"body":{"injectables/FireBase.html":{}}}],["com.imaginative_news.imaginative_news",{"_index":471,"title":{},"body":{"injectables/FireBase.html":{}}}],["conclusion",{"_index":250,"title":{},"body":{"interfaces/CreateStoryDto.html":{},"classes/Story.html":{},"interfaces/StoryAttributes.html":{},"interfaces/StoryDto.html":{},"injectables/StoryService.html":{}}}],["configure",{"_index":212,"title":{},"body":{"modules/CoreModule.html":{},"modules/DevModule.html":{},"modules/ListingModule.html":{},"modules/LookupsModule.html":{},"modules/StoryModule.html":{},"modules/UserModule.html":{}}}],["configure(consumer",{"_index":741,"title":{},"body":{"modules/ListingModule.html":{},"modules/LookupsModule.html":{},"modules/StoryModule.html":{},"modules/UserModule.html":{}}}],["console.log(err",{"_index":91,"title":{},"body":{"injectables/AppLogger.html":{},"injectables/LookupsService.html":{}}}],["const",{"_index":57,"title":{},"body":{"classes/AppCache.html":{},"injectables/AppLogger.html":{},"injectables/AuthMiddleware.html":{},"classes/CacheObject.html":{},"controllers/DevController.html":{},"controllers/FilesController.html":{},"controllers/ListingController.html":{},"injectables/LookupsService.html":{},"injectables/MailManager.html":{},"controllers/StoryController.html":{},"injectables/StoryService.html":{},"controllers/UserController.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["constraint[0",{"_index":1626,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["constraint[1",{"_index":1627,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["constructor",{"_index":126,"title":{},"body":{"modules/ApplicationModule.html":{},"injectables/AuthMiddleware.html":{},"controllers/CacheController.html":{},"classes/CacheObject.html":{},"classes/ErrorResult.html":{},"classes/KeyValuePair.html":{},"injectables/LookupsService.html":{},"injectables/MailManager.html":{},"classes/NoDataResult.html":{},"classes/NotFoundResult.html":{},"classes/Result.html":{},"injectables/StoryService.html":{},"classes/SuccessResult.html":{}}}],["constructor(/*private",{"_index":322,"title":{},"body":{"controllers/DevController.html":{}}}],["constructor(_data",{"_index":1371,"title":{},"body":{"classes/SuccessResult.html":{}}}],["constructor(data",{"_index":46,"title":{},"body":{"classes/AppCache.html":{},"classes/CacheObject.html":{}}}],["constructor(err",{"_index":371,"title":{},"body":{"classes/ErrorResult.html":{}}}],["constructor(k",{"_index":508,"title":{},"body":{"classes/KeyValuePair.html":{}}}],["constructor(lookupsservice",{"_index":1252,"title":{},"body":{"injectables/StoryService.html":{}}}],["constructor(private",{"_index":157,"title":{},"body":{"injectables/AuthMiddleware.html":{},"controllers/FilesController.html":{},"controllers/ListingController.html":{},"controllers/LookupsController.html":{},"controllers/StoryController.html":{},"controllers/UserController.html":{}}}],["constructor(status",{"_index":1127,"title":{},"body":{"classes/Result.html":{}}}],["constructor(userservice",{"_index":130,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["consumer",{"_index":743,"title":{},"body":{"modules/ListingModule.html":{},"modules/LookupsModule.html":{},"modules/StoryModule.html":{},"modules/UserModule.html":{}}}],["consumer.apply(authmiddleware).forroutes",{"_index":746,"title":{},"body":{"modules/ListingModule.html":{},"modules/StoryModule.html":{}}}],["controller",{"_index":175,"title":{"controllers/CacheController.html":{},"controllers/DevController.html":{},"controllers/FilesController.html":{},"controllers/ListingController.html":{},"controllers/LookupsController.html":{},"controllers/StoryController.html":{},"controllers/UserController.html":{}},"body":{"controllers/CacheController.html":{},"controllers/DevController.html":{},"controllers/FilesController.html":{},"controllers/ListingController.html":{},"controllers/LookupsController.html":{},"controllers/StoryController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controllers",{"_index":125,"title":{},"body":{"modules/ApplicationModule.html":{},"controllers/CacheController.html":{},"modules/CoreModule.html":{},"controllers/DevController.html":{},"modules/DevModule.html":{},"controllers/FilesController.html":{},"controllers/ListingController.html":{},"modules/ListingModule.html":{},"controllers/LookupsController.html":{},"modules/LookupsModule.html":{},"controllers/StoryController.html":{},"modules/StoryModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["coremodule",{"_index":204,"title":{"modules/CoreModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/DevModule.html":{},"modules/ListingModule.html":{},"modules/LookupsModule.html":{},"modules/StoryModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["count",{"_index":1147,"title":{},"body":{"classes/SearchResultDto.html":{}}}],["coverage",{"_index":1629,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":578,"title":{},"body":{"controllers/ListingController.html":{}}}],["created",{"_index":667,"title":{},"body":{"controllers/ListingController.html":{},"controllers/StoryController.html":{}}}],["created.'})@apibody({type",{"_index":582,"title":{},"body":{"controllers/ListingController.html":{},"controllers/StoryController.html":{}}}],["createdat",{"_index":263,"title":{},"body":{"classes/Currency.html":{},"interfaces/CurrencyAttributes.html":{},"interfaces/CurrencyDto.html":{},"classes/Disclaimer.html":{},"interfaces/DisclaimerAttributes.html":{},"interfaces/DisclaimerDto.html":{},"classes/HiringType.html":{},"interfaces/HiringTypeAttributes.html":{},"interfaces/HiringTypeDto.html":{},"classes/Listing.html":{},"interfaces/ListingAttributes.html":{},"interfaces/ListingDto.html":{},"classes/ListingFollower.html":{},"interfaces/ListingFollowerAttributes.html":{},"classes/ListingReview.html":{},"interfaces/ListingReviewAttributes.html":{},"interfaces/ListingReviewDto-1.html":{},"classes/ListingType.html":{},"interfaces/ListingTypeAttributes.html":{},"interfaces/ListingTypeDto.html":{},"classes/LocalizedCurrency.html":{},"interfaces/LocalizedCurrencyAttributes.html":{},"classes/LocalizedDisclaimer.html":{},"interfaces/LocalizedDisclaimerAttributes.html":{},"classes/LocalizedHiringType.html":{},"interfaces/LocalizedHiringTypeAttributes.html":{},"classes/LocalizedListingType.html":{},"interfaces/LocalizedListingTypeAttributes.html":{},"classes/LocalizedPriceType.html":{},"interfaces/LocalizedPriceTypeAttributes.html":{},"injectables/LookupsService.html":{},"classes/PriceType.html":{},"interfaces/PriceTypeAttributes.html":{},"interfaces/PriceTypeDto.html":{},"classes/Story.html":{},"interfaces/StoryAttributes.html":{},"interfaces/StoryDto.html":{},"injectables/StoryService.html":{},"classes/User.html":{},"interfaces/UserAttributes.html":{},"classes/UserFollower.html":{},"interfaces/UserFollowerAttributes.html":{}}}],["createlisting",{"_index":565,"title":{},"body":{"controllers/ListingController.html":{}}}],["createlisting(lang",{"_index":575,"title":{},"body":{"controllers/ListingController.html":{}}}],["createlistingdto",{"_index":217,"title":{"interfaces/CreateListingDto.html":{}},"body":{"interfaces/CreateListingDto.html":{},"controllers/ListingController.html":{},"coverage.html":{}}}],["createlistingdto'})@post('v1/listings",{"_index":583,"title":{},"body":{"controllers/ListingController.html":{}}}],["createlistingdto'})@put('v1/listings/:id",{"_index":637,"title":{},"body":{"controllers/ListingController.html":{}}}],["createlistingreviewdto",{"_index":641,"title":{},"body":{"controllers/ListingController.html":{}}}],["createlistingreviewdto'})@post('v1/listings/:id/reviews",{"_index":645,"title":{},"body":{"controllers/ListingController.html":{}}}],["createparamdecorator((data",{"_index":1807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creates",{"_index":1192,"title":{},"body":{"controllers/StoryController.html":{}}}],["createstory",{"_index":1184,"title":{},"body":{"controllers/StoryController.html":{}}}],["createstory(lang",{"_index":1190,"title":{},"body":{"controllers/StoryController.html":{}}}],["createstorydto",{"_index":247,"title":{"interfaces/CreateStoryDto.html":{}},"body":{"interfaces/CreateStoryDto.html":{},"controllers/StoryController.html":{},"injectables/StoryService.html":{},"coverage.html":{}}}],["createstorydto'})@post('v1/stories",{"_index":1194,"title":{},"body":{"controllers/StoryController.html":{}}}],["createstorydto'})@put('v1/stories/:id",{"_index":1211,"title":{},"body":{"controllers/StoryController.html":{}}}],["credentials",{"_index":222,"title":{},"body":{"interfaces/CreateListingDto.html":{},"classes/Listing.html":{},"interfaces/ListingAttributes.html":{},"interfaces/ListingDto.html":{}}}],["criteria",{"_index":686,"title":{},"body":{"controllers/ListingController.html":{},"controllers/StoryController.html":{}}}],["criteria'})@apiresponse({status",{"_index":619,"title":{},"body":{"controllers/ListingController.html":{},"controllers/StoryController.html":{}}}],["ctx",{"_index":1808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":1810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currencies",{"_index":292,"title":{},"body":{"classes/Currency.html":{},"interfaces/CurrencyAttributes.html":{},"controllers/LookupsController.html":{},"injectables/LookupsService.html":{}}}],["currencies'})@apiresponse({status",{"_index":873,"title":{},"body":{"controllers/LookupsController.html":{}}}],["currencies.find",{"_index":1000,"title":{},"body":{"injectables/LookupsService.html":{}}}],["currencies.map((lt",{"_index":998,"title":{},"body":{"injectables/LookupsService.html":{}}}],["currency",{"_index":257,"title":{"classes/Currency.html":{}},"body":{"classes/Currency.html":{},"interfaces/CurrencyAttributes.html":{},"controllers/LookupsController.html":{},"injectables/LookupsService.html":{},"coverage.html":{}}}],["currency.code",{"_index":1007,"title":{},"body":{"injectables/LookupsService.html":{}}}],["currency.createdat",{"_index":1005,"title":{},"body":{"injectables/LookupsService.html":{}}}],["currency.findall",{"_index":996,"title":{},"body":{"injectables/LookupsService.html":{}}}],["currency.hasmany(localizedcurrency",{"_index":293,"title":{},"body":{"classes/Currency.html":{},"interfaces/CurrencyAttributes.html":{}}}],["currency.id",{"_index":1004,"title":{},"body":{"injectables/LookupsService.html":{}}}],["currency.init",{"_index":283,"title":{},"body":{"classes/Currency.html":{},"interfaces/CurrencyAttributes.html":{}}}],["currency.localized",{"_index":280,"title":{},"body":{"classes/Currency.html":{},"interfaces/CurrencyAttributes.html":{}}}],["currency.symbol",{"_index":1008,"title":{},"body":{"injectables/LookupsService.html":{}}}],["currency.updatedat",{"_index":1006,"title":{},"body":{"injectables/LookupsService.html":{}}}],["currencyattributes",{"_index":260,"title":{"interfaces/CurrencyAttributes.html":{}},"body":{"classes/Currency.html":{},"interfaces/CurrencyAttributes.html":{},"coverage.html":{}}}],["currencycode",{"_index":1364,"title":{},"body":{"injectables/StoryService.html":{}}}],["currencycreationattributes",{"_index":281,"title":{},"body":{"classes/Currency.html":{},"interfaces/CurrencyAttributes.html":{},"miscellaneous/typealiases.html":{}}}],["currencydto",{"_index":298,"title":{"interfaces/CurrencyDto.html":{}},"body":{"interfaces/CurrencyDto.html":{},"controllers/LookupsController.html":{},"injectables/LookupsService.html":{},"coverage.html":{}}}],["currencyid",{"_index":223,"title":{},"body":{"interfaces/CreateListingDto.html":{},"classes/Listing.html":{},"interfaces/ListingAttributes.html":{},"interfaces/ListingDto.html":{}}}],["currencyname",{"_index":714,"title":{},"body":{"interfaces/ListingDto.html":{}}}],["currencystandardcode",{"_index":715,"title":{},"body":{"interfaces/ListingDto.html":{}}}],["currencysymbol",{"_index":716,"title":{},"body":{"interfaces/ListingDto.html":{},"injectables/StoryService.html":{}}}],["currently",{"_index":1467,"title":{},"body":{"controllers/UserController.html":{}}}],["data",{"_index":25,"title":{},"body":{"classes/AppCache.html":{},"classes/CacheObject.html":{},"classes/ErrorResult.html":{},"injectables/LookupsService.html":{},"classes/NoDataResult.html":{},"classes/NotFoundResult.html":{},"classes/Result.html":{},"classes/SearchResultDto.html":{},"classes/SuccessResult.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["database",{"_index":1826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["databasemigration",{"_index":303,"title":{},"body":{"controllers/DevController.html":{}}}],["databasemigration(_req",{"_index":304,"title":{},"body":{"controllers/DevController.html":{}}}],["datatypes",{"_index":277,"title":{},"body":{"classes/Currency.html":{},"interfaces/CurrencyAttributes.html":{},"classes/Disclaimer.html":{},"interfaces/DisclaimerAttributes.html":{},"classes/HiringType.html":{},"interfaces/HiringTypeAttributes.html":{},"classes/Listing.html":{},"interfaces/ListingAttributes.html":{},"classes/ListingFollower.html":{},"interfaces/ListingFollowerAttributes.html":{},"classes/ListingReview.html":{},"interfaces/ListingReviewAttributes.html":{},"classes/ListingType.html":{},"interfaces/ListingTypeAttributes.html":{},"classes/LocalizedCurrency.html":{},"interfaces/LocalizedCurrencyAttributes.html":{},"classes/LocalizedDisclaimer.html":{},"interfaces/LocalizedDisclaimerAttributes.html":{},"classes/LocalizedHiringType.html":{},"interfaces/LocalizedHiringTypeAttributes.html":{},"classes/LocalizedListingType.html":{},"interfaces/LocalizedListingTypeAttributes.html":{},"classes/LocalizedPriceType.html":{},"interfaces/LocalizedPriceTypeAttributes.html":{},"classes/PasswordRecoveryToken.html":{},"interfaces/PasswordRecoveryTokenAttributes.html":{},"classes/PriceType.html":{},"interfaces/PriceTypeAttributes.html":{},"classes/Story.html":{},"interfaces/StoryAttributes.html":{},"classes/User.html":{},"interfaces/UserAttributes.html":{},"classes/UserFollower.html":{},"interfaces/UserFollowerAttributes.html":{}}}],["datatypes.boolean",{"_index":560,"title":{},"body":{"classes/Listing.html":{},"interfaces/ListingAttributes.html":{},"classes/User.html":{},"interfaces/UserAttributes.html":{}}}],["datatypes.float",{"_index":561,"title":{},"body":{"classes/Listing.html":{},"interfaces/ListingAttributes.html":{},"classes/ListingReview.html":{},"interfaces/ListingReviewAttributes.html":{}}}],["datatypes.json",{"_index":552,"title":{},"body":{"classes/Listing.html":{},"interfaces/ListingAttributes.html":{},"classes/Story.html":{},"interfaces/StoryAttributes.html":{}}}],["datatypes.number",{"_index":559,"title":{},"body":{"classes/Listing.html":{},"interfaces/ListingAttributes.html":{},"classes/Story.html":{},"interfaces/StoryAttributes.html":{}}}],["datatypes.string(10",{"_index":288,"title":{},"body":{"classes/Currency.html":{},"interfaces/CurrencyAttributes.html":{}}}],["datatypes.string(128",{"_index":491,"title":{},"body":{"classes/HiringType.html":{},"interfaces/HiringTypeAttributes.html":{},"classes/LocalizedCurrency.html":{},"interfaces/LocalizedCurrencyAttributes.html":{},"classes/LocalizedHiringType.html":{},"interfaces/LocalizedHiringTypeAttributes.html":{},"classes/LocalizedListingType.html":{},"interfaces/LocalizedListingTypeAttributes.html":{},"classes/LocalizedPriceType.html":{},"interfaces/LocalizedPriceTypeAttributes.html":{},"classes/PasswordRecoveryToken.html":{},"interfaces/PasswordRecoveryTokenAttributes.html":{},"classes/User.html":{},"interfaces/UserAttributes.html":{}}}],["datatypes.string(150",{"_index":351,"title":{},"body":{"classes/Disclaimer.html":{},"interfaces/DisclaimerAttributes.html":{},"classes/Listing.html":{},"interfaces/ListingAttributes.html":{},"classes/ListingType.html":{},"interfaces/ListingTypeAttributes.html":{},"classes/LocalizedDisclaimer.html":{},"interfaces/LocalizedDisclaimerAttributes.html":{},"classes/PriceType.html":{},"interfaces/PriceTypeAttributes.html":{}}}],["datatypes.string(1500",{"_index":557,"title":{},"body":{"classes/Listing.html":{},"interfaces/ListingAttributes.html":{}}}],["datatypes.string(200",{"_index":553,"title":{},"body":{"classes/Listing.html":{},"interfaces/ListingAttributes.html":{},"classes/Story.html":{},"interfaces/StoryAttributes.html":{},"classes/User.html":{},"interfaces/UserAttributes.html":{}}}],["datatypes.string(2000",{"_index":556,"title":{},"body":{"classes/Listing.html":{},"interfaces/ListingAttributes.html":{}}}],["datatypes.string(300",{"_index":1405,"title":{},"body":{"classes/User.html":{},"interfaces/UserAttributes.html":{}}}],["datatypes.string(3000",{"_index":554,"title":{},"body":{"classes/Listing.html":{},"interfaces/ListingAttributes.html":{},"classes/Story.html":{},"interfaces/StoryAttributes.html":{}}}],["datatypes.string(400",{"_index":558,"title":{},"body":{"classes/Listing.html":{},"interfaces/ListingAttributes.html":{}}}],["datatypes.string(5",{"_index":812,"title":{},"body":{"classes/LocalizedCurrency.html":{},"interfaces/LocalizedCurrencyAttributes.html":{},"classes/LocalizedDisclaimer.html":{},"interfaces/LocalizedDisclaimerAttributes.html":{},"classes/LocalizedHiringType.html":{},"interfaces/LocalizedHiringTypeAttributes.html":{},"classes/LocalizedListingType.html":{},"interfaces/LocalizedListingTypeAttributes.html":{},"classes/LocalizedPriceType.html":{},"interfaces/LocalizedPriceTypeAttributes.html":{}}}],["datatypes.string(50",{"_index":551,"title":{},"body":{"classes/Listing.html":{},"interfaces/ListingAttributes.html":{},"classes/ListingFollower.html":{},"interfaces/ListingFollowerAttributes.html":{},"classes/ListingReview.html":{},"interfaces/ListingReviewAttributes.html":{},"classes/ListingType.html":{},"interfaces/ListingTypeAttributes.html":{},"classes/LocalizedCurrency.html":{},"interfaces/LocalizedCurrencyAttributes.html":{},"classes/LocalizedDisclaimer.html":{},"interfaces/LocalizedDisclaimerAttributes.html":{},"classes/LocalizedHiringType.html":{},"interfaces/LocalizedHiringTypeAttributes.html":{},"classes/LocalizedListingType.html":{},"interfaces/LocalizedListingTypeAttributes.html":{},"classes/LocalizedPriceType.html":{},"interfaces/LocalizedPriceTypeAttributes.html":{},"classes/Story.html":{},"interfaces/StoryAttributes.html":{},"classes/User.html":{},"interfaces/UserAttributes.html":{},"classes/UserFollower.html":{},"interfaces/UserFollowerAttributes.html":{}}}],["datatypes.string(500",{"_index":774,"title":{},"body":{"classes/ListingReview.html":{},"interfaces/ListingReviewAttributes.html":{}}}],["datatypes.string(70",{"_index":555,"title":{},"body":{"classes/Listing.html":{},"interfaces/ListingAttributes.html":{}}}],["datatypes.text",{"_index":1088,"title":{},"body":{"classes/PasswordRecoveryToken.html":{},"interfaces/PasswordRecoveryTokenAttributes.html":{},"classes/User.html":{},"interfaces/UserAttributes.html":{}}}],["datatypes.uuid",{"_index":284,"title":{},"body":{"classes/Currency.html":{},"interfaces/CurrencyAttributes.html":{},"classes/Disclaimer.html":{},"interfaces/DisclaimerAttributes.html":{},"classes/HiringType.html":{},"interfaces/HiringTypeAttributes.html":{},"classes/Listing.html":{},"interfaces/ListingAttributes.html":{},"classes/ListingFollower.html":{},"interfaces/ListingFollowerAttributes.html":{},"classes/ListingReview.html":{},"interfaces/ListingReviewAttributes.html":{},"classes/ListingType.html":{},"interfaces/ListingTypeAttributes.html":{},"classes/LocalizedCurrency.html":{},"interfaces/LocalizedCurrencyAttributes.html":{},"classes/LocalizedDisclaimer.html":{},"interfaces/LocalizedDisclaimerAttributes.html":{},"classes/LocalizedHiringType.html":{},"interfaces/LocalizedHiringTypeAttributes.html":{},"classes/LocalizedListingType.html":{},"interfaces/LocalizedListingTypeAttributes.html":{},"classes/LocalizedPriceType.html":{},"interfaces/LocalizedPriceTypeAttributes.html":{},"classes/PasswordRecoveryToken.html":{},"interfaces/PasswordRecoveryTokenAttributes.html":{},"classes/PriceType.html":{},"interfaces/PriceTypeAttributes.html":{},"classes/Story.html":{},"interfaces/StoryAttributes.html":{},"classes/User.html":{},"interfaces/UserAttributes.html":{},"classes/UserFollower.html":{},"interfaces/UserFollowerAttributes.html":{}}}],["date",{"_index":48,"title":{},"body":{"classes/AppCache.html":{},"classes/CacheObject.html":{},"classes/Currency.html":{},"interfaces/CurrencyAttributes.html":{},"interfaces/CurrencyDto.html":{},"classes/Disclaimer.html":{},"interfaces/DisclaimerAttributes.html":{},"interfaces/DisclaimerDto.html":{},"classes/HiringType.html":{},"interfaces/HiringTypeAttributes.html":{},"interfaces/HiringTypeDto.html":{},"classes/Listing.html":{},"interfaces/ListingAttributes.html":{},"interfaces/ListingDto.html":{},"classes/ListingFollower.html":{},"interfaces/ListingFollowerAttributes.html":{},"classes/ListingReview.html":{},"interfaces/ListingReviewAttributes.html":{},"interfaces/ListingReviewDto-1.html":{},"classes/ListingType.html":{},"interfaces/ListingTypeAttributes.html":{},"interfaces/ListingTypeDto.html":{},"classes/LocalizedCurrency.html":{},"interfaces/LocalizedCurrencyAttributes.html":{},"classes/LocalizedDisclaimer.html":{},"interfaces/LocalizedDisclaimerAttributes.html":{},"classes/LocalizedHiringType.html":{},"interfaces/LocalizedHiringTypeAttributes.html":{},"classes/LocalizedListingType.html":{},"interfaces/LocalizedListingTypeAttributes.html":{},"classes/LocalizedPriceType.html":{},"interfaces/LocalizedPriceTypeAttributes.html":{},"classes/PriceType.html":{},"interfaces/PriceTypeAttributes.html":{},"interfaces/PriceTypeDto.html":{},"classes/Story.html":{},"interfaces/StoryAttributes.html":{},"interfaces/StoryDto.html":{},"classes/User.html":{},"interfaces/UserAttributes.html":{},"classes/UserFollower.html":{},"interfaces/UserFollowerAttributes.html":{}}}],["date().getfullyear().tostring",{"_index":1062,"title":{},"body":{"injectables/MailManager.html":{}}}],["dbstory",{"_index":1286,"title":{},"body":{"injectables/StoryService.html":{}}}],["dbstory.listingid",{"_index":1292,"title":{},"body":{"injectables/StoryService.html":{}}}],["dbstory.ownerid",{"_index":1288,"title":{},"body":{"injectables/StoryService.html":{}}}],["dbstory?.listingid",{"_index":1290,"title":{},"body":{"injectables/StoryService.html":{}}}],["debug",{"_index":1652,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["debug0('imaginativenews",{"_index":1796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["declarations",{"_index":97,"title":{},"body":{"modules/AppLoggerModule.html":{},"modules/ApplicationModule.html":{},"modules/CoreModule.html":{},"modules/DevModule.html":{},"modules/ListingModule.html":{},"modules/LookupsModule.html":{},"modules/StoryModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decoded",{"_index":164,"title":{},"body":{"injectables/AuthMiddleware.html":{},"miscellaneous/variables.html":{}}}],["decoded.user",{"_index":1822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decoded[data",{"_index":1821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decorators",{"_index":180,"title":{},"body":{"controllers/CacheController.html":{},"controllers/DevController.html":{},"controllers/FilesController.html":{},"controllers/ListingController.html":{},"classes/LoginUserDto.html":{},"controllers/LookupsController.html":{},"classes/RegisterUser.html":{},"controllers/StoryController.html":{},"classes/ToggleUserFollowDto.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{}}}],["default",{"_index":19,"title":{},"body":{"classes/AppCache.html":{},"interfaces/CreateListingDto.html":{},"interfaces/CreateStoryDto.html":{},"classes/Currency.html":{},"interfaces/CurrencyAttributes.html":{},"interfaces/CurrencyDto.html":{},"classes/Disclaimer.html":{},"interfaces/DisclaimerAttributes.html":{},"interfaces/DisclaimerDto.html":{},"classes/ErrorCodes.html":{},"classes/ErrorResult.html":{},"injectables/FireBase.html":{},"classes/HiringType.html":{},"interfaces/HiringTypeAttributes.html":{},"interfaces/HiringTypeDto.html":{},"interfaces/IGoogleProfile.html":{},"classes/KeyValuePair.html":{},"classes/Listing.html":{},"interfaces/ListingAttributes.html":{},"controllers/ListingController.html":{},"interfaces/ListingDto.html":{},"classes/ListingFollower.html":{},"interfaces/ListingFollowerAttributes.html":{},"classes/ListingReview.html":{},"interfaces/ListingReviewAttributes.html":{},"interfaces/ListingReviewDto.html":{},"interfaces/ListingReviewDto-1.html":{},"classes/ListingType.html":{},"interfaces/ListingTypeAttributes.html":{},"interfaces/ListingTypeDto.html":{},"classes/LocalizedCurrency.html":{},"interfaces/LocalizedCurrencyAttributes.html":{},"classes/LocalizedDisclaimer.html":{},"interfaces/LocalizedDisclaimerAttributes.html":{},"classes/LocalizedHiringType.html":{},"interfaces/LocalizedHiringTypeAttributes.html":{},"classes/LocalizedListingType.html":{},"interfaces/LocalizedListingTypeAttributes.html":{},"classes/LocalizedPriceType.html":{},"interfaces/LocalizedPriceTypeAttributes.html":{},"classes/LoginUserDto.html":{},"controllers/LookupsController.html":{},"injectables/MailManager.html":{},"classes/NoDataResult.html":{},"classes/NotFoundResult.html":{},"classes/OperationResult.html":{},"classes/PasswordRecoveryToken.html":{},"interfaces/PasswordRecoveryTokenAttributes.html":{},"classes/PriceType.html":{},"interfaces/PriceTypeAttributes.html":{},"interfaces/PriceTypeDto.html":{},"classes/RegisterUser.html":{},"interfaces/ResetPassword.html":{},"classes/Result.html":{},"classes/SearchListingDto.html":{},"classes/SearchResultDto.html":{},"classes/SearchStoryDto.html":{},"classes/Story.html":{},"interfaces/StoryAttributes.html":{},"controllers/StoryController.html":{},"interfaces/StoryDto.html":{},"injectables/StoryService.html":{},"classes/SuccessResult.html":{},"interfaces/ToggleListingFollowDto.html":{},"classes/ToggleUserFollowDto.html":{},"classes/User.html":{},"interfaces/UserAttributes.html":{},"classes/UserDto.html":{},"classes/UserFollower.html":{},"interfaces/UserFollowerAttributes.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":21,"title":{},"body":{"classes/AppCache.html":{},"injectables/AppLogger.html":{},"injectables/AuthMiddleware.html":{},"controllers/CacheController.html":{},"classes/CacheObject.html":{},"modules/CoreModule.html":{},"classes/Currency.html":{},"controllers/DevController.html":{},"modules/DevModule.html":{},"classes/Disclaimer.html":{},"classes/ErrorCodes.html":{},"classes/ErrorResult.html":{},"controllers/FilesController.html":{},"injectables/FireBase.html":{},"classes/HiringType.html":{},"classes/KeyValuePair.html":{},"classes/Listing.html":{},"controllers/ListingController.html":{},"classes/ListingFollower.html":{},"modules/ListingModule.html":{},"classes/ListingReview.html":{},"classes/ListingType.html":{},"classes/LocalizedCurrency.html":{},"classes/LocalizedDisclaimer.html":{},"classes/LocalizedHiringType.html":{},"classes/LocalizedListingType.html":{},"classes/LocalizedPriceType.html":{},"classes/LoginUserDto.html":{},"controllers/LookupsController.html":{},"modules/LookupsModule.html":{},"injectables/LookupsService.html":{},"injectables/MailManager.html":{},"classes/NoDataResult.html":{},"classes/NotFoundResult.html":{},"classes/OperationResult.html":{},"classes/PasswordRecoveryToken.html":{},"classes/PriceType.html":{},"injectables/PrismaService.html":{},"classes/RegisterUser.html":{},"classes/Result.html":{},"classes/SearchListingDto.html":{},"classes/SearchResultDto.html":{},"classes/SearchStoryDto.html":{},"classes/Story.html":{},"controllers/StoryController.html":{},"modules/StoryModule.html":{},"injectables/StoryService.html":{},"classes/SuccessResult.html":{},"classes/ToggleUserFollowDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserFollower.html":{},"modules/UserModule.html":{},"classes/UserSnippetDto.html":{},"injectables/ValidationPipe.html":{}}}],["delete",{"_index":190,"title":{},"body":{"controllers/CacheController.html":{},"controllers/FilesController.html":{},"controllers/ListingController.html":{},"controllers/StoryController.html":{}}}],["delete('v1/cache",{"_index":199,"title":{},"body":{"controllers/CacheController.html":{}}}],["delete('v1/cache')@apioperation({summary",{"_index":181,"title":{},"body":{"controllers/CacheController.html":{}}}],["delete('v1/files/:bucket/:type/:name",{"_index":436,"title":{},"body":{"controllers/FilesController.html":{}}}],["delete('v1/listings/:id",{"_index":691,"title":{},"body":{"controllers/ListingController.html":{}}}],["delete('v1/listings/:listingid/reviews/:reviewid",{"_index":705,"title":{},"body":{"controllers/ListingController.html":{}}}],["delete('v1/stories/:id",{"_index":1233,"title":{},"body":{"controllers/StoryController.html":{}}}],["deletefile",{"_index":383,"title":{},"body":{"controllers/FilesController.html":{},"injectables/LookupsService.html":{}}}],["deletefile(bucket",{"_index":387,"title":{},"body":{"controllers/FilesController.html":{},"injectables/LookupsService.html":{}}}],["deletelisting",{"_index":566,"title":{},"body":{"controllers/ListingController.html":{}}}],["deletelisting(userid",{"_index":587,"title":{},"body":{"controllers/ListingController.html":{}}}],["deletelistingreview",{"_index":567,"title":{},"body":{"controllers/ListingController.html":{}}}],["deletelistingreview(userid",{"_index":593,"title":{},"body":{"controllers/ListingController.html":{}}}],["deletes",{"_index":182,"title":{},"body":{"controllers/CacheController.html":{},"controllers/FilesController.html":{},"controllers/ListingController.html":{},"controllers/StoryController.html":{}}}],["deletestory",{"_index":1185,"title":{},"body":{"controllers/StoryController.html":{},"injectables/StoryService.html":{}}}],["deletestory(ownerid",{"_index":1256,"title":{},"body":{"injectables/StoryService.html":{}}}],["deletestory(userid",{"_index":1196,"title":{},"body":{"controllers/StoryController.html":{}}}],["dependencies",{"_index":95,"title":{"dependencies.html":{}},"body":{"modules/AppLoggerModule.html":{},"modules/ApplicationModule.html":{},"modules/CoreModule.html":{},"modules/DevModule.html":{},"modules/ListingModule.html":{},"modules/LookupsModule.html":{},"modules/StoryModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desc",{"_index":1283,"title":{},"body":{"injectables/StoryService.html":{}}}],["description",{"_index":224,"title":{},"body":{"interfaces/CreateListingDto.html":{},"classes/Listing.html":{},"interfaces/ListingAttributes.html":{},"controllers/ListingController.html":{},"interfaces/ListingDto.html":{},"controllers/LookupsController.html":{},"controllers/StoryController.html":{},"controllers/UserController.html":{},"index.html":{}}}],["details",{"_index":1445,"title":{},"body":{"controllers/UserController.html":{}}}],["details'})@apiresponse({status",{"_index":1469,"title":{},"body":{"controllers/UserController.html":{}}}],["dev.controller",{"_index":334,"title":{},"body":{"modules/DevModule.html":{}}}],["dev/dev.module",{"_index":121,"title":{},"body":{"modules/ApplicationModule.html":{}}}],["devcontroller",{"_index":301,"title":{"controllers/DevController.html":{}},"body":{"controllers/DevController.html":{},"modules/DevModule.html":{},"coverage.html":{}}}],["development",{"_index":1741,"title":{},"body":{"index.html":{}}}],["devmodule",{"_index":112,"title":{"modules/DevModule.html":{}},"body":{"modules/ApplicationModule.html":{},"modules/DevModule.html":{},"modules.html":{},"overview.html":{}}}],["disclaimer",{"_index":337,"title":{"classes/Disclaimer.html":{}},"body":{"classes/Disclaimer.html":{},"interfaces/DisclaimerAttributes.html":{},"controllers/LookupsController.html":{},"injectables/LookupsService.html":{},"coverage.html":{}}}],["disclaimer.code",{"_index":1026,"title":{},"body":{"injectables/LookupsService.html":{}}}],["disclaimer.createdat",{"_index":1027,"title":{},"body":{"injectables/LookupsService.html":{}}}],["disclaimer.findall",{"_index":1023,"title":{},"body":{"injectables/LookupsService.html":{}}}],["disclaimer.hasmany(localizeddisclaimer",{"_index":353,"title":{},"body":{"classes/Disclaimer.html":{},"interfaces/DisclaimerAttributes.html":{}}}],["disclaimer.id",{"_index":1025,"title":{},"body":{"injectables/LookupsService.html":{}}}],["disclaimer.init",{"_index":350,"title":{},"body":{"classes/Disclaimer.html":{},"interfaces/DisclaimerAttributes.html":{}}}],["disclaimer.localized",{"_index":348,"title":{},"body":{"classes/Disclaimer.html":{},"interfaces/DisclaimerAttributes.html":{}}}],["disclaimer.updatedat",{"_index":1028,"title":{},"body":{"injectables/LookupsService.html":{}}}],["disclaimerattributes",{"_index":339,"title":{"interfaces/DisclaimerAttributes.html":{}},"body":{"classes/Disclaimer.html":{},"interfaces/DisclaimerAttributes.html":{},"coverage.html":{}}}],["disclaimercreationattributes",{"_index":349,"title":{},"body":{"classes/Disclaimer.html":{},"interfaces/DisclaimerAttributes.html":{},"miscellaneous/typealiases.html":{}}}],["disclaimerdto",{"_index":355,"title":{"interfaces/DisclaimerDto.html":{}},"body":{"interfaces/DisclaimerDto.html":{},"controllers/LookupsController.html":{},"injectables/LookupsService.html":{},"coverage.html":{}}}],["disclaimerid",{"_index":251,"title":{},"body":{"interfaces/CreateStoryDto.html":{},"classes/Story.html":{},"interfaces/StoryAttributes.html":{},"interfaces/StoryDto.html":{},"injectables/StoryService.html":{}}}],["disclaimername",{"_index":1236,"title":{},"body":{"interfaces/StoryDto.html":{},"injectables/StoryService.html":{}}}],["disclaimers",{"_index":352,"title":{},"body":{"classes/Disclaimer.html":{},"interfaces/DisclaimerAttributes.html":{},"injectables/LookupsService.html":{},"injectables/StoryService.html":{}}}],["disclaimers.find((lt",{"_index":1335,"title":{},"body":{"injectables/StoryService.html":{}}}],["docs",{"_index":1755,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1630,"title":{},"body":{"coverage.html":{}}}],["domain",{"_index":418,"title":{},"body":{"controllers/FilesController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["domainuriprefix",{"_index":464,"title":{},"body":{"injectables/FireBase.html":{}}}],["domain}/api/v1/files/${bucket}/${type}/${filename",{"_index":430,"title":{},"body":{"controllers/FilesController.html":{}}}],["dotenv",{"_index":1686,"title":{},"body":{"dependencies.html":{}}}],["dotenv.config",{"_index":1798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["draft",{"_index":367,"title":{},"body":{"classes/ErrorCodes.html":{},"miscellaneous/enumerations.html":{}}}],["draft|1",{"_index":1176,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryAttributes.html":{}}}],["dto/createlistingdto",{"_index":653,"title":{},"body":{"controllers/ListingController.html":{}}}],["dto/createlistingreviewdto",{"_index":660,"title":{},"body":{"controllers/ListingController.html":{}}}],["dto/createstorydto",{"_index":1215,"title":{},"body":{"controllers/StoryController.html":{},"injectables/StoryService.html":{}}}],["dto/currencydto",{"_index":893,"title":{},"body":{"controllers/LookupsController.html":{},"injectables/LookupsService.html":{}}}],["dto/disclaimerdto",{"_index":894,"title":{},"body":{"controllers/LookupsController.html":{},"injectables/LookupsService.html":{}}}],["dto/hiringtypedto",{"_index":895,"title":{},"body":{"controllers/LookupsController.html":{},"injectables/LookupsService.html":{}}}],["dto/listingdto",{"_index":656,"title":{},"body":{"controllers/ListingController.html":{}}}],["dto/listingreviewdto",{"_index":662,"title":{},"body":{"controllers/ListingController.html":{}}}],["dto/listingtypedto",{"_index":896,"title":{},"body":{"controllers/LookupsController.html":{},"injectables/LookupsService.html":{}}}],["dto/loginuserdto",{"_index":1475,"title":{},"body":{"controllers/UserController.html":{}}}],["dto/pricetypedto",{"_index":898,"title":{},"body":{"controllers/LookupsController.html":{},"injectables/LookupsService.html":{}}}],["dto/searchlistingdto",{"_index":659,"title":{},"body":{"controllers/ListingController.html":{}}}],["dto/searchstorydto",{"_index":1218,"title":{},"body":{"controllers/StoryController.html":{},"injectables/StoryService.html":{}}}],["dto/storydto",{"_index":1217,"title":{},"body":{"controllers/StoryController.html":{},"injectables/StoryService.html":{}}}],["dto/togglelistingfollowdto",{"_index":663,"title":{},"body":{"controllers/ListingController.html":{}}}],["dto/toggleuserfollowdto",{"_index":1477,"title":{},"body":{"controllers/UserController.html":{}}}],["dto/userdto",{"_index":1478,"title":{},"body":{"controllers/UserController.html":{}}}],["dto/usersnippetdto",{"_index":1480,"title":{},"body":{"controllers/UserController.html":{}}}],["duplicatefile",{"_index":928,"title":{},"body":{"injectables/LookupsService.html":{}}}],["duplicatefile(bucket",{"_index":933,"title":{},"body":{"injectables/LookupsService.html":{}}}],["duplicatefiles",{"_index":384,"title":{},"body":{"controllers/FilesController.html":{}}}],["duplicatefiles(@body",{"_index":442,"title":{},"body":{"controllers/FilesController.html":{}}}],["duplicatefiles(mediafiles",{"_index":393,"title":{},"body":{"controllers/FilesController.html":{}}}],["duplicates",{"_index":395,"title":{},"body":{"controllers/FilesController.html":{}}}],["dynamiclinkinfo",{"_index":463,"title":{},"body":{"injectables/FireBase.html":{}}}],["e2e",{"_index":1752,"title":{},"body":{"index.html":{}}}],["ebxzhu7xyfwe6qaqhc",{"_index":462,"title":{},"body":{"injectables/FireBase.html":{}}}],["el.property",{"_index":1623,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["email",{"_index":455,"title":{},"body":{"injectables/FireBase.html":{},"interfaces/IGoogleProfile.html":{},"classes/LoginUserDto.html":{},"injectables/MailManager.html":{},"classes/RegisterUser.html":{},"interfaces/ResetPassword.html":{},"classes/User.html":{},"interfaces/UserAttributes.html":{},"controllers/UserController.html":{},"miscellaneous/functions.html":{}}}],["emailtemplate",{"_index":1052,"title":{},"body":{"injectables/MailManager.html":{}}}],["emailtemplate.replace('{{name",{"_index":1059,"title":{},"body":{"injectables/MailManager.html":{}}}],["en",{"_index":586,"title":{},"body":{"controllers/ListingController.html":{},"controllers/LookupsController.html":{},"controllers/StoryController.html":{}}}],["endwithinternalservererror",{"_index":1473,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["endwithinternalservererror(res",{"_index":1500,"title":{},"body":{"controllers/UserController.html":{},"miscellaneous/functions.html":{}}}],["enum",{"_index":365,"title":{},"body":{"classes/ErrorCodes.html":{}}}],["enumerations",{"_index":1725,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":84,"title":{},"body":{"injectables/AppLogger.html":{},"injectables/AuthMiddleware.html":{},"controllers/FilesController.html":{},"injectables/LookupsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["env.app_domain",{"_index":419,"title":{},"body":{"controllers/FilesController.html":{},"miscellaneous/variables.html":{}}}],["env.app_log_file",{"_index":87,"title":{},"body":{"injectables/AppLogger.html":{},"miscellaneous/variables.html":{}}}],["env.example",{"_index":1800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["env.jwt_secret",{"_index":155,"title":{},"body":{"injectables/AuthMiddleware.html":{},"miscellaneous/variables.html":{}}}],["env.upload_root_dir",{"_index":959,"title":{},"body":{"injectables/LookupsService.html":{},"miscellaneous/variables.html":{}}}],["envfilepath",{"_index":1660,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["err",{"_index":90,"title":{},"body":{"injectables/AppLogger.html":{},"classes/ErrorResult.html":{},"injectables/LookupsService.html":{},"controllers/UserController.html":{},"miscellaneous/functions.html":{}}}],["error",{"_index":76,"title":{},"body":{"injectables/AppLogger.html":{},"classes/ErrorResult.html":{},"injectables/LookupsService.html":{},"classes/NoDataResult.html":{},"classes/NotFoundResult.html":{},"classes/Result.html":{},"injectables/StoryService.html":{},"classes/SuccessResult.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["error(message",{"_index":77,"title":{},"body":{"injectables/AppLogger.html":{}}}],["errorcodes",{"_index":357,"title":{"classes/ErrorCodes.html":{}},"body":{"classes/ErrorCodes.html":{},"injectables/StoryService.html":{},"coverage.html":{}}}],["errorcodes.general_error",{"_index":1301,"title":{},"body":{"injectables/StoryService.html":{}}}],["errorcodes.not_found",{"_index":1297,"title":{},"body":{"injectables/StoryService.html":{}}}],["errorresult",{"_index":369,"title":{"classes/ErrorResult.html":{}},"body":{"classes/ErrorResult.html":{},"coverage.html":{}}}],["errors",{"_index":1485,"title":{},"body":{"controllers/UserController.html":{},"injectables/ValidationPipe.html":{}}}],["errors.foreach((el",{"_index":1621,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["errors.length",{"_index":1615,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["example_template",{"_index":1179,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryAttributes.html":{}}}],["execoperation",{"_index":657,"title":{},"body":{"controllers/ListingController.html":{},"controllers/StoryController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["execoperation(async",{"_index":671,"title":{},"body":{"controllers/ListingController.html":{},"controllers/StoryController.html":{}}}],["executioncontext",{"_index":1809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["existing",{"_index":635,"title":{},"body":{"controllers/ListingController.html":{},"controllers/StoryController.html":{}}}],["expiredate",{"_index":47,"title":{},"body":{"classes/AppCache.html":{},"classes/CacheObject.html":{}}}],["export",{"_index":66,"title":{},"body":{"classes/AppCache.html":{},"injectables/AppLogger.html":{},"modules/AppLoggerModule.html":{},"modules/ApplicationModule.html":{},"injectables/AuthMiddleware.html":{},"controllers/CacheController.html":{},"classes/CacheObject.html":{},"modules/CoreModule.html":{},"interfaces/CreateListingDto.html":{},"interfaces/CreateStoryDto.html":{},"classes/Currency.html":{},"interfaces/CurrencyAttributes.html":{},"interfaces/CurrencyDto.html":{},"controllers/DevController.html":{},"modules/DevModule.html":{},"classes/Disclaimer.html":{},"interfaces/DisclaimerAttributes.html":{},"interfaces/DisclaimerDto.html":{},"classes/ErrorCodes.html":{},"classes/ErrorResult.html":{},"controllers/FilesController.html":{},"injectables/FireBase.html":{},"classes/HiringType.html":{},"interfaces/HiringTypeAttributes.html":{},"interfaces/HiringTypeDto.html":{},"interfaces/IGoogleProfile.html":{},"classes/KeyValuePair.html":{},"classes/Listing.html":{},"interfaces/ListingAttributes.html":{},"controllers/ListingController.html":{},"interfaces/ListingDto.html":{},"classes/ListingFollower.html":{},"interfaces/ListingFollowerAttributes.html":{},"modules/ListingModule.html":{},"classes/ListingReview.html":{},"interfaces/ListingReviewAttributes.html":{},"interfaces/ListingReviewDto.html":{},"interfaces/ListingReviewDto-1.html":{},"classes/ListingType.html":{},"interfaces/ListingTypeAttributes.html":{},"interfaces/ListingTypeDto.html":{},"classes/LocalizedCurrency.html":{},"interfaces/LocalizedCurrencyAttributes.html":{},"classes/LocalizedDisclaimer.html":{},"interfaces/LocalizedDisclaimerAttributes.html":{},"classes/LocalizedHiringType.html":{},"interfaces/LocalizedHiringTypeAttributes.html":{},"classes/LocalizedListingType.html":{},"interfaces/LocalizedListingTypeAttributes.html":{},"classes/LocalizedPriceType.html":{},"interfaces/LocalizedPriceTypeAttributes.html":{},"classes/LoginUserDto.html":{},"controllers/LookupsController.html":{},"modules/LookupsModule.html":{},"injectables/LookupsService.html":{},"injectables/MailManager.html":{},"classes/NoDataResult.html":{},"classes/NotFoundResult.html":{},"classes/OperationResult.html":{},"classes/PasswordRecoveryToken.html":{},"interfaces/PasswordRecoveryTokenAttributes.html":{},"classes/PriceType.html":{},"interfaces/PriceTypeAttributes.html":{},"interfaces/PriceTypeDto.html":{},"injectables/PrismaService.html":{},"classes/RegisterUser.html":{},"interfaces/ResetPassword.html":{},"classes/Result.html":{},"classes/SearchListingDto.html":{},"classes/SearchResultDto.html":{},"classes/SearchStoryDto.html":{},"classes/Story.html":{},"interfaces/StoryAttributes.html":{},"controllers/StoryController.html":{},"interfaces/StoryDto.html":{},"modules/StoryModule.html":{},"injectables/StoryService.html":{},"classes/SuccessResult.html":{},"interfaces/ToggleListingFollowDto.html":{},"classes/ToggleUserFollowDto.html":{},"classes/User.html":{},"interfaces/UserAttributes.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserFollower.html":{},"interfaces/UserFollowerAttributes.html":{},"modules/UserModule.html":{},"classes/UserSnippetDto.html":{},"injectables/ValidationPipe.html":{}}}],["exports",{"_index":100,"title":{},"body":{"modules/AppLoggerModule.html":{},"modules/ApplicationModule.html":{},"modules/CoreModule.html":{},"modules/DevModule.html":{},"modules/ListingModule.html":{},"modules/LookupsModule.html":{},"modules/StoryModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":143,"title":{},"body":{"injectables/AuthMiddleware.html":{},"controllers/DevController.html":{},"controllers/FilesController.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["extends",{"_index":74,"title":{},"body":{"injectables/AppLogger.html":{},"classes/Currency.html":{},"interfaces/CurrencyAttributes.html":{},"classes/Disclaimer.html":{},"interfaces/DisclaimerAttributes.html":{},"classes/ErrorResult.html":{},"classes/HiringType.html":{},"interfaces/HiringTypeAttributes.html":{},"classes/Listing.html":{},"interfaces/ListingAttributes.html":{},"classes/ListingFollower.html":{},"interfaces/ListingFollowerAttributes.html":{},"classes/ListingReview.html":{},"interfaces/ListingReviewAttributes.html":{},"classes/ListingType.html":{},"interfaces/ListingTypeAttributes.html":{},"classes/LocalizedCurrency.html":{},"interfaces/LocalizedCurrencyAttributes.html":{},"classes/LocalizedDisclaimer.html":{},"interfaces/LocalizedDisclaimerAttributes.html":{},"classes/LocalizedHiringType.html":{},"interfaces/LocalizedHiringTypeAttributes.html":{},"classes/LocalizedListingType.html":{},"interfaces/LocalizedListingTypeAttributes.html":{},"classes/LocalizedPriceType.html":{},"interfaces/LocalizedPriceTypeAttributes.html":{},"classes/NoDataResult.html":{},"classes/NotFoundResult.html":{},"classes/PasswordRecoveryToken.html":{},"interfaces/PasswordRecoveryTokenAttributes.html":{},"classes/PriceType.html":{},"interfaces/PriceTypeAttributes.html":{},"injectables/PrismaService.html":{},"classes/Story.html":{},"interfaces/StoryAttributes.html":{},"classes/SuccessResult.html":{},"classes/User.html":{},"interfaces/UserAttributes.html":{},"classes/UserFollower.html":{},"interfaces/UserFollowerAttributes.html":{}}}],["f",{"_index":1346,"title":{},"body":{"injectables/StoryService.html":{}}}],["facebookid",{"_index":1384,"title":{},"body":{"classes/User.html":{},"interfaces/UserAttributes.html":{}}}],["facebooklogin",{"_index":1411,"title":{},"body":{"controllers/UserController.html":{}}}],["facebooklogin(req",{"_index":1423,"title":{},"body":{"controllers/UserController.html":{}}}],["failed",{"_index":1618,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["false",{"_index":290,"title":{},"body":{"classes/Currency.html":{},"interfaces/CurrencyAttributes.html":{},"classes/Disclaimer.html":{},"interfaces/DisclaimerAttributes.html":{},"controllers/FilesController.html":{},"classes/HiringType.html":{},"interfaces/HiringTypeAttributes.html":{},"classes/Listing.html":{},"interfaces/ListingAttributes.html":{},"controllers/ListingController.html":{},"classes/ListingFollower.html":{},"interfaces/ListingFollowerAttributes.html":{},"classes/ListingReview.html":{},"interfaces/ListingReviewAttributes.html":{},"classes/ListingType.html":{},"interfaces/ListingTypeAttributes.html":{},"classes/LocalizedCurrency.html":{},"interfaces/LocalizedCurrencyAttributes.html":{},"classes/LocalizedDisclaimer.html":{},"interfaces/LocalizedDisclaimerAttributes.html":{},"classes/LocalizedHiringType.html":{},"interfaces/LocalizedHiringTypeAttributes.html":{},"classes/LocalizedListingType.html":{},"interfaces/LocalizedListingTypeAttributes.html":{},"classes/LocalizedPriceType.html":{},"interfaces/LocalizedPriceTypeAttributes.html":{},"injectables/LookupsService.html":{},"classes/PasswordRecoveryToken.html":{},"interfaces/PasswordRecoveryTokenAttributes.html":{},"classes/PriceType.html":{},"interfaces/PriceTypeAttributes.html":{},"classes/Story.html":{},"interfaces/StoryAttributes.html":{},"injectables/StoryService.html":{},"classes/User.html":{},"interfaces/UserAttributes.html":{},"classes/UserFollower.html":{},"interfaces/UserFollowerAttributes.html":{}}}],["family_name",{"_index":499,"title":{},"body":{"interfaces/IGoogleProfile.html":{}}}],["featuredproductid",{"_index":1385,"title":{},"body":{"classes/User.html":{},"interfaces/UserAttributes.html":{},"classes/UserDto.html":{},"classes/UserSnippetDto.html":{}}}],["featuredproductname",{"_index":1386,"title":{},"body":{"classes/User.html":{},"interfaces/UserAttributes.html":{},"classes/UserDto.html":{},"classes/UserSnippetDto.html":{}}}],["field",{"_index":618,"title":{},"body":{"controllers/ListingController.html":{},"controllers/StoryController.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AppCache.html":{},"injectables/AppLogger.html":{},"modules/AppLoggerModule.html":{},"modules/ApplicationModule.html":{},"injectables/AuthMiddleware.html":{},"controllers/CacheController.html":{},"classes/CacheObject.html":{},"modules/CoreModule.html":{},"interfaces/CreateListingDto.html":{},"interfaces/CreateStoryDto.html":{},"classes/Currency.html":{},"interfaces/CurrencyAttributes.html":{},"interfaces/CurrencyDto.html":{},"controllers/DevController.html":{},"modules/DevModule.html":{},"classes/Disclaimer.html":{},"interfaces/DisclaimerAttributes.html":{},"interfaces/DisclaimerDto.html":{},"classes/ErrorCodes.html":{},"classes/ErrorResult.html":{},"controllers/FilesController.html":{},"injectables/FireBase.html":{},"classes/HiringType.html":{},"interfaces/HiringTypeAttributes.html":{},"interfaces/HiringTypeDto.html":{},"interfaces/IGoogleProfile.html":{},"classes/KeyValuePair.html":{},"classes/Listing.html":{},"interfaces/ListingAttributes.html":{},"controllers/ListingController.html":{},"interfaces/ListingDto.html":{},"classes/ListingFollower.html":{},"interfaces/ListingFollowerAttributes.html":{},"modules/ListingModule.html":{},"classes/ListingReview.html":{},"interfaces/ListingReviewAttributes.html":{},"interfaces/ListingReviewDto.html":{},"interfaces/ListingReviewDto-1.html":{},"classes/ListingType.html":{},"interfaces/ListingTypeAttributes.html":{},"interfaces/ListingTypeDto.html":{},"classes/LocalizedCurrency.html":{},"interfaces/LocalizedCurrencyAttributes.html":{},"classes/LocalizedDisclaimer.html":{},"interfaces/LocalizedDisclaimerAttributes.html":{},"classes/LocalizedHiringType.html":{},"interfaces/LocalizedHiringTypeAttributes.html":{},"classes/LocalizedListingType.html":{},"interfaces/LocalizedListingTypeAttributes.html":{},"classes/LocalizedPriceType.html":{},"interfaces/LocalizedPriceTypeAttributes.html":{},"classes/LoginUserDto.html":{},"controllers/LookupsController.html":{},"modules/LookupsModule.html":{},"injectables/LookupsService.html":{},"injectables/MailManager.html":{},"classes/NoDataResult.html":{},"classes/NotFoundResult.html":{},"classes/OperationResult.html":{},"classes/PasswordRecoveryToken.html":{},"interfaces/PasswordRecoveryTokenAttributes.html":{},"classes/PriceType.html":{},"interfaces/PriceTypeAttributes.html":{},"interfaces/PriceTypeDto.html":{},"injectables/PrismaService.html":{},"classes/RegisterUser.html":{},"interfaces/ResetPassword.html":{},"classes/Result.html":{},"classes/SearchListingDto.html":{},"classes/SearchResultDto.html":{},"classes/SearchStoryDto.html":{},"classes/Story.html":{},"interfaces/StoryAttributes.html":{},"controllers/StoryController.html":{},"interfaces/StoryDto.html":{},"modules/StoryModule.html":{},"injectables/StoryService.html":{},"classes/SuccessResult.html":{},"interfaces/ToggleListingFollowDto.html":{},"classes/ToggleUserFollowDto.html":{},"classes/User.html":{},"interfaces/UserAttributes.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserFollower.html":{},"interfaces/UserFollowerAttributes.html":{},"modules/UserModule.html":{},"classes/UserSnippetDto.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["file.buffer",{"_index":429,"title":{},"body":{"controllers/FilesController.html":{}}}],["file.controller",{"_index":922,"title":{},"body":{"modules/LookupsModule.html":{}}}],["filecontent",{"_index":945,"title":{},"body":{"injectables/LookupsService.html":{}}}],["fileinterceptor",{"_index":412,"title":{},"body":{"controllers/FilesController.html":{}}}],["filename",{"_index":426,"title":{},"body":{"controllers/FilesController.html":{},"injectables/LookupsService.html":{}}}],["filepath",{"_index":1039,"title":{},"body":{"injectables/LookupsService.html":{}}}],["files",{"_index":396,"title":{},"body":{"controllers/FilesController.html":{}}}],["filescontroller",{"_index":381,"title":{"controllers/FilesController.html":{}},"body":{"controllers/FilesController.html":{},"modules/LookupsModule.html":{},"coverage.html":{}}}],["filetypedir",{"_index":1035,"title":{},"body":{"injectables/LookupsService.html":{}}}],["firebase",{"_index":208,"title":{"injectables/FireBase.html":{}},"body":{"modules/CoreModule.html":{},"injectables/FireBase.html":{},"coverage.html":{},"overview.html":{}}}],["follow",{"_index":628,"title":{},"body":{"controllers/ListingController.html":{},"controllers/UserController.html":{}}}],["followed",{"_index":1430,"title":{},"body":{"controllers/UserController.html":{}}}],["followerid",{"_index":1134,"title":{},"body":{"classes/SearchListingDto.html":{},"classes/ToggleUserFollowDto.html":{},"controllers/UserController.html":{},"classes/UserFollower.html":{},"interfaces/UserFollowerAttributes.html":{}}}],["followers",{"_index":1355,"title":{},"body":{"injectables/StoryService.html":{},"controllers/UserController.html":{}}}],["followerscount",{"_index":1548,"title":{},"body":{"classes/UserDto.html":{}}}],["foreignkey",{"_index":295,"title":{},"body":{"classes/Currency.html":{},"interfaces/CurrencyAttributes.html":{},"classes/Disclaimer.html":{},"interfaces/DisclaimerAttributes.html":{},"classes/HiringType.html":{},"interfaces/HiringTypeAttributes.html":{},"classes/ListingType.html":{},"interfaces/ListingTypeAttributes.html":{},"classes/PriceType.html":{},"interfaces/PriceTypeAttributes.html":{},"classes/User.html":{},"interfaces/UserAttributes.html":{}}}],["forgotpassword",{"_index":1412,"title":{},"body":{"controllers/UserController.html":{}}}],["forgotpassword(req",{"_index":1426,"title":{},"body":{"controllers/UserController.html":{}}}],["format",{"_index":846,"title":{},"body":{"classes/LocalizedPriceType.html":{},"interfaces/LocalizedPriceTypeAttributes.html":{},"injectables/LookupsService.html":{},"interfaces/PriceTypeDto.html":{}}}],["forroutes",{"_index":924,"title":{},"body":{"modules/LookupsModule.html":{},"modules/UserModule.html":{}}}],["found",{"_index":170,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["freetext",{"_index":1135,"title":{},"body":{"classes/SearchListingDto.html":{}}}],["fs",{"_index":83,"title":{},"body":{"injectables/AppLogger.html":{},"injectables/LookupsService.html":{}}}],["fs.appendfile(logfile",{"_index":89,"title":{},"body":{"injectables/AppLogger.html":{}}}],["fs.copyfilesync",{"_index":1042,"title":{},"body":{"injectables/LookupsService.html":{}}}],["fs.existssync(bucketdir",{"_index":1033,"title":{},"body":{"injectables/LookupsService.html":{}}}],["fs.existssync(filepath",{"_index":1040,"title":{},"body":{"injectables/LookupsService.html":{}}}],["fs.existssync(filetypedir",{"_index":1036,"title":{},"body":{"injectables/LookupsService.html":{}}}],["fs.mkdirsync(bucketdir",{"_index":1034,"title":{},"body":{"injectables/LookupsService.html":{}}}],["fs.mkdirsync(filetypedir",{"_index":1037,"title":{},"body":{"injectables/LookupsService.html":{}}}],["fs.unlinksync(filepath",{"_index":1044,"title":{},"body":{"injectables/LookupsService.html":{}}}],["fs.writefile(path.join(filetypedir",{"_index":1038,"title":{},"body":{"injectables/LookupsService.html":{}}}],["func",{"_index":1802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["function",{"_index":1650,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1727,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gender",{"_index":500,"title":{},"body":{"interfaces/IGoogleProfile.html":{}}}],["general_error",{"_index":359,"title":{},"body":{"classes/ErrorCodes.html":{}}}],["get('v1/auth/me",{"_index":1438,"title":{},"body":{"controllers/UserController.html":{}}}],["get('v1/cache",{"_index":196,"title":{},"body":{"controllers/CacheController.html":{}}}],["get('v1/cache')@apioperation({summary",{"_index":186,"title":{},"body":{"controllers/CacheController.html":{}}}],["get('v1/database",{"_index":305,"title":{},"body":{"controllers/DevController.html":{}}}],["get('v1/files/:bucket/:type/:name",{"_index":431,"title":{},"body":{"controllers/FilesController.html":{}}}],["get('v1/listings",{"_index":683,"title":{},"body":{"controllers/ListingController.html":{}}}],["get('v1/listings/:id",{"_index":689,"title":{},"body":{"controllers/ListingController.html":{}}}],["get('v1/listings/:listingid/reviews",{"_index":699,"title":{},"body":{"controllers/ListingController.html":{}}}],["get('v1/lookups/currencies",{"_index":905,"title":{},"body":{"controllers/LookupsController.html":{}}}],["get('v1/lookups/disclaimers",{"_index":912,"title":{},"body":{"controllers/LookupsController.html":{}}}],["get('v1/lookups/hiring",{"_index":908,"title":{},"body":{"controllers/LookupsController.html":{}}}],["get('v1/lookups/listing",{"_index":900,"title":{},"body":{"controllers/LookupsController.html":{}}}],["get('v1/lookups/price",{"_index":902,"title":{},"body":{"controllers/LookupsController.html":{}}}],["get('v1/stories",{"_index":1226,"title":{},"body":{"controllers/StoryController.html":{}}}],["get('v1/stories/:id",{"_index":1231,"title":{},"body":{"controllers/StoryController.html":{}}}],["get('v1/users/:userid/profile",{"_index":1532,"title":{},"body":{"controllers/UserController.html":{}}}],["get(key",{"_index":35,"title":{},"body":{"classes/AppCache.html":{},"classes/CacheObject.html":{}}}],["getallitems",{"_index":179,"title":{},"body":{"controllers/CacheController.html":{}}}],["getalllistings",{"_index":568,"title":{},"body":{"controllers/ListingController.html":{}}}],["getalllistings(@headers('lang",{"_index":684,"title":{},"body":{"controllers/ListingController.html":{}}}],["getalllistings(lang",{"_index":598,"title":{},"body":{"controllers/ListingController.html":{}}}],["getalllistingtypes",{"_index":929,"title":{},"body":{"injectables/LookupsService.html":{}}}],["getalllistingtypes(lang",{"_index":935,"title":{},"body":{"injectables/LookupsService.html":{}}}],["getallstories",{"_index":1186,"title":{},"body":{"controllers/StoryController.html":{},"injectables/StoryService.html":{}}}],["getallstories(@headers('lang",{"_index":1227,"title":{},"body":{"controllers/StoryController.html":{}}}],["getallstories(lang",{"_index":1199,"title":{},"body":{"controllers/StoryController.html":{},"injectables/StoryService.html":{}}}],["getasync",{"_index":15,"title":{},"body":{"classes/AppCache.html":{},"classes/CacheObject.html":{}}}],["getasync(key",{"_index":40,"title":{},"body":{"classes/AppCache.html":{}}}],["getcache",{"_index":16,"title":{},"body":{"classes/AppCache.html":{},"classes/CacheObject.html":{}}}],["getcurrencies",{"_index":867,"title":{},"body":{"controllers/LookupsController.html":{},"injectables/LookupsService.html":{}}}],["getcurrencies(@headers('lang",{"_index":906,"title":{},"body":{"controllers/LookupsController.html":{}}}],["getcurrencies(lang",{"_index":872,"title":{},"body":{"controllers/LookupsController.html":{},"injectables/LookupsService.html":{}}}],["getdisclaimers",{"_index":868,"title":{},"body":{"controllers/LookupsController.html":{},"injectables/LookupsService.html":{}}}],["getdisclaimers(@headers('lang",{"_index":913,"title":{},"body":{"controllers/LookupsController.html":{}}}],["getdisclaimers(lang",{"_index":876,"title":{},"body":{"controllers/LookupsController.html":{},"injectables/LookupsService.html":{}}}],["getfile",{"_index":385,"title":{},"body":{"controllers/FilesController.html":{},"injectables/LookupsService.html":{}}}],["getfile(bucket",{"_index":401,"title":{},"body":{"controllers/FilesController.html":{},"injectables/LookupsService.html":{}}}],["getfirebasedynamiclink",{"_index":453,"title":{},"body":{"injectables/FireBase.html":{}}}],["getfirebasedynamiclink(recoverytoken",{"_index":454,"title":{},"body":{"injectables/FireBase.html":{}}}],["getfollowedusers",{"_index":1413,"title":{},"body":{"controllers/UserController.html":{}}}],["getfollowedusers(userid",{"_index":1429,"title":{},"body":{"controllers/UserController.html":{}}}],["gethiringtypes",{"_index":869,"title":{},"body":{"controllers/LookupsController.html":{},"injectables/LookupsService.html":{}}}],["gethiringtypes(@headers('lang",{"_index":909,"title":{},"body":{"controllers/LookupsController.html":{}}}],["gethiringtypes(lang",{"_index":880,"title":{},"body":{"controllers/LookupsController.html":{},"injectables/LookupsService.html":{}}}],["getlisting",{"_index":569,"title":{},"body":{"controllers/ListingController.html":{}}}],["getlisting(userid",{"_index":602,"title":{},"body":{"controllers/ListingController.html":{}}}],["getlistingfollowers",{"_index":1414,"title":{},"body":{"controllers/UserController.html":{}}}],["getlistingfollowers(userid",{"_index":1434,"title":{},"body":{"controllers/UserController.html":{}}}],["getlistingreviews",{"_index":570,"title":{},"body":{"controllers/ListingController.html":{}}}],["getlistingreviews(listingid",{"_index":605,"title":{},"body":{"controllers/ListingController.html":{}}}],["getlistingsnippet",{"_index":1250,"title":{},"body":{"injectables/StoryService.html":{}}}],["getlistingsnippet(listing",{"_index":1259,"title":{},"body":{"injectables/StoryService.html":{}}}],["getlistingtypes",{"_index":870,"title":{},"body":{"controllers/LookupsController.html":{},"injectables/LookupsService.html":{}}}],["getlistingtypes(category",{"_index":941,"title":{},"body":{"injectables/LookupsService.html":{}}}],["getlistingtypes(type",{"_index":886,"title":{},"body":{"controllers/LookupsController.html":{}}}],["getpricetypes",{"_index":871,"title":{},"body":{"controllers/LookupsController.html":{},"injectables/LookupsService.html":{}}}],["getpricetypes(@headers('lang",{"_index":903,"title":{},"body":{"controllers/LookupsController.html":{}}}],["getpricetypes(lang",{"_index":890,"title":{},"body":{"controllers/LookupsController.html":{},"injectables/LookupsService.html":{}}}],["gets",{"_index":187,"title":{},"body":{"controllers/CacheController.html":{},"controllers/FilesController.html":{},"controllers/ListingController.html":{},"controllers/LookupsController.html":{},"controllers/StoryController.html":{},"controllers/UserController.html":{}}}],["getstatustext",{"_index":144,"title":{},"body":{"injectables/AuthMiddleware.html":{},"controllers/DevController.html":{}}}],["getstatustext(httpstatus.bad_request",{"_index":1520,"title":{},"body":{"controllers/UserController.html":{}}}],["getstory",{"_index":1187,"title":{},"body":{"controllers/StoryController.html":{},"injectables/StoryService.html":{}}}],["getstory(id",{"_index":1262,"title":{},"body":{"injectables/StoryService.html":{}}}],["getstory(userid",{"_index":1203,"title":{},"body":{"controllers/StoryController.html":{}}}],["getting",{"_index":1734,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":1415,"title":{},"body":{"controllers/UserController.html":{}}}],["getuser(@user('id",{"_index":1529,"title":{},"body":{"controllers/UserController.html":{}}}],["getuser(userid",{"_index":1437,"title":{},"body":{"controllers/UserController.html":{}}}],["getuserfollowers",{"_index":1416,"title":{},"body":{"controllers/UserController.html":{}}}],["getuserfollowers(userid",{"_index":1440,"title":{},"body":{"controllers/UserController.html":{}}}],["getuserprofile",{"_index":1417,"title":{},"body":{"controllers/UserController.html":{}}}],["getuserprofile(@param('userid",{"_index":1533,"title":{},"body":{"controllers/UserController.html":{}}}],["getuserprofile(userid",{"_index":1443,"title":{},"body":{"controllers/UserController.html":{}}}],["given",{"_index":389,"title":{},"body":{"controllers/FilesController.html":{},"controllers/ListingController.html":{},"controllers/StoryController.html":{},"controllers/UserController.html":{}}}],["given_name",{"_index":501,"title":{},"body":{"interfaces/IGoogleProfile.html":{}}}],["goodaboutlisting",{"_index":757,"title":{},"body":{"classes/ListingReview.html":{},"interfaces/ListingReviewAttributes.html":{},"interfaces/ListingReviewDto.html":{},"interfaces/ListingReviewDto-1.html":{}}}],["google",{"_index":1700,"title":{},"body":{"dependencies.html":{}}}],["google.auth.oauth2",{"_index":1823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["googleapis",{"_index":1688,"title":{},"body":{"dependencies.html":{}}}],["googleid",{"_index":1387,"title":{},"body":{"classes/User.html":{},"interfaces/UserAttributes.html":{}}}],["googlelogin",{"_index":1418,"title":{},"body":{"controllers/UserController.html":{}}}],["googlelogin(@req",{"_index":1522,"title":{},"body":{"controllers/UserController.html":{}}}],["googlelogin(req",{"_index":1448,"title":{},"body":{"controllers/UserController.html":{}}}],["hash",{"_index":1115,"title":{},"body":{"classes/RegisterUser.html":{},"classes/User.html":{},"interfaces/UserAttributes.html":{},"controllers/UserController.html":{}}}],["hd",{"_index":502,"title":{},"body":{"interfaces/IGoogleProfile.html":{}}}],["header",{"_index":1732,"title":{},"body":{"miscellaneous/functions.html":{}}}],["headerline",{"_index":252,"title":{},"body":{"interfaces/CreateStoryDto.html":{},"classes/Story.html":{},"interfaces/StoryAttributes.html":{},"interfaces/StoryDto.html":{},"injectables/StoryService.html":{}}}],["headers",{"_index":648,"title":{},"body":{"controllers/ListingController.html":{},"controllers/LookupsController.html":{},"controllers/StoryController.html":{}}}],["headers('lang",{"_index":669,"title":{},"body":{"controllers/ListingController.html":{},"controllers/LookupsController.html":{},"controllers/StoryController.html":{}}}],["hiring",{"_index":881,"title":{},"body":{"controllers/LookupsController.html":{}}}],["hiring_types",{"_index":492,"title":{},"body":{"classes/HiringType.html":{},"interfaces/HiringTypeAttributes.html":{}}}],["hiringtype",{"_index":477,"title":{"classes/HiringType.html":{}},"body":{"classes/HiringType.html":{},"interfaces/HiringTypeAttributes.html":{},"injectables/LookupsService.html":{},"injectables/StoryService.html":{},"coverage.html":{}}}],["hiringtype.code",{"_index":1017,"title":{},"body":{"injectables/LookupsService.html":{}}}],["hiringtype.createdat",{"_index":1018,"title":{},"body":{"injectables/LookupsService.html":{}}}],["hiringtype.findall",{"_index":1014,"title":{},"body":{"injectables/LookupsService.html":{}}}],["hiringtype.hasmany(localizedhiringtype",{"_index":493,"title":{},"body":{"classes/HiringType.html":{},"interfaces/HiringTypeAttributes.html":{}}}],["hiringtype.id",{"_index":1016,"title":{},"body":{"injectables/LookupsService.html":{}}}],["hiringtype.init",{"_index":490,"title":{},"body":{"classes/HiringType.html":{},"interfaces/HiringTypeAttributes.html":{}}}],["hiringtype.localized",{"_index":488,"title":{},"body":{"classes/HiringType.html":{},"interfaces/HiringTypeAttributes.html":{}}}],["hiringtype.updatedat",{"_index":1019,"title":{},"body":{"injectables/LookupsService.html":{}}}],["hiringtypeattributes",{"_index":479,"title":{"interfaces/HiringTypeAttributes.html":{}},"body":{"classes/HiringType.html":{},"interfaces/HiringTypeAttributes.html":{},"coverage.html":{}}}],["hiringtypecreationattributes",{"_index":489,"title":{},"body":{"classes/HiringType.html":{},"interfaces/HiringTypeAttributes.html":{},"miscellaneous/typealiases.html":{}}}],["hiringtypedto",{"_index":495,"title":{"interfaces/HiringTypeDto.html":{}},"body":{"interfaces/HiringTypeDto.html":{},"controllers/LookupsController.html":{},"injectables/LookupsService.html":{},"coverage.html":{}}}],["hiringtypeid",{"_index":225,"title":{},"body":{"interfaces/CreateListingDto.html":{},"classes/Listing.html":{},"interfaces/ListingAttributes.html":{},"interfaces/ListingDto.html":{}}}],["hiringtypename",{"_index":717,"title":{},"body":{"interfaces/ListingDto.html":{}}}],["hiringtypes",{"_index":1013,"title":{},"body":{"injectables/LookupsService.html":{}}}],["host",{"_index":1831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hrllrvedatu_",{"_index":461,"title":{},"body":{"injectables/FireBase.html":{}}}],["hstore",{"_index":1707,"title":{},"body":{"dependencies.html":{}}}],["html",{"_index":1067,"title":{},"body":{"injectables/MailManager.html":{}}}],["http",{"_index":146,"title":{},"body":{"injectables/AuthMiddleware.html":{},"controllers/DevController.html":{},"dependencies.html":{}}}],["http://localhost:3000/docs",{"_index":1756,"title":{},"body":{"index.html":{}}}],["httpexception",{"_index":152,"title":{},"body":{"injectables/AuthMiddleware.html":{},"controllers/UserController.html":{},"injectables/ValidationPipe.html":{}}}],["httpexception('not",{"_index":173,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["httpexception('user",{"_index":169,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["httpexception(error",{"_index":1805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://firebasedynamiclinks.googleapis.com/v1/shortlinks?key=aizasya",{"_index":460,"title":{},"body":{"injectables/FireBase.html":{}}}],["https://imaginativenews.page.link",{"_index":465,"title":{},"body":{"injectables/FireBase.html":{}}}],["https://imaginativenews.page.link/forgot",{"_index":467,"title":{},"body":{"injectables/FireBase.html":{}}}],["httpstatus",{"_index":142,"title":{},"body":{"injectables/AuthMiddleware.html":{},"controllers/UserController.html":{},"injectables/ValidationPipe.html":{}}}],["httpstatus.bad_request",{"_index":1620,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["httpstatus.internal_server_error",{"_index":1487,"title":{},"body":{"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["httpstatus.unauthorized",{"_index":171,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["id",{"_index":226,"title":{},"body":{"interfaces/CreateListingDto.html":{},"interfaces/CreateStoryDto.html":{},"classes/Currency.html":{},"interfaces/CurrencyAttributes.html":{},"interfaces/CurrencyDto.html":{},"classes/Disclaimer.html":{},"interfaces/DisclaimerAttributes.html":{},"interfaces/DisclaimerDto.html":{},"classes/HiringType.html":{},"interfaces/HiringTypeAttributes.html":{},"interfaces/HiringTypeDto.html":{},"interfaces/IGoogleProfile.html":{},"classes/Listing.html":{},"interfaces/ListingAttributes.html":{},"controllers/ListingController.html":{},"interfaces/ListingDto.html":{},"classes/ListingFollower.html":{},"interfaces/ListingFollowerAttributes.html":{},"classes/ListingReview.html":{},"interfaces/ListingReviewAttributes.html":{},"interfaces/ListingReviewDto.html":{},"interfaces/ListingReviewDto-1.html":{},"classes/ListingType.html":{},"interfaces/ListingTypeAttributes.html":{},"interfaces/ListingTypeDto.html":{},"classes/LocalizedCurrency.html":{},"interfaces/LocalizedCurrencyAttributes.html":{},"classes/LocalizedDisclaimer.html":{},"interfaces/LocalizedDisclaimerAttributes.html":{},"classes/LocalizedHiringType.html":{},"interfaces/LocalizedHiringTypeAttributes.html":{},"classes/LocalizedListingType.html":{},"interfaces/LocalizedListingTypeAttributes.html":{},"classes/LocalizedPriceType.html":{},"interfaces/LocalizedPriceTypeAttributes.html":{},"injectables/LookupsService.html":{},"classes/PasswordRecoveryToken.html":{},"interfaces/PasswordRecoveryTokenAttributes.html":{},"classes/PriceType.html":{},"interfaces/PriceTypeAttributes.html":{},"interfaces/PriceTypeDto.html":{},"classes/RegisterUser.html":{},"classes/Story.html":{},"interfaces/StoryAttributes.html":{},"controllers/StoryController.html":{},"interfaces/StoryDto.html":{},"injectables/StoryService.html":{},"classes/User.html":{},"interfaces/UserAttributes.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserFollower.html":{},"interfaces/UserFollowerAttributes.html":{},"classes/UserSnippetDto.html":{}}}],["id'})@apiresponse({status",{"_index":588,"title":{},"body":{"controllers/ListingController.html":{},"controllers/StoryController.html":{}}}],["id'})@get('v1/users/:userid/profile",{"_index":1446,"title":{},"body":{"controllers/UserController.html":{}}}],["identifier",{"_index":1631,"title":{},"body":{"coverage.html":{}}}],["igoogleprofile",{"_index":497,"title":{"interfaces/IGoogleProfile.html":{}},"body":{"interfaces/IGoogleProfile.html":{},"coverage.html":{}}}],["imaginative",{"_index":1736,"title":{},"body":{"index.html":{}}}],["imaginativenews",{"_index":1066,"title":{},"body":{"injectables/MailManager.html":{}}}],["imaginativeyear",{"_index":253,"title":{},"body":{"interfaces/CreateStoryDto.html":{},"classes/Story.html":{},"interfaces/StoryAttributes.html":{},"interfaces/StoryDto.html":{},"injectables/StoryService.html":{}}}],["implements",{"_index":156,"title":{},"body":{"injectables/AuthMiddleware.html":{},"modules/CoreModule.html":{},"classes/Currency.html":{},"interfaces/CurrencyAttributes.html":{},"modules/DevModule.html":{},"classes/Disclaimer.html":{},"interfaces/DisclaimerAttributes.html":{},"classes/HiringType.html":{},"interfaces/HiringTypeAttributes.html":{},"classes/Listing.html":{},"interfaces/ListingAttributes.html":{},"classes/ListingFollower.html":{},"interfaces/ListingFollowerAttributes.html":{},"modules/ListingModule.html":{},"classes/ListingReview.html":{},"interfaces/ListingReviewAttributes.html":{},"classes/ListingType.html":{},"interfaces/ListingTypeAttributes.html":{},"classes/LocalizedCurrency.html":{},"interfaces/LocalizedCurrencyAttributes.html":{},"classes/LocalizedDisclaimer.html":{},"interfaces/LocalizedDisclaimerAttributes.html":{},"classes/LocalizedHiringType.html":{},"interfaces/LocalizedHiringTypeAttributes.html":{},"classes/LocalizedListingType.html":{},"interfaces/LocalizedListingTypeAttributes.html":{},"classes/LocalizedPriceType.html":{},"interfaces/LocalizedPriceTypeAttributes.html":{},"modules/LookupsModule.html":{},"classes/PasswordRecoveryToken.html":{},"interfaces/PasswordRecoveryTokenAttributes.html":{},"classes/PriceType.html":{},"interfaces/PriceTypeAttributes.html":{},"injectables/PrismaService.html":{},"classes/Story.html":{},"interfaces/StoryAttributes.html":{},"modules/StoryModule.html":{},"classes/User.html":{},"interfaces/UserAttributes.html":{},"classes/UserFollower.html":{},"interfaces/UserFollowerAttributes.html":{},"modules/UserModule.html":{},"injectables/ValidationPipe.html":{}}}],["import",{"_index":44,"title":{},"body":{"classes/AppCache.html":{},"injectables/AppLogger.html":{},"modules/AppLoggerModule.html":{},"modules/ApplicationModule.html":{},"injectables/AuthMiddleware.html":{},"controllers/CacheController.html":{},"classes/CacheObject.html":{},"modules/CoreModule.html":{},"classes/Currency.html":{},"interfaces/CurrencyAttributes.html":{},"controllers/DevController.html":{},"modules/DevModule.html":{},"classes/Disclaimer.html":{},"interfaces/DisclaimerAttributes.html":{},"classes/ErrorResult.html":{},"controllers/FilesController.html":{},"injectables/FireBase.html":{},"classes/HiringType.html":{},"interfaces/HiringTypeAttributes.html":{},"classes/Listing.html":{},"interfaces/ListingAttributes.html":{},"controllers/ListingController.html":{},"classes/ListingFollower.html":{},"interfaces/ListingFollowerAttributes.html":{},"modules/ListingModule.html":{},"classes/ListingReview.html":{},"interfaces/ListingReviewAttributes.html":{},"classes/ListingType.html":{},"interfaces/ListingTypeAttributes.html":{},"classes/LocalizedCurrency.html":{},"interfaces/LocalizedCurrencyAttributes.html":{},"classes/LocalizedDisclaimer.html":{},"interfaces/LocalizedDisclaimerAttributes.html":{},"classes/LocalizedHiringType.html":{},"interfaces/LocalizedHiringTypeAttributes.html":{},"classes/LocalizedListingType.html":{},"interfaces/LocalizedListingTypeAttributes.html":{},"classes/LocalizedPriceType.html":{},"interfaces/LocalizedPriceTypeAttributes.html":{},"classes/LoginUserDto.html":{},"controllers/LookupsController.html":{},"modules/LookupsModule.html":{},"injectables/LookupsService.html":{},"injectables/MailManager.html":{},"classes/NoDataResult.html":{},"classes/NotFoundResult.html":{},"classes/PasswordRecoveryToken.html":{},"interfaces/PasswordRecoveryTokenAttributes.html":{},"classes/PriceType.html":{},"interfaces/PriceTypeAttributes.html":{},"injectables/PrismaService.html":{},"classes/RegisterUser.html":{},"classes/Story.html":{},"interfaces/StoryAttributes.html":{},"controllers/StoryController.html":{},"modules/StoryModule.html":{},"injectables/StoryService.html":{},"classes/SuccessResult.html":{},"classes/ToggleUserFollowDto.html":{},"classes/User.html":{},"interfaces/UserAttributes.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserFollower.html":{},"interfaces/UserFollowerAttributes.html":{},"modules/UserModule.html":{},"injectables/ValidationPipe.html":{}}}],["imports",{"_index":118,"title":{},"body":{"modules/ApplicationModule.html":{},"modules/CoreModule.html":{},"modules/DevModule.html":{},"modules/ListingModule.html":{},"modules/LookupsModule.html":{},"modules/StoryModule.html":{},"modules/UserModule.html":{}}}],["incorrect",{"_index":1513,"title":{},"body":{"controllers/UserController.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"classes/AppCache.html":{},"injectables/AppLogger.html":{},"injectables/AuthMiddleware.html":{},"controllers/CacheController.html":{},"classes/CacheObject.html":{},"interfaces/CreateListingDto.html":{},"interfaces/CreateStoryDto.html":{},"classes/Currency.html":{},"interfaces/CurrencyAttributes.html":{},"interfaces/CurrencyDto.html":{},"controllers/DevController.html":{},"classes/Disclaimer.html":{},"interfaces/DisclaimerAttributes.html":{},"interfaces/DisclaimerDto.html":{},"classes/ErrorCodes.html":{},"classes/ErrorResult.html":{},"controllers/FilesController.html":{},"injectables/FireBase.html":{},"classes/HiringType.html":{},"interfaces/HiringTypeAttributes.html":{},"interfaces/HiringTypeDto.html":{},"interfaces/IGoogleProfile.html":{},"classes/KeyValuePair.html":{},"classes/Listing.html":{},"interfaces/ListingAttributes.html":{},"controllers/ListingController.html":{},"interfaces/ListingDto.html":{},"classes/ListingFollower.html":{},"interfaces/ListingFollowerAttributes.html":{},"classes/ListingReview.html":{},"interfaces/ListingReviewAttributes.html":{},"interfaces/ListingReviewDto.html":{},"interfaces/ListingReviewDto-1.html":{},"classes/ListingType.html":{},"interfaces/ListingTypeAttributes.html":{},"interfaces/ListingTypeDto.html":{},"classes/LocalizedCurrency.html":{},"interfaces/LocalizedCurrencyAttributes.html":{},"classes/LocalizedDisclaimer.html":{},"interfaces/LocalizedDisclaimerAttributes.html":{},"classes/LocalizedHiringType.html":{},"interfaces/LocalizedHiringTypeAttributes.html":{},"classes/LocalizedListingType.html":{},"interfaces/LocalizedListingTypeAttributes.html":{},"classes/LocalizedPriceType.html":{},"interfaces/LocalizedPriceTypeAttributes.html":{},"classes/LoginUserDto.html":{},"controllers/LookupsController.html":{},"injectables/LookupsService.html":{},"injectables/MailManager.html":{},"classes/NoDataResult.html":{},"classes/NotFoundResult.html":{},"classes/OperationResult.html":{},"classes/PasswordRecoveryToken.html":{},"interfaces/PasswordRecoveryTokenAttributes.html":{},"classes/PriceType.html":{},"interfaces/PriceTypeAttributes.html":{},"interfaces/PriceTypeDto.html":{},"injectables/PrismaService.html":{},"classes/RegisterUser.html":{},"interfaces/ResetPassword.html":{},"classes/Result.html":{},"classes/SearchListingDto.html":{},"classes/SearchResultDto.html":{},"classes/SearchStoryDto.html":{},"classes/Story.html":{},"interfaces/StoryAttributes.html":{},"controllers/StoryController.html":{},"interfaces/StoryDto.html":{},"injectables/StoryService.html":{},"classes/SuccessResult.html":{},"interfaces/ToggleListingFollowDto.html":{},"classes/ToggleUserFollowDto.html":{},"classes/User.html":{},"interfaces/UserAttributes.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserFollower.html":{},"interfaces/UserFollowerAttributes.html":{},"classes/UserSnippetDto.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AppCache.html":{},"injectables/AppLogger.html":{},"modules/AppLoggerModule.html":{},"modules/ApplicationModule.html":{},"injectables/AuthMiddleware.html":{},"controllers/CacheController.html":{},"classes/CacheObject.html":{},"modules/CoreModule.html":{},"interfaces/CreateListingDto.html":{},"interfaces/CreateStoryDto.html":{},"classes/Currency.html":{},"interfaces/CurrencyAttributes.html":{},"interfaces/CurrencyDto.html":{},"controllers/DevController.html":{},"modules/DevModule.html":{},"classes/Disclaimer.html":{},"interfaces/DisclaimerAttributes.html":{},"interfaces/DisclaimerDto.html":{},"classes/ErrorCodes.html":{},"classes/ErrorResult.html":{},"controllers/FilesController.html":{},"injectables/FireBase.html":{},"classes/HiringType.html":{},"interfaces/HiringTypeAttributes.html":{},"interfaces/HiringTypeDto.html":{},"interfaces/IGoogleProfile.html":{},"classes/KeyValuePair.html":{},"classes/Listing.html":{},"interfaces/ListingAttributes.html":{},"controllers/ListingController.html":{},"interfaces/ListingDto.html":{},"classes/ListingFollower.html":{},"interfaces/ListingFollowerAttributes.html":{},"modules/ListingModule.html":{},"classes/ListingReview.html":{},"interfaces/ListingReviewAttributes.html":{},"interfaces/ListingReviewDto.html":{},"interfaces/ListingReviewDto-1.html":{},"classes/ListingType.html":{},"interfaces/ListingTypeAttributes.html":{},"interfaces/ListingTypeDto.html":{},"classes/LocalizedCurrency.html":{},"interfaces/LocalizedCurrencyAttributes.html":{},"classes/LocalizedDisclaimer.html":{},"interfaces/LocalizedDisclaimerAttributes.html":{},"classes/LocalizedHiringType.html":{},"interfaces/LocalizedHiringTypeAttributes.html":{},"classes/LocalizedListingType.html":{},"interfaces/LocalizedListingTypeAttributes.html":{},"classes/LocalizedPriceType.html":{},"interfaces/LocalizedPriceTypeAttributes.html":{},"classes/LoginUserDto.html":{},"controllers/LookupsController.html":{},"modules/LookupsModule.html":{},"injectables/LookupsService.html":{},"injectables/MailManager.html":{},"classes/NoDataResult.html":{},"classes/NotFoundResult.html":{},"classes/OperationResult.html":{},"classes/PasswordRecoveryToken.html":{},"interfaces/PasswordRecoveryTokenAttributes.html":{},"classes/PriceType.html":{},"interfaces/PriceTypeAttributes.html":{},"interfaces/PriceTypeDto.html":{},"injectables/PrismaService.html":{},"classes/RegisterUser.html":{},"interfaces/ResetPassword.html":{},"classes/Result.html":{},"classes/SearchListingDto.html":{},"classes/SearchResultDto.html":{},"classes/SearchStoryDto.html":{},"classes/Story.html":{},"interfaces/StoryAttributes.html":{},"controllers/StoryController.html":{},"interfaces/StoryDto.html":{},"modules/StoryModule.html":{},"injectables/StoryService.html":{},"classes/SuccessResult.html":{},"interfaces/ToggleListingFollowDto.html":{},"classes/ToggleUserFollowDto.html":{},"classes/User.html":{},"interfaces/UserAttributes.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserFollower.html":{},"interfaces/UserFollowerAttributes.html":{},"modules/UserModule.html":{},"classes/UserSnippetDto.html":{},"injectables/ValidationPipe.html":{}}}],["info.message",{"_index":1512,"title":{},"body":{"controllers/UserController.html":{}}}],["inherited",{"_index":375,"title":{},"body":{"classes/ErrorResult.html":{},"classes/NoDataResult.html":{},"classes/NotFoundResult.html":{},"classes/SuccessResult.html":{}}}],["injectable",{"_index":70,"title":{"injectables/AppLogger.html":{},"injectables/AuthMiddleware.html":{},"injectables/FireBase.html":{},"injectables/LookupsService.html":{},"injectables/MailManager.html":{},"injectables/PrismaService.html":{},"injectables/StoryService.html":{},"injectables/ValidationPipe.html":{}},"body":{"injectables/AppLogger.html":{},"injectables/AuthMiddleware.html":{},"injectables/FireBase.html":{},"injectables/LookupsService.html":{},"injectables/MailManager.html":{},"injectables/PrismaService.html":{},"injectables/StoryService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["injectables",{"_index":72,"title":{},"body":{"injectables/AppLogger.html":{},"injectables/AuthMiddleware.html":{},"injectables/FireBase.html":{},"injectables/LookupsService.html":{},"injectables/MailManager.html":{},"injectables/PrismaService.html":{},"injectables/StoryService.html":{},"injectables/ValidationPipe.html":{},"overview.html":{}}}],["input",{"_index":1616,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["installation",{"_index":1738,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":1740,"title":{},"body":{"index.html":{}}}],["interface",{"_index":216,"title":{"interfaces/CreateListingDto.html":{},"interfaces/CreateStoryDto.html":{},"interfaces/CurrencyAttributes.html":{},"interfaces/CurrencyDto.html":{},"interfaces/DisclaimerAttributes.html":{},"interfaces/DisclaimerDto.html":{},"interfaces/HiringTypeAttributes.html":{},"interfaces/HiringTypeDto.html":{},"interfaces/IGoogleProfile.html":{},"interfaces/ListingAttributes.html":{},"interfaces/ListingDto.html":{},"interfaces/ListingFollowerAttributes.html":{},"interfaces/ListingReviewAttributes.html":{},"interfaces/ListingReviewDto.html":{},"interfaces/ListingReviewDto-1.html":{},"interfaces/ListingTypeAttributes.html":{},"interfaces/ListingTypeDto.html":{},"interfaces/LocalizedCurrencyAttributes.html":{},"interfaces/LocalizedDisclaimerAttributes.html":{},"interfaces/LocalizedHiringTypeAttributes.html":{},"interfaces/LocalizedListingTypeAttributes.html":{},"interfaces/LocalizedPriceTypeAttributes.html":{},"interfaces/PasswordRecoveryTokenAttributes.html":{},"interfaces/PriceTypeAttributes.html":{},"interfaces/PriceTypeDto.html":{},"interfaces/ResetPassword.html":{},"interfaces/StoryAttributes.html":{},"interfaces/StoryDto.html":{},"interfaces/ToggleListingFollowDto.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserFollowerAttributes.html":{}},"body":{"interfaces/CreateListingDto.html":{},"interfaces/CreateStoryDto.html":{},"classes/Currency.html":{},"interfaces/CurrencyAttributes.html":{},"interfaces/CurrencyDto.html":{},"classes/Disclaimer.html":{},"interfaces/DisclaimerAttributes.html":{},"interfaces/DisclaimerDto.html":{},"classes/HiringType.html":{},"interfaces/HiringTypeAttributes.html":{},"interfaces/HiringTypeDto.html":{},"interfaces/IGoogleProfile.html":{},"classes/Listing.html":{},"interfaces/ListingAttributes.html":{},"interfaces/ListingDto.html":{},"classes/ListingFollower.html":{},"interfaces/ListingFollowerAttributes.html":{},"classes/ListingReview.html":{},"interfaces/ListingReviewAttributes.html":{},"interfaces/ListingReviewDto.html":{},"interfaces/ListingReviewDto-1.html":{},"classes/ListingType.html":{},"interfaces/ListingTypeAttributes.html":{},"interfaces/ListingTypeDto.html":{},"classes/LocalizedCurrency.html":{},"interfaces/LocalizedCurrencyAttributes.html":{},"classes/LocalizedDisclaimer.html":{},"interfaces/LocalizedDisclaimerAttributes.html":{},"classes/LocalizedHiringType.html":{},"interfaces/LocalizedHiringTypeAttributes.html":{},"classes/LocalizedListingType.html":{},"interfaces/LocalizedListingTypeAttributes.html":{},"classes/LocalizedPriceType.html":{},"interfaces/LocalizedPriceTypeAttributes.html":{},"classes/PasswordRecoveryToken.html":{},"interfaces/PasswordRecoveryTokenAttributes.html":{},"classes/PriceType.html":{},"interfaces/PriceTypeAttributes.html":{},"interfaces/PriceTypeDto.html":{},"interfaces/ResetPassword.html":{},"classes/Story.html":{},"interfaces/StoryAttributes.html":{},"interfaces/StoryDto.html":{},"interfaces/ToggleListingFollowDto.html":{},"classes/User.html":{},"interfaces/UserAttributes.html":{},"classes/UserFollower.html":{},"interfaces/UserFollowerAttributes.html":{},"coverage.html":{}}}],["interfaces",{"_index":218,"title":{},"body":{"interfaces/CreateListingDto.html":{},"interfaces/CreateStoryDto.html":{},"interfaces/CurrencyAttributes.html":{},"interfaces/CurrencyDto.html":{},"interfaces/DisclaimerAttributes.html":{},"interfaces/DisclaimerDto.html":{},"interfaces/HiringTypeAttributes.html":{},"interfaces/HiringTypeDto.html":{},"interfaces/IGoogleProfile.html":{},"interfaces/ListingAttributes.html":{},"interfaces/ListingDto.html":{},"interfaces/ListingFollowerAttributes.html":{},"interfaces/ListingReviewAttributes.html":{},"interfaces/ListingReviewDto.html":{},"interfaces/ListingReviewDto-1.html":{},"interfaces/ListingTypeAttributes.html":{},"interfaces/ListingTypeDto.html":{},"interfaces/LocalizedCurrencyAttributes.html":{},"interfaces/LocalizedDisclaimerAttributes.html":{},"interfaces/LocalizedHiringTypeAttributes.html":{},"interfaces/LocalizedListingTypeAttributes.html":{},"interfaces/LocalizedPriceTypeAttributes.html":{},"interfaces/PasswordRecoveryTokenAttributes.html":{},"interfaces/PriceTypeAttributes.html":{},"interfaces/PriceTypeDto.html":{},"interfaces/ResetPassword.html":{},"interfaces/StoryAttributes.html":{},"interfaces/StoryDto.html":{},"interfaces/ToggleListingFollowDto.html":{},"interfaces/UserAttributes.html":{},"interfaces/UserFollowerAttributes.html":{},"overview.html":{}}}],["intro",{"_index":254,"title":{},"body":{"interfaces/CreateStoryDto.html":{},"classes/Story.html":{},"interfaces/StoryAttributes.html":{},"interfaces/StoryDto.html":{},"injectables/StoryService.html":{}}}],["iosbundleid",{"_index":473,"title":{},"body":{"injectables/FireBase.html":{}}}],["iosinfo",{"_index":472,"title":{},"body":{"injectables/FireBase.html":{}}}],["isboolean",{"_index":1379,"title":{},"body":{"classes/ToggleUserFollowDto.html":{}}}],["isedited",{"_index":227,"title":{},"body":{"interfaces/CreateListingDto.html":{},"classes/Listing.html":{},"interfaces/ListingAttributes.html":{},"interfaces/ListingDto.html":{}}}],["isemail",{"_index":860,"title":{},"body":{"classes/LoginUserDto.html":{},"classes/RegisterUser.html":{}}}],["isfollowed",{"_index":718,"title":{},"body":{"interfaces/ListingDto.html":{},"interfaces/ToggleListingFollowDto.html":{},"classes/ToggleUserFollowDto.html":{},"classes/UserSnippetDto.html":{}}}],["isfollower",{"_index":1581,"title":{},"body":{"classes/UserSnippetDto.html":{}}}],["isfriend",{"_index":1582,"title":{},"body":{"classes/UserSnippetDto.html":{}}}],["isnotempty",{"_index":862,"title":{},"body":{"classes/LoginUserDto.html":{},"classes/RegisterUser.html":{},"classes/ToggleUserFollowDto.html":{},"classes/UserDto.html":{}}}],["isreviewed",{"_index":719,"title":{},"body":{"interfaces/ListingDto.html":{}}}],["isuserfollowed",{"_index":1237,"title":{},"body":{"interfaces/StoryDto.html":{},"injectables/StoryService.html":{}}}],["items",{"_index":184,"title":{},"body":{"controllers/CacheController.html":{}}}],["jsonwebtoken",{"_index":151,"title":{},"body":{"injectables/AuthMiddleware.html":{},"dependencies.html":{}}}],["jwt",{"_index":150,"title":{},"body":{"injectables/AuthMiddleware.html":{},"miscellaneous/variables.html":{}}}],["jwt.verify(token",{"_index":165,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["jwt.verify(token[1",{"_index":1820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwt_secret",{"_index":154,"title":{},"body":{"injectables/AuthMiddleware.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["k",{"_index":509,"title":{},"body":{"classes/KeyValuePair.html":{}}}],["key",{"_index":31,"title":{},"body":{"classes/AppCache.html":{},"classes/CacheObject.html":{},"classes/KeyValuePair.html":{}}}],["keyvaluepair",{"_index":506,"title":{"classes/KeyValuePair.html":{}},"body":{"classes/KeyValuePair.html":{},"coverage.html":{}}}],["l.id",{"_index":1330,"title":{},"body":{"injectables/StoryService.html":{}}}],["lang",{"_index":585,"title":{},"body":{"controllers/ListingController.html":{},"controllers/LookupsController.html":{},"injectables/LookupsService.html":{},"controllers/StoryController.html":{},"injectables/StoryService.html":{}}}],["language",{"_index":802,"title":{},"body":{"classes/LocalizedCurrency.html":{},"interfaces/LocalizedCurrencyAttributes.html":{},"classes/LocalizedDisclaimer.html":{},"interfaces/LocalizedDisclaimerAttributes.html":{},"classes/LocalizedHiringType.html":{},"interfaces/LocalizedHiringTypeAttributes.html":{},"classes/LocalizedListingType.html":{},"interfaces/LocalizedListingTypeAttributes.html":{},"classes/LocalizedPriceType.html":{},"interfaces/LocalizedPriceTypeAttributes.html":{},"injectables/LookupsService.html":{}}}],["legend",{"_index":96,"title":{},"body":{"modules/AppLoggerModule.html":{},"modules/ApplicationModule.html":{},"modules/CoreModule.html":{},"modules/DevModule.html":{},"modules/ListingModule.html":{},"modules/LookupsModule.html":{},"modules/StoryModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["limit",{"_index":1313,"title":{},"body":{"injectables/StoryService.html":{}}}],["link",{"_index":466,"title":{},"body":{"injectables/FireBase.html":{},"interfaces/IGoogleProfile.html":{}}}],["list",{"_index":397,"title":{},"body":{"controllers/FilesController.html":{},"controllers/LookupsController.html":{},"controllers/UserController.html":{}}}],["list'})@get('v1/lookups/currencies",{"_index":874,"title":{},"body":{"controllers/LookupsController.html":{}}}],["listing",{"_index":516,"title":{"classes/Listing.html":{}},"body":{"classes/Listing.html":{},"interfaces/ListingAttributes.html":{},"controllers/ListingController.html":{},"controllers/LookupsController.html":{},"interfaces/StoryDto.html":{},"injectables/StoryService.html":{},"classes/User.html":{},"interfaces/UserAttributes.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["listing'})@apiresponse({status",{"_index":579,"title":{},"body":{"controllers/ListingController.html":{},"controllers/UserController.html":{}}}],["listing'})@get('v1/listings/:id",{"_index":603,"title":{},"body":{"controllers/ListingController.html":{}}}],["listing'})@get('v1/listings/:listingid/reviews",{"_index":610,"title":{},"body":{"controllers/ListingController.html":{}}}],["listing.brandname",{"_index":1351,"title":{},"body":{"injectables/StoryService.html":{}}}],["listing.controller",{"_index":744,"title":{},"body":{"modules/ListingModule.html":{}}}],["listing.currencystandardcode",{"_index":1365,"title":{},"body":{"injectables/StoryService.html":{}}}],["listing.currencysymbol",{"_index":1363,"title":{},"body":{"injectables/StoryService.html":{}}}],["listing.hiringtypename",{"_index":1358,"title":{},"body":{"injectables/StoryService.html":{}}}],["listing.id",{"_index":1350,"title":{},"body":{"injectables/StoryService.html":{}}}],["listing.init",{"_index":550,"title":{},"body":{"classes/Listing.html":{},"interfaces/ListingAttributes.html":{}}}],["listing.media",{"_index":1354,"title":{},"body":{"injectables/StoryService.html":{}}}],["listing.name",{"_index":1352,"title":{},"body":{"injectables/StoryService.html":{}}}],["listing.offerprice",{"_index":1366,"title":{},"body":{"injectables/StoryService.html":{}}}],["listing.otherhiring",{"_index":1357,"title":{},"body":{"injectables/StoryService.html":{}}}],["listing.otherpricetype",{"_index":1359,"title":{},"body":{"injectables/StoryService.html":{}}}],["listing.price",{"_index":1362,"title":{},"body":{"injectables/StoryService.html":{}}}],["listing.pricetypeformat",{"_index":1360,"title":{},"body":{"injectables/StoryService.html":{}}}],["listing.pricetypename",{"_index":1356,"title":{},"body":{"injectables/StoryService.html":{}}}],["listing.service",{"_index":652,"title":{},"body":{"controllers/ListingController.html":{},"modules/ListingModule.html":{}}}],["listing.stockavailability",{"_index":1361,"title":{},"body":{"injectables/StoryService.html":{}}}],["listing/dto/listingdto",{"_index":1276,"title":{},"body":{"injectables/StoryService.html":{}}}],["listing/listing.module",{"_index":120,"title":{},"body":{"modules/ApplicationModule.html":{},"modules/StoryModule.html":{}}}],["listing/listing.service",{"_index":1275,"title":{},"body":{"injectables/StoryService.html":{}}}],["listing_followers",{"_index":735,"title":{},"body":{"classes/ListingFollower.html":{},"interfaces/ListingFollowerAttributes.html":{}}}],["listing_have_stories",{"_index":360,"title":{},"body":{"classes/ErrorCodes.html":{}}}],["listing_reviews",{"_index":775,"title":{},"body":{"classes/ListingReview.html":{},"interfaces/ListingReviewAttributes.html":{}}}],["listing_types",{"_index":795,"title":{},"body":{"classes/ListingType.html":{},"interfaces/ListingTypeAttributes.html":{}}}],["listingattributes",{"_index":518,"title":{"interfaces/ListingAttributes.html":{}},"body":{"classes/Listing.html":{},"interfaces/ListingAttributes.html":{},"coverage.html":{}}}],["listingcontroller",{"_index":563,"title":{"controllers/ListingController.html":{}},"body":{"controllers/ListingController.html":{},"modules/ListingModule.html":{},"coverage.html":{}}}],["listingcreationattributes",{"_index":549,"title":{},"body":{"classes/Listing.html":{},"interfaces/ListingAttributes.html":{},"miscellaneous/typealiases.html":{}}}],["listingdata",{"_index":577,"title":{},"body":{"controllers/ListingController.html":{},"controllers/StoryController.html":{}}}],["listingdata.id",{"_index":673,"title":{},"body":{"controllers/ListingController.html":{}}}],["listingdata.isedited",{"_index":677,"title":{},"body":{"controllers/ListingController.html":{}}}],["listingdata.ownerid",{"_index":672,"title":{},"body":{"controllers/ListingController.html":{}}}],["listingdata.url",{"_index":676,"title":{},"body":{"controllers/ListingController.html":{}}}],["listingdata.viewscount",{"_index":674,"title":{},"body":{"controllers/ListingController.html":{}}}],["listingdto",{"_index":655,"title":{"interfaces/ListingDto.html":{}},"body":{"controllers/ListingController.html":{},"interfaces/ListingDto.html":{},"injectables/StoryService.html":{},"coverage.html":{}}}],["listingfollower",{"_index":725,"title":{"classes/ListingFollower.html":{}},"body":{"classes/ListingFollower.html":{},"interfaces/ListingFollowerAttributes.html":{},"coverage.html":{}}}],["listingfollower.init",{"_index":734,"title":{},"body":{"classes/ListingFollower.html":{},"interfaces/ListingFollowerAttributes.html":{}}}],["listingfollowerattributes",{"_index":727,"title":{"interfaces/ListingFollowerAttributes.html":{}},"body":{"classes/ListingFollower.html":{},"interfaces/ListingFollowerAttributes.html":{},"coverage.html":{}}}],["listingfollowercreationattributes",{"_index":733,"title":{},"body":{"classes/ListingFollower.html":{},"interfaces/ListingFollowerAttributes.html":{},"miscellaneous/typealiases.html":{}}}],["listingid",{"_index":255,"title":{},"body":{"interfaces/CreateStoryDto.html":{},"controllers/ListingController.html":{},"classes/ListingFollower.html":{},"interfaces/ListingFollowerAttributes.html":{},"classes/ListingReview.html":{},"interfaces/ListingReviewAttributes.html":{},"interfaces/ListingReviewDto.html":{},"interfaces/ListingReviewDto-1.html":{},"classes/SearchStoryDto.html":{},"classes/Story.html":{},"interfaces/StoryAttributes.html":{},"interfaces/StoryDto.html":{},"injectables/StoryService.html":{},"interfaces/ToggleListingFollowDto.html":{},"controllers/UserController.html":{}}}],["listingids",{"_index":1320,"title":{},"body":{"injectables/StoryService.html":{}}}],["listingmodule",{"_index":113,"title":{"modules/ListingModule.html":{}},"body":{"modules/ApplicationModule.html":{},"modules/ListingModule.html":{},"modules/StoryModule.html":{},"modules.html":{},"overview.html":{}}}],["listingreview",{"_index":697,"title":{"classes/ListingReview.html":{}},"body":{"controllers/ListingController.html":{},"classes/ListingReview.html":{},"interfaces/ListingReviewAttributes.html":{},"coverage.html":{}}}],["listingreview.init",{"_index":773,"title":{},"body":{"classes/ListingReview.html":{},"interfaces/ListingReviewAttributes.html":{}}}],["listingreviewattributes",{"_index":756,"title":{"interfaces/ListingReviewAttributes.html":{}},"body":{"classes/ListingReview.html":{},"interfaces/ListingReviewAttributes.html":{},"coverage.html":{}}}],["listingreviewcreationattributes",{"_index":772,"title":{},"body":{"classes/ListingReview.html":{},"interfaces/ListingReviewAttributes.html":{},"miscellaneous/typealiases.html":{}}}],["listingreviewdata",{"_index":640,"title":{},"body":{"controllers/ListingController.html":{}}}],["listingreviewdata.listingid",{"_index":696,"title":{},"body":{"controllers/ListingController.html":{}}}],["listingreviewdata.userid",{"_index":695,"title":{},"body":{"controllers/ListingController.html":{}}}],["listingreviewdto",{"_index":661,"title":{"interfaces/ListingReviewDto.html":{},"interfaces/ListingReviewDto-1.html":{}},"body":{"controllers/ListingController.html":{},"interfaces/ListingReviewDto.html":{},"interfaces/ListingReviewDto-1.html":{},"coverage.html":{}}}],["listings",{"_index":562,"title":{},"body":{"classes/Listing.html":{},"interfaces/ListingAttributes.html":{},"controllers/ListingController.html":{},"injectables/StoryService.html":{},"classes/User.html":{},"interfaces/UserAttributes.html":{}}}],["listings'})@apibody({type",{"_index":621,"title":{},"body":{"controllers/ListingController.html":{}}}],["listings'})@apiresponse({status",{"_index":599,"title":{},"body":{"controllers/ListingController.html":{}}}],["listings'})@get('v1/listings",{"_index":600,"title":{},"body":{"controllers/ListingController.html":{}}}],["listings.find((l",{"_index":1329,"title":{},"body":{"injectables/StoryService.html":{}}}],["listingservice",{"_index":323,"title":{},"body":{"controllers/DevController.html":{},"controllers/ListingController.html":{},"modules/ListingModule.html":{},"injectables/StoryService.html":{},"coverage.html":{},"overview.html":{}}}],["listingstatus",{"_index":366,"title":{},"body":{"classes/ErrorCodes.html":{},"miscellaneous/enumerations.html":{}}}],["listingtype",{"_index":779,"title":{"classes/ListingType.html":{}},"body":{"classes/ListingType.html":{},"interfaces/ListingTypeAttributes.html":{},"injectables/LookupsService.html":{},"coverage.html":{}}}],["listingtype.code",{"_index":970,"title":{},"body":{"injectables/LookupsService.html":{}}}],["listingtype.createdat",{"_index":971,"title":{},"body":{"injectables/LookupsService.html":{}}}],["listingtype.findall",{"_index":965,"title":{},"body":{"injectables/LookupsService.html":{}}}],["listingtype.hasmany(localizedlistingtype",{"_index":796,"title":{},"body":{"classes/ListingType.html":{},"interfaces/ListingTypeAttributes.html":{}}}],["listingtype.id",{"_index":969,"title":{},"body":{"injectables/LookupsService.html":{}}}],["listingtype.init",{"_index":794,"title":{},"body":{"classes/ListingType.html":{},"interfaces/ListingTypeAttributes.html":{}}}],["listingtype.localized",{"_index":792,"title":{},"body":{"classes/ListingType.html":{},"interfaces/ListingTypeAttributes.html":{}}}],["listingtype.updatedat",{"_index":972,"title":{},"body":{"injectables/LookupsService.html":{}}}],["listingtypeattributes",{"_index":781,"title":{"interfaces/ListingTypeAttributes.html":{}},"body":{"classes/ListingType.html":{},"interfaces/ListingTypeAttributes.html":{},"coverage.html":{}}}],["listingtypecreationattributes",{"_index":793,"title":{},"body":{"classes/ListingType.html":{},"interfaces/ListingTypeAttributes.html":{},"miscellaneous/typealiases.html":{}}}],["listingtypedto",{"_index":798,"title":{"interfaces/ListingTypeDto.html":{}},"body":{"interfaces/ListingTypeDto.html":{},"controllers/LookupsController.html":{},"injectables/LookupsService.html":{},"coverage.html":{}}}],["listingtypeid",{"_index":228,"title":{},"body":{"interfaces/CreateListingDto.html":{},"classes/Listing.html":{},"interfaces/ListingAttributes.html":{},"interfaces/ListingDto.html":{},"classes/SearchListingDto.html":{}}}],["listingtypename",{"_index":720,"title":{},"body":{"interfaces/ListingDto.html":{}}}],["listingtypes",{"_index":964,"title":{},"body":{"injectables/LookupsService.html":{}}}],["listingtypes.map((lt",{"_index":967,"title":{},"body":{"injectables/LookupsService.html":{}}}],["literal",{"_index":267,"title":{},"body":{"classes/Currency.html":{},"classes/Disclaimer.html":{},"classes/HiringType.html":{},"classes/ListingType.html":{},"classes/PriceType.html":{},"classes/User.html":{}}}],["llt",{"_index":974,"title":{},"body":{"injectables/LookupsService.html":{}}}],["llt.refid",{"_index":975,"title":{},"body":{"injectables/LookupsService.html":{}}}],["local",{"_index":1703,"title":{},"body":{"dependencies.html":{}}}],["locale",{"_index":503,"title":{},"body":{"interfaces/IGoogleProfile.html":{}}}],["localized_currencies",{"_index":297,"title":{},"body":{"classes/Currency.html":{},"interfaces/CurrencyAttributes.html":{},"classes/LocalizedCurrency.html":{},"interfaces/LocalizedCurrencyAttributes.html":{}}}],["localized_disclaimers",{"_index":354,"title":{},"body":{"classes/Disclaimer.html":{},"interfaces/DisclaimerAttributes.html":{},"classes/LocalizedDisclaimer.html":{},"interfaces/LocalizedDisclaimerAttributes.html":{}}}],["localized_hiring_types",{"_index":494,"title":{},"body":{"classes/HiringType.html":{},"interfaces/HiringTypeAttributes.html":{},"classes/LocalizedHiringType.html":{},"interfaces/LocalizedHiringTypeAttributes.html":{}}}],["localized_listing_types",{"_index":797,"title":{},"body":{"classes/ListingType.html":{},"interfaces/ListingTypeAttributes.html":{},"classes/LocalizedListingType.html":{},"interfaces/LocalizedListingTypeAttributes.html":{}}}],["localized_price_types",{"_index":856,"title":{},"body":{"classes/LocalizedPriceType.html":{},"interfaces/LocalizedPriceTypeAttributes.html":{},"classes/PriceType.html":{},"interfaces/PriceTypeAttributes.html":{}}}],["localizedcurrencies",{"_index":264,"title":{},"body":{"classes/Currency.html":{},"interfaces/CurrencyAttributes.html":{},"injectables/LookupsService.html":{}}}],["localizedcurrency",{"_index":272,"title":{"classes/LocalizedCurrency.html":{}},"body":{"classes/Currency.html":{},"interfaces/CurrencyAttributes.html":{},"classes/LocalizedCurrency.html":{},"interfaces/LocalizedCurrencyAttributes.html":{},"injectables/LookupsService.html":{},"coverage.html":{}}}],["localizedcurrency.findall",{"_index":997,"title":{},"body":{"injectables/LookupsService.html":{}}}],["localizedcurrency.init",{"_index":811,"title":{},"body":{"classes/LocalizedCurrency.html":{},"interfaces/LocalizedCurrencyAttributes.html":{}}}],["localizedcurrency.name",{"_index":1009,"title":{},"body":{"injectables/LookupsService.html":{}}}],["localizedcurrency.refid",{"_index":1003,"title":{},"body":{"injectables/LookupsService.html":{}}}],["localizedcurrency.standardcode",{"_index":1010,"title":{},"body":{"injectables/LookupsService.html":{}}}],["localizedcurrencyattributes",{"_index":801,"title":{"interfaces/LocalizedCurrencyAttributes.html":{}},"body":{"classes/LocalizedCurrency.html":{},"interfaces/LocalizedCurrencyAttributes.html":{},"coverage.html":{}}}],["localizedcurrencycreationattributes",{"_index":810,"title":{},"body":{"classes/LocalizedCurrency.html":{},"interfaces/LocalizedCurrencyAttributes.html":{},"miscellaneous/typealiases.html":{}}}],["localizeddisclaimer",{"_index":345,"title":{"classes/LocalizedDisclaimer.html":{}},"body":{"classes/Disclaimer.html":{},"interfaces/DisclaimerAttributes.html":{},"classes/LocalizedDisclaimer.html":{},"interfaces/LocalizedDisclaimerAttributes.html":{},"injectables/LookupsService.html":{},"coverage.html":{}}}],["localizeddisclaimer.findall",{"_index":1024,"title":{},"body":{"injectables/LookupsService.html":{}}}],["localizeddisclaimer.init",{"_index":822,"title":{},"body":{"classes/LocalizedDisclaimer.html":{},"interfaces/LocalizedDisclaimerAttributes.html":{}}}],["localizeddisclaimer.name",{"_index":1030,"title":{},"body":{"injectables/LookupsService.html":{}}}],["localizeddisclaimerattributes",{"_index":814,"title":{"interfaces/LocalizedDisclaimerAttributes.html":{}},"body":{"classes/LocalizedDisclaimer.html":{},"interfaces/LocalizedDisclaimerAttributes.html":{},"coverage.html":{}}}],["localizeddisclaimercreationattributes",{"_index":821,"title":{},"body":{"classes/LocalizedDisclaimer.html":{},"interfaces/LocalizedDisclaimerAttributes.html":{},"miscellaneous/typealiases.html":{}}}],["localizeddisclaimers",{"_index":340,"title":{},"body":{"classes/Disclaimer.html":{},"interfaces/DisclaimerAttributes.html":{},"injectables/LookupsService.html":{}}}],["localizeddisclaimers.find",{"_index":1029,"title":{},"body":{"injectables/LookupsService.html":{}}}],["localizedhiringtype",{"_index":485,"title":{"classes/LocalizedHiringType.html":{}},"body":{"classes/HiringType.html":{},"interfaces/HiringTypeAttributes.html":{},"classes/LocalizedHiringType.html":{},"interfaces/LocalizedHiringTypeAttributes.html":{},"injectables/LookupsService.html":{},"coverage.html":{}}}],["localizedhiringtype.findall",{"_index":1015,"title":{},"body":{"injectables/LookupsService.html":{}}}],["localizedhiringtype.init",{"_index":832,"title":{},"body":{"classes/LocalizedHiringType.html":{},"interfaces/LocalizedHiringTypeAttributes.html":{}}}],["localizedhiringtype.name",{"_index":1021,"title":{},"body":{"injectables/LookupsService.html":{}}}],["localizedhiringtypeattributes",{"_index":824,"title":{"interfaces/LocalizedHiringTypeAttributes.html":{}},"body":{"classes/LocalizedHiringType.html":{},"interfaces/LocalizedHiringTypeAttributes.html":{},"coverage.html":{}}}],["localizedhiringtypecreationattributes",{"_index":831,"title":{},"body":{"classes/LocalizedHiringType.html":{},"interfaces/LocalizedHiringTypeAttributes.html":{},"miscellaneous/typealiases.html":{}}}],["localizedhiringtypes",{"_index":480,"title":{},"body":{"classes/HiringType.html":{},"interfaces/HiringTypeAttributes.html":{},"injectables/LookupsService.html":{}}}],["localizedhiringtypes.find",{"_index":1020,"title":{},"body":{"injectables/LookupsService.html":{}}}],["localizedlistingtype",{"_index":789,"title":{"classes/LocalizedListingType.html":{}},"body":{"classes/ListingType.html":{},"interfaces/ListingTypeAttributes.html":{},"classes/LocalizedListingType.html":{},"interfaces/LocalizedListingTypeAttributes.html":{},"injectables/LookupsService.html":{},"coverage.html":{}}}],["localizedlistingtype.findall",{"_index":966,"title":{},"body":{"injectables/LookupsService.html":{}}}],["localizedlistingtype.init",{"_index":842,"title":{},"body":{"classes/LocalizedListingType.html":{},"interfaces/LocalizedListingTypeAttributes.html":{}}}],["localizedlistingtype.name",{"_index":977,"title":{},"body":{"injectables/LookupsService.html":{}}}],["localizedlistingtypeattributes",{"_index":834,"title":{"interfaces/LocalizedListingTypeAttributes.html":{}},"body":{"classes/LocalizedListingType.html":{},"interfaces/LocalizedListingTypeAttributes.html":{},"coverage.html":{}}}],["localizedlistingtypecreationattributes",{"_index":841,"title":{},"body":{"classes/LocalizedListingType.html":{},"interfaces/LocalizedListingTypeAttributes.html":{},"miscellaneous/typealiases.html":{}}}],["localizedlistingtypes",{"_index":783,"title":{},"body":{"classes/ListingType.html":{},"interfaces/ListingTypeAttributes.html":{},"injectables/LookupsService.html":{}}}],["localizedlistingtypes.find",{"_index":973,"title":{},"body":{"injectables/LookupsService.html":{}}}],["localizedpricetype",{"_index":843,"title":{"classes/LocalizedPriceType.html":{}},"body":{"classes/LocalizedPriceType.html":{},"interfaces/LocalizedPriceTypeAttributes.html":{},"injectables/LookupsService.html":{},"classes/PriceType.html":{},"interfaces/PriceTypeAttributes.html":{},"coverage.html":{}}}],["localizedpricetype.findall",{"_index":984,"title":{},"body":{"injectables/LookupsService.html":{}}}],["localizedpricetype.format",{"_index":994,"title":{},"body":{"injectables/LookupsService.html":{}}}],["localizedpricetype.init",{"_index":855,"title":{},"body":{"classes/LocalizedPriceType.html":{},"interfaces/LocalizedPriceTypeAttributes.html":{}}}],["localizedpricetype.name",{"_index":992,"title":{},"body":{"injectables/LookupsService.html":{}}}],["localizedpricetypeattributes",{"_index":845,"title":{"interfaces/LocalizedPriceTypeAttributes.html":{}},"body":{"classes/LocalizedPriceType.html":{},"interfaces/LocalizedPriceTypeAttributes.html":{},"coverage.html":{}}}],["localizedpricetypecreationattributes",{"_index":854,"title":{},"body":{"classes/LocalizedPriceType.html":{},"interfaces/LocalizedPriceTypeAttributes.html":{},"miscellaneous/typealiases.html":{}}}],["localizedpricetypes",{"_index":983,"title":{},"body":{"injectables/LookupsService.html":{},"classes/PriceType.html":{},"interfaces/PriceTypeAttributes.html":{}}}],["localizedpricetypes.find",{"_index":989,"title":{},"body":{"injectables/LookupsService.html":{}}}],["logfile",{"_index":86,"title":{},"body":{"injectables/AppLogger.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["logged",{"_index":1468,"title":{},"body":{"controllers/UserController.html":{}}}],["logger",{"_index":75,"title":{},"body":{"injectables/AppLogger.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["logger.error(error",{"_index":1803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["login",{"_index":1419,"title":{},"body":{"controllers/UserController.html":{}}}],["login(@body",{"_index":1505,"title":{},"body":{"controllers/UserController.html":{}}}],["login(logindto",{"_index":1451,"title":{},"body":{"controllers/UserController.html":{}}}],["logindto",{"_index":1454,"title":{},"body":{"controllers/UserController.html":{}}}],["logindto.email",{"_index":1507,"title":{},"body":{"controllers/UserController.html":{}}}],["logindto.password",{"_index":1508,"title":{},"body":{"controllers/UserController.html":{}}}],["loginuserdto",{"_index":857,"title":{"classes/LoginUserDto.html":{}},"body":{"classes/LoginUserDto.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["logout(@req",{"_index":1525,"title":{},"body":{"controllers/UserController.html":{}}}],["lookups.controller",{"_index":921,"title":{},"body":{"modules/LookupsModule.html":{}}}],["lookups.service",{"_index":417,"title":{},"body":{"controllers/FilesController.html":{},"controllers/LookupsController.html":{},"modules/LookupsModule.html":{}}}],["lookups/lookups.module",{"_index":122,"title":{},"body":{"modules/ApplicationModule.html":{},"modules/ListingModule.html":{},"modules/StoryModule.html":{}}}],["lookups/lookups.service",{"_index":1272,"title":{},"body":{"injectables/StoryService.html":{}}}],["lookupscontroller",{"_index":865,"title":{"controllers/LookupsController.html":{}},"body":{"controllers/LookupsController.html":{},"modules/LookupsModule.html":{},"coverage.html":{}}}],["lookupservice",{"_index":421,"title":{},"body":{"controllers/FilesController.html":{}}}],["lookupsmodule",{"_index":114,"title":{"modules/LookupsModule.html":{}},"body":{"modules/ApplicationModule.html":{},"modules/ListingModule.html":{},"modules/LookupsModule.html":{},"modules/StoryModule.html":{},"modules.html":{},"overview.html":{}}}],["lookupsservice",{"_index":416,"title":{"injectables/LookupsService.html":{}},"body":{"controllers/FilesController.html":{},"controllers/LookupsController.html":{},"modules/LookupsModule.html":{},"injectables/LookupsService.html":{},"injectables/StoryService.html":{},"coverage.html":{},"overview.html":{}}}],["lpt",{"_index":990,"title":{},"body":{"injectables/LookupsService.html":{}}}],["lpt.refid",{"_index":991,"title":{},"body":{"injectables/LookupsService.html":{}}}],["lt.id",{"_index":968,"title":{},"body":{"injectables/LookupsService.html":{},"injectables/StoryService.html":{}}}],["mailmanager",{"_index":209,"title":{"injectables/MailManager.html":{}},"body":{"modules/CoreModule.html":{},"injectables/MailManager.html":{},"coverage.html":{},"overview.html":{}}}],["mapstory",{"_index":1251,"title":{},"body":{"injectables/StoryService.html":{}}}],["mapstory(story",{"_index":1264,"title":{},"body":{"injectables/StoryService.html":{}}}],["matched",{"_index":620,"title":{},"body":{"controllers/ListingController.html":{},"controllers/StoryController.html":{}}}],["matching",{"_index":68,"title":{},"body":{"classes/AppCache.html":{},"injectables/AppLogger.html":{},"modules/AppLoggerModule.html":{},"modules/ApplicationModule.html":{},"injectables/AuthMiddleware.html":{},"controllers/CacheController.html":{},"classes/CacheObject.html":{},"modules/CoreModule.html":{},"interfaces/CreateListingDto.html":{},"interfaces/CreateStoryDto.html":{},"classes/Currency.html":{},"interfaces/CurrencyAttributes.html":{},"interfaces/CurrencyDto.html":{},"controllers/DevController.html":{},"modules/DevModule.html":{},"classes/Disclaimer.html":{},"interfaces/DisclaimerAttributes.html":{},"interfaces/DisclaimerDto.html":{},"classes/ErrorCodes.html":{},"classes/ErrorResult.html":{},"controllers/FilesController.html":{},"injectables/FireBase.html":{},"classes/HiringType.html":{},"interfaces/HiringTypeAttributes.html":{},"interfaces/HiringTypeDto.html":{},"interfaces/IGoogleProfile.html":{},"classes/KeyValuePair.html":{},"classes/Listing.html":{},"interfaces/ListingAttributes.html":{},"controllers/ListingController.html":{},"interfaces/ListingDto.html":{},"classes/ListingFollower.html":{},"interfaces/ListingFollowerAttributes.html":{},"modules/ListingModule.html":{},"classes/ListingReview.html":{},"interfaces/ListingReviewAttributes.html":{},"interfaces/ListingReviewDto.html":{},"interfaces/ListingReviewDto-1.html":{},"classes/ListingType.html":{},"interfaces/ListingTypeAttributes.html":{},"interfaces/ListingTypeDto.html":{},"classes/LocalizedCurrency.html":{},"interfaces/LocalizedCurrencyAttributes.html":{},"classes/LocalizedDisclaimer.html":{},"interfaces/LocalizedDisclaimerAttributes.html":{},"classes/LocalizedHiringType.html":{},"interfaces/LocalizedHiringTypeAttributes.html":{},"classes/LocalizedListingType.html":{},"interfaces/LocalizedListingTypeAttributes.html":{},"classes/LocalizedPriceType.html":{},"interfaces/LocalizedPriceTypeAttributes.html":{},"classes/LoginUserDto.html":{},"controllers/LookupsController.html":{},"modules/LookupsModule.html":{},"injectables/LookupsService.html":{},"injectables/MailManager.html":{},"classes/NoDataResult.html":{},"classes/NotFoundResult.html":{},"classes/OperationResult.html":{},"classes/PasswordRecoveryToken.html":{},"interfaces/PasswordRecoveryTokenAttributes.html":{},"classes/PriceType.html":{},"interfaces/PriceTypeAttributes.html":{},"interfaces/PriceTypeDto.html":{},"injectables/PrismaService.html":{},"classes/RegisterUser.html":{},"interfaces/ResetPassword.html":{},"classes/Result.html":{},"classes/SearchListingDto.html":{},"classes/SearchResultDto.html":{},"classes/SearchStoryDto.html":{},"classes/Story.html":{},"interfaces/StoryAttributes.html":{},"controllers/StoryController.html":{},"interfaces/StoryDto.html":{},"modules/StoryModule.html":{},"injectables/StoryService.html":{},"classes/SuccessResult.html":{},"interfaces/ToggleListingFollowDto.html":{},"classes/ToggleUserFollowDto.html":{},"classes/User.html":{},"interfaces/UserAttributes.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserFollower.html":{},"interfaces/UserFollowerAttributes.html":{},"modules/UserModule.html":{},"classes/UserSnippetDto.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["media",{"_index":229,"title":{},"body":{"interfaces/CreateListingDto.html":{},"interfaces/CreateStoryDto.html":{},"controllers/FilesController.html":{},"classes/Listing.html":{},"interfaces/ListingAttributes.html":{},"interfaces/ListingDto.html":{},"classes/Story.html":{},"interfaces/StoryAttributes.html":{},"interfaces/StoryDto.html":{},"injectables/StoryService.html":{}}}],["media.bucket",{"_index":444,"title":{},"body":{"controllers/FilesController.html":{},"injectables/StoryService.html":{}}}],["media.filename",{"_index":446,"title":{},"body":{"controllers/FilesController.html":{},"injectables/StoryService.html":{}}}],["media.type",{"_index":445,"title":{},"body":{"controllers/FilesController.html":{},"injectables/StoryService.html":{}}}],["media.url.replace(media.filename",{"_index":450,"title":{},"body":{"controllers/FilesController.html":{}}}],["mediafiles",{"_index":400,"title":{},"body":{"controllers/FilesController.html":{},"injectables/StoryService.html":{}}}],["message",{"_index":80,"title":{},"body":{"injectables/AppLogger.html":{},"classes/OperationResult.html":{},"controllers/UserController.html":{},"injectables/ValidationPipe.html":{}}}],["metadata",{"_index":1602,"title":{},"body":{"injectables/ValidationPipe.html":{},"dependencies.html":{}}}],["metatype",{"_index":1600,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["method",{"_index":748,"title":{},"body":{"modules/ListingModule.html":{},"modules/LookupsModule.html":{},"modules/StoryModule.html":{},"modules/UserModule.html":{}}}],["methods",{"_index":11,"title":{},"body":{"classes/AppCache.html":{},"injectables/AppLogger.html":{},"injectables/AuthMiddleware.html":{},"controllers/CacheController.html":{},"modules/CoreModule.html":{},"controllers/DevController.html":{},"modules/DevModule.html":{},"controllers/FilesController.html":{},"injectables/FireBase.html":{},"controllers/ListingController.html":{},"modules/ListingModule.html":{},"controllers/LookupsController.html":{},"modules/LookupsModule.html":{},"injectables/LookupsService.html":{},"injectables/MailManager.html":{},"injectables/PrismaService.html":{},"controllers/StoryController.html":{},"modules/StoryModule.html":{},"injectables/StoryService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/ValidationPipe.html":{}}}],["middlewareconsumer",{"_index":332,"title":{},"body":{"modules/DevModule.html":{},"modules/ListingModule.html":{},"modules/LookupsModule.html":{},"modules/StoryModule.html":{},"modules/UserModule.html":{}}}],["migration",{"_index":306,"title":{},"body":{"controllers/DevController.html":{}}}],["migrations",{"_index":317,"title":{},"body":{"controllers/DevController.html":{},"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":1724,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":1745,"title":{},"body":{"index.html":{}}}],["model",{"_index":259,"title":{},"body":{"classes/Currency.html":{},"interfaces/CurrencyAttributes.html":{},"classes/Disclaimer.html":{},"interfaces/DisclaimerAttributes.html":{},"classes/HiringType.html":{},"interfaces/HiringTypeAttributes.html":{},"classes/Listing.html":{},"interfaces/ListingAttributes.html":{},"classes/ListingFollower.html":{},"interfaces/ListingFollowerAttributes.html":{},"classes/ListingReview.html":{},"interfaces/ListingReviewAttributes.html":{},"classes/ListingType.html":{},"interfaces/ListingTypeAttributes.html":{},"classes/LocalizedCurrency.html":{},"interfaces/LocalizedCurrencyAttributes.html":{},"classes/LocalizedDisclaimer.html":{},"interfaces/LocalizedDisclaimerAttributes.html":{},"classes/LocalizedHiringType.html":{},"interfaces/LocalizedHiringTypeAttributes.html":{},"classes/LocalizedListingType.html":{},"interfaces/LocalizedListingTypeAttributes.html":{},"classes/LocalizedPriceType.html":{},"interfaces/LocalizedPriceTypeAttributes.html":{},"classes/PasswordRecoveryToken.html":{},"interfaces/PasswordRecoveryTokenAttributes.html":{},"classes/PriceType.html":{},"interfaces/PriceTypeAttributes.html":{},"classes/Story.html":{},"interfaces/StoryAttributes.html":{},"classes/User.html":{},"interfaces/UserAttributes.html":{},"classes/UserFollower.html":{},"interfaces/UserFollowerAttributes.html":{}}}],["models/currency",{"_index":952,"title":{},"body":{"injectables/LookupsService.html":{}}}],["models/currency.localized",{"_index":953,"title":{},"body":{"injectables/LookupsService.html":{}}}],["models/disclaimer",{"_index":956,"title":{},"body":{"injectables/LookupsService.html":{}}}],["models/disclaimer.localized",{"_index":957,"title":{},"body":{"injectables/LookupsService.html":{}}}],["models/hiringtype",{"_index":954,"title":{},"body":{"injectables/LookupsService.html":{}}}],["models/hiringtype.localized",{"_index":955,"title":{},"body":{"injectables/LookupsService.html":{}}}],["models/listingtype",{"_index":947,"title":{},"body":{"injectables/LookupsService.html":{}}}],["models/listingtype.localized",{"_index":948,"title":{},"body":{"injectables/LookupsService.html":{}}}],["models/pricetype",{"_index":950,"title":{},"body":{"injectables/LookupsService.html":{}}}],["models/pricetype.localized",{"_index":951,"title":{},"body":{"injectables/LookupsService.html":{}}}],["models/story",{"_index":1271,"title":{},"body":{"injectables/StoryService.html":{}}}],["module",{"_index":92,"title":{"modules/AppLoggerModule.html":{},"modules/ApplicationModule.html":{},"modules/CoreModule.html":{},"modules/DevModule.html":{},"modules/ListingModule.html":{},"modules/LookupsModule.html":{},"modules/StoryModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppLoggerModule.html":{},"modules/ApplicationModule.html":{},"modules/CoreModule.html":{},"modules/DevModule.html":{},"modules/ListingModule.html":{},"modules/LookupsModule.html":{},"modules/StoryModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":94,"title":{"modules.html":{}},"body":{"modules/AppLoggerModule.html":{},"modules/ApplicationModule.html":{},"modules/CoreModule.html":{},"modules/DevModule.html":{},"modules/ListingModule.html":{},"modules/LookupsModule.html":{},"modules/StoryModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":45,"title":{},"body":{"classes/AppCache.html":{},"classes/CacheObject.html":{},"dependencies.html":{}}}],["moment.utc().add(seconds",{"_index":60,"title":{},"body":{"classes/AppCache.html":{},"classes/CacheObject.html":{}}}],["moment.utc().todate",{"_index":54,"title":{},"body":{"classes/AppCache.html":{},"classes/CacheObject.html":{}}}],["morgan",{"_index":1693,"title":{},"body":{"dependencies.html":{}}}],["n",{"_index":1804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name",{"_index":29,"title":{},"body":{"classes/AppCache.html":{},"injectables/AppLogger.html":{},"injectables/AuthMiddleware.html":{},"classes/CacheObject.html":{},"interfaces/CreateListingDto.html":{},"interfaces/CurrencyDto.html":{},"controllers/DevController.html":{},"interfaces/DisclaimerDto.html":{},"classes/ErrorResult.html":{},"controllers/FilesController.html":{},"injectables/FireBase.html":{},"interfaces/HiringTypeDto.html":{},"interfaces/IGoogleProfile.html":{},"classes/KeyValuePair.html":{},"classes/Listing.html":{},"interfaces/ListingAttributes.html":{},"controllers/ListingController.html":{},"interfaces/ListingDto.html":{},"modules/ListingModule.html":{},"interfaces/ListingTypeDto.html":{},"classes/LocalizedCurrency.html":{},"interfaces/LocalizedCurrencyAttributes.html":{},"classes/LocalizedDisclaimer.html":{},"interfaces/LocalizedDisclaimerAttributes.html":{},"classes/LocalizedHiringType.html":{},"interfaces/LocalizedHiringTypeAttributes.html":{},"classes/LocalizedListingType.html":{},"interfaces/LocalizedListingTypeAttributes.html":{},"classes/LocalizedPriceType.html":{},"interfaces/LocalizedPriceTypeAttributes.html":{},"controllers/LookupsController.html":{},"modules/LookupsModule.html":{},"injectables/LookupsService.html":{},"injectables/MailManager.html":{},"interfaces/PriceTypeDto.html":{},"classes/RegisterUser.html":{},"classes/Result.html":{},"controllers/StoryController.html":{},"modules/StoryModule.html":{},"injectables/StoryService.html":{},"classes/SuccessResult.html":{},"classes/User.html":{},"interfaces/UserAttributes.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"modules/UserModule.html":{},"classes/UserSnippetDto.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/functions.html":{}}}],["name'})@delete('v1/files/:bucket/:type/:name",{"_index":391,"title":{},"body":{"controllers/FilesController.html":{}}}],["name'})@get('v1/files/:bucket/:type/:name",{"_index":402,"title":{},"body":{"controllers/FilesController.html":{}}}],["nestjs/common",{"_index":82,"title":{},"body":{"injectables/AppLogger.html":{},"modules/AppLoggerModule.html":{},"modules/ApplicationModule.html":{},"injectables/AuthMiddleware.html":{},"controllers/CacheController.html":{},"modules/CoreModule.html":{},"controllers/DevController.html":{},"modules/DevModule.html":{},"controllers/FilesController.html":{},"injectables/FireBase.html":{},"controllers/ListingController.html":{},"modules/ListingModule.html":{},"controllers/LookupsController.html":{},"modules/LookupsModule.html":{},"injectables/LookupsService.html":{},"injectables/MailManager.html":{},"injectables/PrismaService.html":{},"controllers/StoryController.html":{},"modules/StoryModule.html":{},"injectables/StoryService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/ValidationPipe.html":{},"dependencies.html":{}}}],["nestjs/common/exceptions/http.exception",{"_index":153,"title":{},"body":{"injectables/AuthMiddleware.html":{},"controllers/UserController.html":{},"injectables/ValidationPipe.html":{}}}],["nestjs/core",{"_index":1678,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":413,"title":{},"body":{"controllers/FilesController.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":194,"title":{},"body":{"controllers/CacheController.html":{},"controllers/DevController.html":{},"controllers/FilesController.html":{},"controllers/ListingController.html":{},"controllers/LookupsController.html":{},"controllers/StoryController.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["nestmiddleware",{"_index":141,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["nestmodule",{"_index":214,"title":{},"body":{"modules/CoreModule.html":{},"modules/DevModule.html":{},"modules/ListingModule.html":{},"modules/LookupsModule.html":{},"modules/StoryModule.html":{},"modules/UserModule.html":{}}}],["new",{"_index":59,"title":{},"body":{"classes/AppCache.html":{},"injectables/AuthMiddleware.html":{},"classes/CacheObject.html":{},"classes/Currency.html":{},"interfaces/CurrencyAttributes.html":{},"controllers/DevController.html":{},"classes/Disclaimer.html":{},"interfaces/DisclaimerAttributes.html":{},"controllers/FilesController.html":{},"classes/HiringType.html":{},"interfaces/HiringTypeAttributes.html":{},"classes/Listing.html":{},"interfaces/ListingAttributes.html":{},"controllers/ListingController.html":{},"classes/ListingFollower.html":{},"interfaces/ListingFollowerAttributes.html":{},"classes/ListingReview.html":{},"interfaces/ListingReviewAttributes.html":{},"classes/ListingType.html":{},"interfaces/ListingTypeAttributes.html":{},"classes/LocalizedCurrency.html":{},"interfaces/LocalizedCurrencyAttributes.html":{},"classes/LocalizedDisclaimer.html":{},"interfaces/LocalizedDisclaimerAttributes.html":{},"classes/LocalizedHiringType.html":{},"interfaces/LocalizedHiringTypeAttributes.html":{},"classes/LocalizedListingType.html":{},"interfaces/LocalizedListingTypeAttributes.html":{},"classes/LocalizedPriceType.html":{},"interfaces/LocalizedPriceTypeAttributes.html":{},"injectables/LookupsService.html":{},"injectables/MailManager.html":{},"classes/PasswordRecoveryToken.html":{},"interfaces/PasswordRecoveryTokenAttributes.html":{},"classes/PriceType.html":{},"interfaces/PriceTypeAttributes.html":{},"classes/Story.html":{},"interfaces/StoryAttributes.html":{},"controllers/StoryController.html":{},"injectables/StoryService.html":{},"classes/User.html":{},"interfaces/UserAttributes.html":{},"controllers/UserController.html":{},"classes/UserFollower.html":{},"interfaces/UserFollowerAttributes.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newfilename",{"_index":447,"title":{},"body":{"controllers/FilesController.html":{},"injectables/LookupsService.html":{}}}],["newmedia",{"_index":449,"title":{},"body":{"controllers/FilesController.html":{}}}],["newmediafiles",{"_index":443,"title":{},"body":{"controllers/FilesController.html":{}}}],["newmediafiles.push(newmedia",{"_index":451,"title":{},"body":{"controllers/FilesController.html":{}}}],["newpassword",{"_index":1125,"title":{},"body":{"interfaces/ResetPassword.html":{}}}],["news",{"_index":476,"title":{},"body":{"injectables/FireBase.html":{},"index.html":{}}}],["news.imaginative",{"_index":475,"title":{},"body":{"injectables/FireBase.html":{}}}],["next",{"_index":137,"title":{},"body":{"injectables/AuthMiddleware.html":{},"controllers/UserController.html":{}}}],["next(err",{"_index":1494,"title":{},"body":{"controllers/UserController.html":{}}}],["nextfunction",{"_index":138,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["no_data",{"_index":1517,"title":{},"body":{"controllers/UserController.html":{}}}],["nodataresult",{"_index":1068,"title":{"classes/NoDataResult.html":{}},"body":{"classes/NoDataResult.html":{},"coverage.html":{}}}],["node",{"_index":1696,"title":{},"body":{"dependencies.html":{}}}],["node_env",{"_index":1661,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["noreply@imaginativenews.com",{"_index":1064,"title":{},"body":{"injectables/MailManager.html":{}}}],["not_found",{"_index":361,"title":{},"body":{"classes/ErrorCodes.html":{},"controllers/UserController.html":{}}}],["notfoundresult",{"_index":1072,"title":{"classes/NotFoundResult.html":{}},"body":{"classes/NotFoundResult.html":{},"coverage.html":{}}}],["notgoodaboutlisting",{"_index":758,"title":{},"body":{"classes/ListingReview.html":{},"interfaces/ListingReviewAttributes.html":{},"interfaces/ListingReviewDto.html":{},"interfaces/ListingReviewDto-1.html":{}}}],["notificationsenabled",{"_index":1116,"title":{},"body":{"classes/RegisterUser.html":{},"classes/User.html":{},"interfaces/UserAttributes.html":{}}}],["npm",{"_index":1739,"title":{},"body":{"index.html":{}}}],["null",{"_index":374,"title":{},"body":{"classes/ErrorResult.html":{},"controllers/FilesController.html":{},"interfaces/IGoogleProfile.html":{},"injectables/LookupsService.html":{},"classes/NoDataResult.html":{},"classes/NotFoundResult.html":{},"classes/Result.html":{},"classes/Story.html":{},"interfaces/StoryAttributes.html":{},"injectables/StoryService.html":{},"classes/SuccessResult.html":{},"classes/User.html":{},"interfaces/UserAttributes.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":37,"title":{},"body":{"classes/AppCache.html":{},"classes/CacheObject.html":{},"interfaces/CreateListingDto.html":{},"interfaces/CreateStoryDto.html":{},"classes/Listing.html":{},"interfaces/ListingAttributes.html":{},"controllers/ListingController.html":{},"interfaces/ListingDto.html":{},"classes/ListingReview.html":{},"interfaces/ListingReviewAttributes.html":{},"interfaces/ListingReviewDto.html":{},"interfaces/ListingReviewDto-1.html":{},"classes/SearchListingDto.html":{},"classes/SearchResultDto.html":{},"classes/SearchStoryDto.html":{},"classes/Story.html":{},"interfaces/StoryAttributes.html":{},"interfaces/StoryDto.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"injectables/ValidationPipe.html":{}}}],["number(listing.avgreviews",{"_index":1367,"title":{},"body":{"injectables/StoryService.html":{}}}],["number(listing.reviewscount",{"_index":1368,"title":{},"body":{"injectables/StoryService.html":{}}}],["oauth2",{"_index":1670,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["oauth20",{"_index":1701,"title":{},"body":{"dependencies.html":{}}}],["oauth2client",{"_index":1671,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":708,"title":{},"body":{"controllers/ListingController.html":{},"controllers/UserController.html":{},"injectables/ValidationPipe.html":{}}}],["object'})@apibody({type",{"_index":630,"title":{},"body":{"controllers/ListingController.html":{},"controllers/UserController.html":{}}}],["object.entries(el.constraints).foreach((constraint",{"_index":1624,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["offerdescription",{"_index":230,"title":{},"body":{"interfaces/CreateListingDto.html":{},"classes/Listing.html":{},"interfaces/ListingAttributes.html":{},"interfaces/ListingDto.html":{}}}],["offerprice",{"_index":231,"title":{},"body":{"interfaces/CreateListingDto.html":{},"classes/Listing.html":{},"interfaces/ListingAttributes.html":{},"interfaces/ListingDto.html":{},"injectables/StoryService.html":{}}}],["offset",{"_index":1310,"title":{},"body":{"injectables/StoryService.html":{}}}],["onesignal",{"_index":1695,"title":{},"body":{"dependencies.html":{}}}],["onlistening",{"_index":1651,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["onmoduledestroy",{"_index":1106,"title":{},"body":{"injectables/PrismaService.html":{}}}],["onmoduleinit",{"_index":1107,"title":{},"body":{"injectables/PrismaService.html":{}}}],["operation",{"_index":590,"title":{},"body":{"controllers/ListingController.html":{},"controllers/StoryController.html":{},"controllers/UserController.html":{}}}],["operationresult",{"_index":664,"title":{"classes/OperationResult.html":{}},"body":{"controllers/ListingController.html":{},"classes/OperationResult.html":{},"injectables/StoryService.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["optional",{"_index":30,"title":{},"body":{"classes/AppCache.html":{},"injectables/AppLogger.html":{},"injectables/AuthMiddleware.html":{},"classes/CacheObject.html":{},"interfaces/CreateListingDto.html":{},"interfaces/CreateStoryDto.html":{},"classes/Currency.html":{},"interfaces/CurrencyAttributes.html":{},"controllers/DevController.html":{},"classes/Disclaimer.html":{},"interfaces/DisclaimerAttributes.html":{},"classes/ErrorResult.html":{},"controllers/FilesController.html":{},"injectables/FireBase.html":{},"classes/HiringType.html":{},"interfaces/HiringTypeAttributes.html":{},"interfaces/IGoogleProfile.html":{},"classes/KeyValuePair.html":{},"classes/Listing.html":{},"interfaces/ListingAttributes.html":{},"controllers/ListingController.html":{},"interfaces/ListingDto.html":{},"classes/ListingFollower.html":{},"interfaces/ListingFollowerAttributes.html":{},"modules/ListingModule.html":{},"classes/ListingReview.html":{},"interfaces/ListingReviewAttributes.html":{},"classes/ListingType.html":{},"interfaces/ListingTypeAttributes.html":{},"classes/LocalizedCurrency.html":{},"interfaces/LocalizedCurrencyAttributes.html":{},"classes/LocalizedDisclaimer.html":{},"interfaces/LocalizedDisclaimerAttributes.html":{},"classes/LocalizedHiringType.html":{},"interfaces/LocalizedHiringTypeAttributes.html":{},"classes/LocalizedListingType.html":{},"interfaces/LocalizedListingTypeAttributes.html":{},"classes/LocalizedPriceType.html":{},"interfaces/LocalizedPriceTypeAttributes.html":{},"controllers/LookupsController.html":{},"modules/LookupsModule.html":{},"injectables/LookupsService.html":{},"injectables/MailManager.html":{},"classes/OperationResult.html":{},"classes/PasswordRecoveryToken.html":{},"interfaces/PasswordRecoveryTokenAttributes.html":{},"classes/PriceType.html":{},"interfaces/PriceTypeAttributes.html":{},"classes/Result.html":{},"classes/SearchListingDto.html":{},"classes/SearchStoryDto.html":{},"classes/Story.html":{},"interfaces/StoryAttributes.html":{},"controllers/StoryController.html":{},"interfaces/StoryDto.html":{},"modules/StoryModule.html":{},"injectables/StoryService.html":{},"classes/SuccessResult.html":{},"classes/User.html":{},"interfaces/UserAttributes.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserFollower.html":{},"interfaces/UserFollowerAttributes.html":{},"modules/UserModule.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["options",{"_index":911,"title":{},"body":{"controllers/LookupsController.html":{}}}],["options'})@apiresponse({status",{"_index":877,"title":{},"body":{"controllers/LookupsController.html":{}}}],["options'})@get('v1/lookups/disclaimers",{"_index":878,"title":{},"body":{"controllers/LookupsController.html":{}}}],["order",{"_index":999,"title":{},"body":{"injectables/LookupsService.html":{},"injectables/StoryService.html":{}}}],["otherhiring",{"_index":232,"title":{},"body":{"interfaces/CreateListingDto.html":{},"classes/Listing.html":{},"interfaces/ListingAttributes.html":{},"interfaces/ListingDto.html":{}}}],["otherpricetype",{"_index":233,"title":{},"body":{"interfaces/CreateListingDto.html":{},"classes/Listing.html":{},"interfaces/ListingAttributes.html":{},"interfaces/ListingDto.html":{},"injectables/StoryService.html":{}}}],["out",{"_index":106,"title":{},"body":{"modules/AppLoggerModule.html":{},"modules/ApplicationModule.html":{},"modules/CoreModule.html":{},"modules/DevModule.html":{},"modules/ListingModule.html":{},"modules/LookupsModule.html":{},"modules/StoryModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overallrating",{"_index":234,"title":{},"body":{"interfaces/CreateListingDto.html":{},"classes/Listing.html":{},"interfaces/ListingAttributes.html":{}}}],["overview",{"_index":1761,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":721,"title":{},"body":{"interfaces/ListingDto.html":{},"interfaces/StoryDto.html":{},"injectables/StoryService.html":{}}}],["ownerid",{"_index":235,"title":{},"body":{"interfaces/CreateListingDto.html":{},"interfaces/CreateStoryDto.html":{},"classes/Listing.html":{},"interfaces/ListingAttributes.html":{},"interfaces/ListingDto.html":{},"classes/SearchListingDto.html":{},"classes/SearchStoryDto.html":{},"classes/Story.html":{},"interfaces/StoryAttributes.html":{},"injectables/StoryService.html":{},"classes/User.html":{},"interfaces/UserAttributes.html":{}}}],["ownerids",{"_index":1323,"title":{},"body":{"injectables/StoryService.html":{}}}],["package",{"_index":1676,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":608,"title":{},"body":{"controllers/ListingController.html":{},"controllers/UserController.html":{}}}],["pageindex",{"_index":606,"title":{},"body":{"controllers/ListingController.html":{},"classes/SearchListingDto.html":{},"classes/SearchStoryDto.html":{},"controllers/UserController.html":{}}}],["pagesize",{"_index":607,"title":{},"body":{"controllers/ListingController.html":{},"classes/SearchListingDto.html":{},"classes/SearchStoryDto.html":{},"controllers/UserController.html":{}}}],["pagetype",{"_index":236,"title":{},"body":{"interfaces/CreateListingDto.html":{},"classes/Listing.html":{},"interfaces/ListingAttributes.html":{},"interfaces/ListingDto.html":{},"classes/SearchListingDto.html":{}}}],["param",{"_index":410,"title":{},"body":{"controllers/FilesController.html":{},"controllers/ListingController.html":{},"controllers/LookupsController.html":{},"controllers/StoryController.html":{},"controllers/UserController.html":{}}}],["param('bucket",{"_index":424,"title":{},"body":{"controllers/FilesController.html":{}}}],["param('id",{"_index":681,"title":{},"body":{"controllers/ListingController.html":{},"controllers/StoryController.html":{}}}],["param('listingid",{"_index":700,"title":{},"body":{"controllers/ListingController.html":{},"controllers/UserController.html":{}}}],["param('name",{"_index":432,"title":{},"body":{"controllers/FilesController.html":{}}}],["param('reviewid",{"_index":706,"title":{},"body":{"controllers/ListingController.html":{}}}],["param('type",{"_index":425,"title":{},"body":{"controllers/FilesController.html":{},"controllers/LookupsController.html":{}}}],["param('userid",{"_index":1541,"title":{},"body":{"controllers/UserController.html":{}}}],["parameters",{"_index":28,"title":{},"body":{"classes/AppCache.html":{},"injectables/AppLogger.html":{},"injectables/AuthMiddleware.html":{},"classes/CacheObject.html":{},"controllers/DevController.html":{},"classes/ErrorResult.html":{},"controllers/FilesController.html":{},"injectables/FireBase.html":{},"classes/KeyValuePair.html":{},"controllers/ListingController.html":{},"modules/ListingModule.html":{},"controllers/LookupsController.html":{},"modules/LookupsModule.html":{},"injectables/LookupsService.html":{},"injectables/MailManager.html":{},"classes/Result.html":{},"controllers/StoryController.html":{},"modules/StoryModule.html":{},"injectables/StoryService.html":{},"classes/SuccessResult.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":318,"title":{},"body":{"controllers/DevController.html":{},"miscellaneous/variables.html":{}}}],["parsed",{"_index":1799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["passport",{"_index":1698,"title":{},"body":{"dependencies.html":{}}}],["passport.authenticate(\"local",{"_index":1510,"title":{},"body":{"controllers/UserController.html":{}}}],["password",{"_index":859,"title":{},"body":{"classes/LoginUserDto.html":{},"classes/RegisterUser.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["password?token=${recoverytoken}&email=${email",{"_index":468,"title":{},"body":{"injectables/FireBase.html":{}}}],["password_recovery_tokens",{"_index":1089,"title":{},"body":{"classes/PasswordRecoveryToken.html":{},"interfaces/PasswordRecoveryTokenAttributes.html":{},"classes/User.html":{},"interfaces/UserAttributes.html":{}}}],["passwordrecoverytoken",{"_index":1080,"title":{"classes/PasswordRecoveryToken.html":{}},"body":{"classes/PasswordRecoveryToken.html":{},"interfaces/PasswordRecoveryTokenAttributes.html":{},"classes/User.html":{},"interfaces/UserAttributes.html":{},"coverage.html":{}}}],["passwordrecoverytoken.init",{"_index":1087,"title":{},"body":{"classes/PasswordRecoveryToken.html":{},"interfaces/PasswordRecoveryTokenAttributes.html":{}}}],["passwordrecoverytokenattributes",{"_index":1082,"title":{"interfaces/PasswordRecoveryTokenAttributes.html":{}},"body":{"classes/PasswordRecoveryToken.html":{},"interfaces/PasswordRecoveryTokenAttributes.html":{},"coverage.html":{}}}],["passwordrecoverytokencreationattributes",{"_index":1086,"title":{},"body":{"classes/PasswordRecoveryToken.html":{},"interfaces/PasswordRecoveryTokenAttributes.html":{},"miscellaneous/typealiases.html":{}}}],["path",{"_index":313,"title":{},"body":{"controllers/DevController.html":{},"controllers/FilesController.html":{},"modules/ListingModule.html":{},"modules/LookupsModule.html":{},"injectables/LookupsService.html":{},"modules/StoryModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["path.join(rootdir",{"_index":1032,"title":{},"body":{"injectables/LookupsService.html":{}}}],["pg",{"_index":1705,"title":{},"body":{"dependencies.html":{}}}],["pg.pool",{"_index":1824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pghost",{"_index":1832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pgname",{"_index":1827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pgpass",{"_index":1828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pgpool",{"_index":1658,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["pgport",{"_index":1830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pguser",{"_index":1825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["photourl",{"_index":1388,"title":{},"body":{"classes/User.html":{},"interfaces/UserAttributes.html":{},"classes/UserDto.html":{},"classes/UserSnippetDto.html":{}}}],["picture",{"_index":504,"title":{},"body":{"interfaces/IGoogleProfile.html":{}}}],["pipetransform",{"_index":1605,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["plaintoclass",{"_index":1608,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["plaintoclass(metatype",{"_index":1613,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["port",{"_index":1829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["post",{"_index":408,"title":{},"body":{"controllers/FilesController.html":{},"controllers/ListingController.html":{},"controllers/StoryController.html":{},"controllers/UserController.html":{}}}],["post(\"v1/auth/logout",{"_index":1524,"title":{},"body":{"controllers/UserController.html":{}}}],["post('v1/auth/facebook",{"_index":1424,"title":{},"body":{"controllers/UserController.html":{}}}],["post('v1/auth/forgot",{"_index":1427,"title":{},"body":{"controllers/UserController.html":{}}}],["post('v1/auth/google",{"_index":1449,"title":{},"body":{"controllers/UserController.html":{}}}],["post('v1/auth/login",{"_index":1452,"title":{},"body":{"controllers/UserController.html":{}}}],["post('v1/auth/register",{"_index":1456,"title":{},"body":{"controllers/UserController.html":{}}}],["post('v1/auth/reset",{"_index":1459,"title":{},"body":{"controllers/UserController.html":{}}}],["post('v1/files/:bucket/:type/upload",{"_index":423,"title":{},"body":{"controllers/FilesController.html":{}}}],["post('v1/files/duplicate",{"_index":441,"title":{},"body":{"controllers/FilesController.html":{}}}],["post('v1/listings",{"_index":668,"title":{},"body":{"controllers/ListingController.html":{}}}],["post('v1/listings/:id/reviews",{"_index":694,"title":{},"body":{"controllers/ListingController.html":{}}}],["post('v1/listings/:listingid/followers",{"_index":1545,"title":{},"body":{"controllers/UserController.html":{}}}],["post('v1/listings/search",{"_index":687,"title":{},"body":{"controllers/ListingController.html":{}}}],["post('v1/listings/toggle",{"_index":709,"title":{},"body":{"controllers/ListingController.html":{}}}],["post('v1/stories",{"_index":1220,"title":{},"body":{"controllers/StoryController.html":{}}}],["post('v1/stories/search",{"_index":1229,"title":{},"body":{"controllers/StoryController.html":{}}}],["post('v1/users/:userid/followers",{"_index":1540,"title":{},"body":{"controllers/UserController.html":{}}}],["post('v1/users/:userid/following",{"_index":1543,"title":{},"body":{"controllers/UserController.html":{}}}],["post('v1/users/profile",{"_index":1534,"title":{},"body":{"controllers/UserController.html":{}}}],["post('v1/users/toggle",{"_index":1537,"title":{},"body":{"controllers/UserController.html":{}}}],["postgres://${pguser}:${pgpass}@${pghost}:${pgport}/${pgname",{"_index":1833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["price",{"_index":237,"title":{},"body":{"interfaces/CreateListingDto.html":{},"classes/Listing.html":{},"interfaces/ListingAttributes.html":{},"interfaces/ListingDto.html":{},"controllers/LookupsController.html":{},"injectables/StoryService.html":{}}}],["price_types",{"_index":1101,"title":{},"body":{"classes/PriceType.html":{},"interfaces/PriceTypeAttributes.html":{}}}],["pricetype",{"_index":949,"title":{"classes/PriceType.html":{}},"body":{"injectables/LookupsService.html":{},"classes/PriceType.html":{},"interfaces/PriceTypeAttributes.html":{},"injectables/StoryService.html":{},"coverage.html":{}}}],["pricetype.code",{"_index":986,"title":{},"body":{"injectables/LookupsService.html":{}}}],["pricetype.createdat",{"_index":987,"title":{},"body":{"injectables/LookupsService.html":{}}}],["pricetype.findall",{"_index":982,"title":{},"body":{"injectables/LookupsService.html":{}}}],["pricetype.hasmany(localizedpricetype",{"_index":1102,"title":{},"body":{"classes/PriceType.html":{},"interfaces/PriceTypeAttributes.html":{}}}],["pricetype.id",{"_index":985,"title":{},"body":{"injectables/LookupsService.html":{}}}],["pricetype.init",{"_index":1100,"title":{},"body":{"classes/PriceType.html":{},"interfaces/PriceTypeAttributes.html":{}}}],["pricetype.localized",{"_index":1098,"title":{},"body":{"classes/PriceType.html":{},"interfaces/PriceTypeAttributes.html":{}}}],["pricetype.updatedat",{"_index":988,"title":{},"body":{"injectables/LookupsService.html":{}}}],["pricetypeattributes",{"_index":1091,"title":{"interfaces/PriceTypeAttributes.html":{}},"body":{"classes/PriceType.html":{},"interfaces/PriceTypeAttributes.html":{},"coverage.html":{}}}],["pricetypecreationattributes",{"_index":1099,"title":{},"body":{"classes/PriceType.html":{},"interfaces/PriceTypeAttributes.html":{},"miscellaneous/typealiases.html":{}}}],["pricetypedto",{"_index":897,"title":{"interfaces/PriceTypeDto.html":{}},"body":{"controllers/LookupsController.html":{},"injectables/LookupsService.html":{},"interfaces/PriceTypeDto.html":{},"coverage.html":{}}}],["pricetypeformat",{"_index":722,"title":{},"body":{"interfaces/ListingDto.html":{},"injectables/StoryService.html":{}}}],["pricetypeid",{"_index":238,"title":{},"body":{"interfaces/CreateListingDto.html":{},"classes/Listing.html":{},"interfaces/ListingAttributes.html":{},"interfaces/ListingDto.html":{}}}],["pricetypename",{"_index":723,"title":{},"body":{"interfaces/ListingDto.html":{}}}],["pricetypes",{"_index":981,"title":{},"body":{"injectables/LookupsService.html":{}}}],["primarykey",{"_index":287,"title":{},"body":{"classes/Currency.html":{},"interfaces/CurrencyAttributes.html":{},"classes/Disclaimer.html":{},"interfaces/DisclaimerAttributes.html":{},"classes/HiringType.html":{},"interfaces/HiringTypeAttributes.html":{},"classes/Listing.html":{},"interfaces/ListingAttributes.html":{},"classes/ListingFollower.html":{},"interfaces/ListingFollowerAttributes.html":{},"classes/ListingReview.html":{},"interfaces/ListingReviewAttributes.html":{},"classes/ListingType.html":{},"interfaces/ListingTypeAttributes.html":{},"classes/LocalizedCurrency.html":{},"interfaces/LocalizedCurrencyAttributes.html":{},"classes/LocalizedDisclaimer.html":{},"interfaces/LocalizedDisclaimerAttributes.html":{},"classes/LocalizedHiringType.html":{},"interfaces/LocalizedHiringTypeAttributes.html":{},"classes/LocalizedListingType.html":{},"interfaces/LocalizedListingTypeAttributes.html":{},"classes/LocalizedPriceType.html":{},"interfaces/LocalizedPriceTypeAttributes.html":{},"classes/PasswordRecoveryToken.html":{},"interfaces/PasswordRecoveryTokenAttributes.html":{},"classes/PriceType.html":{},"interfaces/PriceTypeAttributes.html":{},"classes/Story.html":{},"interfaces/StoryAttributes.html":{},"classes/User.html":{},"interfaces/UserAttributes.html":{},"classes/UserFollower.html":{},"interfaces/UserFollowerAttributes.html":{}}}],["prisma",{"_index":1709,"title":{},"body":{"dependencies.html":{}}}],["prisma.service",{"_index":215,"title":{},"body":{"modules/CoreModule.html":{}}}],["prisma/client",{"_index":1110,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["prismaclient",{"_index":1105,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismaservice",{"_index":210,"title":{"injectables/PrismaService.html":{}},"body":{"modules/CoreModule.html":{},"injectables/PrismaService.html":{},"coverage.html":{},"overview.html":{}}}],["privacy",{"_index":239,"title":{},"body":{"interfaces/CreateListingDto.html":{},"interfaces/CreateStoryDto.html":{},"classes/Listing.html":{},"interfaces/ListingAttributes.html":{},"interfaces/ListingDto.html":{},"classes/Story.html":{},"interfaces/StoryAttributes.html":{},"interfaces/StoryDto.html":{},"injectables/StoryService.html":{}}}],["private",{"_index":1277,"title":{},"body":{"injectables/StoryService.html":{},"injectables/ValidationPipe.html":{}}}],["process.env.node_env",{"_index":1801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":1747,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["products",{"_index":282,"title":{},"body":{"classes/Currency.html":{},"interfaces/CurrencyAttributes.html":{},"classes/Disclaimer.html":{},"interfaces/DisclaimerAttributes.html":{},"classes/HiringType.html":{},"interfaces/HiringTypeAttributes.html":{},"classes/ListingType.html":{},"interfaces/ListingTypeAttributes.html":{},"classes/PriceType.html":{},"interfaces/PriceTypeAttributes.html":{}}}],["productscount",{"_index":1549,"title":{},"body":{"classes/UserDto.html":{}}}],["profile",{"_index":1444,"title":{},"body":{"controllers/UserController.html":{}}}],["promise",{"_index":42,"title":{},"body":{"classes/AppCache.html":{},"controllers/CacheController.html":{},"classes/CacheObject.html":{},"controllers/DevController.html":{},"controllers/FilesController.html":{},"controllers/ListingController.html":{},"controllers/LookupsController.html":{},"injectables/LookupsService.html":{},"controllers/StoryController.html":{},"injectables/StoryService.html":{},"controllers/UserController.html":{}}}],["prop",{"_index":1622,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["properties",{"_index":8,"title":{},"body":{"classes/AppCache.html":{},"classes/CacheObject.html":{},"interfaces/CreateListingDto.html":{},"interfaces/CreateStoryDto.html":{},"classes/Currency.html":{},"interfaces/CurrencyAttributes.html":{},"interfaces/CurrencyDto.html":{},"classes/Disclaimer.html":{},"interfaces/DisclaimerAttributes.html":{},"interfaces/DisclaimerDto.html":{},"classes/ErrorCodes.html":{},"classes/ErrorResult.html":{},"classes/HiringType.html":{},"interfaces/HiringTypeAttributes.html":{},"interfaces/HiringTypeDto.html":{},"interfaces/IGoogleProfile.html":{},"classes/KeyValuePair.html":{},"classes/Listing.html":{},"interfaces/ListingAttributes.html":{},"interfaces/ListingDto.html":{},"classes/ListingFollower.html":{},"interfaces/ListingFollowerAttributes.html":{},"classes/ListingReview.html":{},"interfaces/ListingReviewAttributes.html":{},"interfaces/ListingReviewDto.html":{},"interfaces/ListingReviewDto-1.html":{},"classes/ListingType.html":{},"interfaces/ListingTypeAttributes.html":{},"interfaces/ListingTypeDto.html":{},"classes/LocalizedCurrency.html":{},"interfaces/LocalizedCurrencyAttributes.html":{},"classes/LocalizedDisclaimer.html":{},"interfaces/LocalizedDisclaimerAttributes.html":{},"classes/LocalizedHiringType.html":{},"interfaces/LocalizedHiringTypeAttributes.html":{},"classes/LocalizedListingType.html":{},"interfaces/LocalizedListingTypeAttributes.html":{},"classes/LocalizedPriceType.html":{},"interfaces/LocalizedPriceTypeAttributes.html":{},"classes/LoginUserDto.html":{},"classes/NoDataResult.html":{},"classes/NotFoundResult.html":{},"classes/OperationResult.html":{},"classes/PasswordRecoveryToken.html":{},"interfaces/PasswordRecoveryTokenAttributes.html":{},"classes/PriceType.html":{},"interfaces/PriceTypeAttributes.html":{},"interfaces/PriceTypeDto.html":{},"classes/RegisterUser.html":{},"interfaces/ResetPassword.html":{},"classes/Result.html":{},"classes/SearchListingDto.html":{},"classes/SearchResultDto.html":{},"classes/SearchStoryDto.html":{},"classes/Story.html":{},"interfaces/StoryAttributes.html":{},"interfaces/StoryDto.html":{},"classes/SuccessResult.html":{},"interfaces/ToggleListingFollowDto.html":{},"classes/ToggleUserFollowDto.html":{},"classes/User.html":{},"interfaces/UserAttributes.html":{},"classes/UserDto.html":{},"classes/UserFollower.html":{},"interfaces/UserFollowerAttributes.html":{},"classes/UserSnippetDto.html":{}}}],["protected",{"_index":1812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":617,"title":{},"body":{"controllers/ListingController.html":{},"controllers/StoryController.html":{}}}],["providers",{"_index":99,"title":{},"body":{"modules/AppLoggerModule.html":{},"modules/ApplicationModule.html":{},"modules/CoreModule.html":{},"modules/DevModule.html":{},"modules/ListingModule.html":{},"modules/LookupsModule.html":{},"modules/StoryModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["public",{"_index":51,"title":{},"body":{"classes/AppCache.html":{},"classes/CacheObject.html":{},"modules/CoreModule.html":{},"classes/Currency.html":{},"interfaces/CurrencyAttributes.html":{},"modules/DevModule.html":{},"classes/Disclaimer.html":{},"interfaces/DisclaimerAttributes.html":{},"classes/ErrorCodes.html":{},"classes/ErrorResult.html":{},"injectables/FireBase.html":{},"classes/HiringType.html":{},"interfaces/HiringTypeAttributes.html":{},"classes/KeyValuePair.html":{},"classes/Listing.html":{},"interfaces/ListingAttributes.html":{},"classes/ListingFollower.html":{},"interfaces/ListingFollowerAttributes.html":{},"modules/ListingModule.html":{},"classes/ListingReview.html":{},"interfaces/ListingReviewAttributes.html":{},"classes/ListingType.html":{},"interfaces/ListingTypeAttributes.html":{},"classes/LocalizedCurrency.html":{},"interfaces/LocalizedCurrencyAttributes.html":{},"classes/LocalizedDisclaimer.html":{},"interfaces/LocalizedDisclaimerAttributes.html":{},"classes/LocalizedHiringType.html":{},"interfaces/LocalizedHiringTypeAttributes.html":{},"classes/LocalizedListingType.html":{},"interfaces/LocalizedListingTypeAttributes.html":{},"classes/LocalizedPriceType.html":{},"interfaces/LocalizedPriceTypeAttributes.html":{},"modules/LookupsModule.html":{},"injectables/LookupsService.html":{},"injectables/MailManager.html":{},"classes/NoDataResult.html":{},"classes/NotFoundResult.html":{},"classes/OperationResult.html":{},"classes/PasswordRecoveryToken.html":{},"interfaces/PasswordRecoveryTokenAttributes.html":{},"classes/PriceType.html":{},"interfaces/PriceTypeAttributes.html":{},"classes/Result.html":{},"classes/SearchResultDto.html":{},"classes/Story.html":{},"interfaces/StoryAttributes.html":{},"modules/StoryModule.html":{},"injectables/StoryService.html":{},"classes/SuccessResult.html":{},"classes/User.html":{},"interfaces/UserAttributes.html":{},"classes/UserFollower.html":{},"interfaces/UserFollowerAttributes.html":{},"modules/UserModule.html":{}}}],["published",{"_index":368,"title":{},"body":{"classes/ErrorCodes.html":{},"miscellaneous/enumerations.html":{}}}],["published,2",{"_index":1177,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryAttributes.html":{}}}],["put",{"_index":647,"title":{},"body":{"controllers/ListingController.html":{},"controllers/StoryController.html":{}}}],["put('v1/listings/:id",{"_index":680,"title":{},"body":{"controllers/ListingController.html":{}}}],["put('v1/stories/:id",{"_index":1224,"title":{},"body":{"controllers/StoryController.html":{}}}],["query",{"_index":649,"title":{},"body":{"controllers/ListingController.html":{},"controllers/UserController.html":{}}}],["query('pageindex",{"_index":701,"title":{},"body":{"controllers/ListingController.html":{},"controllers/UserController.html":{}}}],["query('pagesize",{"_index":702,"title":{},"body":{"controllers/ListingController.html":{},"controllers/UserController.html":{}}}],["ratings",{"_index":1353,"title":{},"body":{"injectables/StoryService.html":{}}}],["readonly",{"_index":158,"title":{},"body":{"injectables/AuthMiddleware.html":{},"classes/Currency.html":{},"interfaces/CurrencyAttributes.html":{},"controllers/DevController.html":{},"classes/Disclaimer.html":{},"interfaces/DisclaimerAttributes.html":{},"classes/HiringType.html":{},"interfaces/HiringTypeAttributes.html":{},"classes/Listing.html":{},"interfaces/ListingAttributes.html":{},"controllers/ListingController.html":{},"classes/ListingFollower.html":{},"interfaces/ListingFollowerAttributes.html":{},"classes/ListingReview.html":{},"interfaces/ListingReviewAttributes.html":{},"classes/ListingType.html":{},"interfaces/ListingTypeAttributes.html":{},"classes/LocalizedCurrency.html":{},"interfaces/LocalizedCurrencyAttributes.html":{},"classes/LocalizedDisclaimer.html":{},"interfaces/LocalizedDisclaimerAttributes.html":{},"classes/LocalizedHiringType.html":{},"interfaces/LocalizedHiringTypeAttributes.html":{},"classes/LocalizedListingType.html":{},"interfaces/LocalizedListingTypeAttributes.html":{},"classes/LocalizedPriceType.html":{},"interfaces/LocalizedPriceTypeAttributes.html":{},"controllers/LookupsController.html":{},"classes/PriceType.html":{},"interfaces/PriceTypeAttributes.html":{},"classes/Story.html":{},"interfaces/StoryAttributes.html":{},"controllers/StoryController.html":{},"classes/User.html":{},"interfaces/UserAttributes.html":{},"controllers/UserController.html":{},"classes/UserFollower.html":{},"interfaces/UserFollowerAttributes.html":{}}}],["record",{"_index":629,"title":{},"body":{"controllers/ListingController.html":{},"controllers/UserController.html":{}}}],["recovery",{"_index":1054,"title":{},"body":{"injectables/MailManager.html":{},"controllers/UserController.html":{}}}],["recoveryemailtemplate",{"_index":1058,"title":{},"body":{"injectables/MailManager.html":{}}}],["recoverylink",{"_index":1050,"title":{},"body":{"injectables/MailManager.html":{}}}],["recoverytoken",{"_index":457,"title":{},"body":{"injectables/FireBase.html":{}}}],["refid",{"_index":296,"title":{},"body":{"classes/Currency.html":{},"interfaces/CurrencyAttributes.html":{},"classes/Disclaimer.html":{},"interfaces/DisclaimerAttributes.html":{},"classes/HiringType.html":{},"interfaces/HiringTypeAttributes.html":{},"classes/ListingType.html":{},"interfaces/ListingTypeAttributes.html":{},"classes/LocalizedCurrency.html":{},"interfaces/LocalizedCurrencyAttributes.html":{},"classes/LocalizedDisclaimer.html":{},"interfaces/LocalizedDisclaimerAttributes.html":{},"classes/LocalizedHiringType.html":{},"interfaces/LocalizedHiringTypeAttributes.html":{},"classes/LocalizedListingType.html":{},"interfaces/LocalizedListingTypeAttributes.html":{},"classes/LocalizedPriceType.html":{},"interfaces/LocalizedPriceTypeAttributes.html":{},"injectables/LookupsService.html":{},"classes/PriceType.html":{},"interfaces/PriceTypeAttributes.html":{}}}],["reflect",{"_index":1710,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":1420,"title":{},"body":{"controllers/UserController.html":{}}}],["register(@req",{"_index":1482,"title":{},"body":{"controllers/UserController.html":{}}}],["register(req",{"_index":1455,"title":{},"body":{"controllers/UserController.html":{}}}],["registeruser",{"_index":1113,"title":{"classes/RegisterUser.html":{}},"body":{"classes/RegisterUser.html":{},"coverage.html":{}}}],["replace('{{recoverylink",{"_index":1060,"title":{},"body":{"injectables/MailManager.html":{}}}],["replace('{{year",{"_index":1061,"title":{},"body":{"injectables/MailManager.html":{}}}],["req",{"_index":140,"title":{},"body":{"injectables/AuthMiddleware.html":{},"controllers/DevController.html":{},"controllers/FilesController.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["req.headers.authorization",{"_index":160,"title":{},"body":{"injectables/AuthMiddleware.html":{},"miscellaneous/variables.html":{}}}],["req.isauthenticated",{"_index":324,"title":{},"body":{"controllers/DevController.html":{},"controllers/UserController.html":{}}}],["req.login(result.data",{"_index":1493,"title":{},"body":{"controllers/UserController.html":{}}}],["req.login(user",{"_index":1514,"title":{},"body":{"controllers/UserController.html":{}}}],["req.logout",{"_index":1527,"title":{},"body":{"controllers/UserController.html":{}}}],["req.user",{"_index":172,"title":{},"body":{"injectables/AuthMiddleware.html":{},"controllers/DevController.html":{},"miscellaneous/variables.html":{}}}],["req.user[data",{"_index":1814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request",{"_index":134,"title":{},"body":{"injectables/AuthMiddleware.html":{},"controllers/DevController.html":{},"controllers/FilesController.html":{},"controllers/UserController.html":{}}}],["requestmethod",{"_index":333,"title":{},"body":{"modules/DevModule.html":{},"modules/ListingModule.html":{},"modules/LookupsModule.html":{},"modules/StoryModule.html":{},"modules/UserModule.html":{}}}],["requestmethod.delete",{"_index":754,"title":{},"body":{"modules/ListingModule.html":{},"modules/LookupsModule.html":{},"modules/StoryModule.html":{}}}],["requestmethod.get",{"_index":752,"title":{},"body":{"modules/ListingModule.html":{},"modules/StoryModule.html":{},"modules/UserModule.html":{}}}],["requestmethod.post",{"_index":749,"title":{},"body":{"modules/ListingModule.html":{},"modules/LookupsModule.html":{},"modules/StoryModule.html":{}}}],["requestmethod.put",{"_index":751,"title":{},"body":{"modules/ListingModule.html":{},"modules/StoryModule.html":{}}}],["res",{"_index":309,"title":{},"body":{"controllers/DevController.html":{},"controllers/FilesController.html":{},"controllers/UserController.html":{},"miscellaneous/functions.html":{}}}],["res.send",{"_index":1489,"title":{},"body":{"controllers/UserController.html":{}}}],["res.send((result.data",{"_index":1521,"title":{},"body":{"controllers/UserController.html":{}}}],["res.status(httpstatus.bad_request).end",{"_index":1526,"title":{},"body":{"controllers/UserController.html":{}}}],["res.status(httpstatus.not_found).end",{"_index":1498,"title":{},"body":{"controllers/UserController.html":{}}}],["res.status(httpstatus.ok).end",{"_index":1528,"title":{},"body":{"controllers/UserController.html":{}}}],["res.status(httpstatus.unauthorized).send",{"_index":1511,"title":{},"body":{"controllers/UserController.html":{}}}],["reset",{"_index":105,"title":{},"body":{"modules/AppLoggerModule.html":{},"modules/ApplicationModule.html":{},"modules/CoreModule.html":{},"modules/DevModule.html":{},"modules/ListingModule.html":{},"modules/LookupsModule.html":{},"modules/StoryModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["resetpassword",{"_index":1123,"title":{"interfaces/ResetPassword.html":{}},"body":{"interfaces/ResetPassword.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["resetpassword(@req",{"_index":1501,"title":{},"body":{"controllers/UserController.html":{}}}],["resetpassword(req",{"_index":1458,"title":{},"body":{"controllers/UserController.html":{}}}],["response",{"_index":136,"title":{},"body":{"injectables/AuthMiddleware.html":{},"controllers/DevController.html":{},"controllers/FilesController.html":{},"controllers/UserController.html":{}}}],["result",{"_index":67,"title":{"classes/Result.html":{}},"body":{"classes/AppCache.html":{},"injectables/AppLogger.html":{},"modules/AppLoggerModule.html":{},"modules/ApplicationModule.html":{},"injectables/AuthMiddleware.html":{},"controllers/CacheController.html":{},"classes/CacheObject.html":{},"modules/CoreModule.html":{},"interfaces/CreateListingDto.html":{},"interfaces/CreateStoryDto.html":{},"classes/Currency.html":{},"interfaces/CurrencyAttributes.html":{},"interfaces/CurrencyDto.html":{},"controllers/DevController.html":{},"modules/DevModule.html":{},"classes/Disclaimer.html":{},"interfaces/DisclaimerAttributes.html":{},"interfaces/DisclaimerDto.html":{},"classes/ErrorCodes.html":{},"classes/ErrorResult.html":{},"controllers/FilesController.html":{},"injectables/FireBase.html":{},"classes/HiringType.html":{},"interfaces/HiringTypeAttributes.html":{},"interfaces/HiringTypeDto.html":{},"interfaces/IGoogleProfile.html":{},"classes/KeyValuePair.html":{},"classes/Listing.html":{},"interfaces/ListingAttributes.html":{},"controllers/ListingController.html":{},"interfaces/ListingDto.html":{},"classes/ListingFollower.html":{},"interfaces/ListingFollowerAttributes.html":{},"modules/ListingModule.html":{},"classes/ListingReview.html":{},"interfaces/ListingReviewAttributes.html":{},"interfaces/ListingReviewDto.html":{},"interfaces/ListingReviewDto-1.html":{},"classes/ListingType.html":{},"interfaces/ListingTypeAttributes.html":{},"interfaces/ListingTypeDto.html":{},"classes/LocalizedCurrency.html":{},"interfaces/LocalizedCurrencyAttributes.html":{},"classes/LocalizedDisclaimer.html":{},"interfaces/LocalizedDisclaimerAttributes.html":{},"classes/LocalizedHiringType.html":{},"interfaces/LocalizedHiringTypeAttributes.html":{},"classes/LocalizedListingType.html":{},"interfaces/LocalizedListingTypeAttributes.html":{},"classes/LocalizedPriceType.html":{},"interfaces/LocalizedPriceTypeAttributes.html":{},"classes/LoginUserDto.html":{},"controllers/LookupsController.html":{},"modules/LookupsModule.html":{},"injectables/LookupsService.html":{},"injectables/MailManager.html":{},"classes/NoDataResult.html":{},"classes/NotFoundResult.html":{},"classes/OperationResult.html":{},"classes/PasswordRecoveryToken.html":{},"interfaces/PasswordRecoveryTokenAttributes.html":{},"classes/PriceType.html":{},"interfaces/PriceTypeAttributes.html":{},"interfaces/PriceTypeDto.html":{},"injectables/PrismaService.html":{},"classes/RegisterUser.html":{},"interfaces/ResetPassword.html":{},"classes/Result.html":{},"classes/SearchListingDto.html":{},"classes/SearchResultDto.html":{},"classes/SearchStoryDto.html":{},"classes/Story.html":{},"interfaces/StoryAttributes.html":{},"controllers/StoryController.html":{},"interfaces/StoryDto.html":{},"modules/StoryModule.html":{},"injectables/StoryService.html":{},"classes/SuccessResult.html":{},"interfaces/ToggleListingFollowDto.html":{},"classes/ToggleUserFollowDto.html":{},"classes/User.html":{},"interfaces/UserAttributes.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserFollower.html":{},"interfaces/UserFollowerAttributes.html":{},"modules/UserModule.html":{},"classes/UserSnippetDto.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result'})@delete('v1/listings/:id",{"_index":591,"title":{},"body":{"controllers/ListingController.html":{}}}],["result'})@delete('v1/listings/:listingid/reviews/:reviewid",{"_index":596,"title":{},"body":{"controllers/ListingController.html":{}}}],["result'})@delete('v1/stories/:id",{"_index":1197,"title":{},"body":{"controllers/StoryController.html":{}}}],["result.code",{"_index":1296,"title":{},"body":{"injectables/StoryService.html":{}}}],["result.count",{"_index":1314,"title":{},"body":{"injectables/StoryService.html":{}}}],["result.data",{"_index":1495,"title":{},"body":{"controllers/UserController.html":{}}}],["result.data.email",{"_index":1492,"title":{},"body":{"controllers/UserController.html":{}}}],["result.data.id",{"_index":1490,"title":{},"body":{"controllers/UserController.html":{}}}],["result.data.name",{"_index":1491,"title":{},"body":{"controllers/UserController.html":{}}}],["result.data.push(story",{"_index":1331,"title":{},"body":{"injectables/StoryService.html":{}}}],["result.error",{"_index":1486,"title":{},"body":{"controllers/UserController.html":{}}}],["result.message",{"_index":1302,"title":{},"body":{"injectables/StoryService.html":{}}}],["result.push(type",{"_index":978,"title":{},"body":{"injectables/LookupsService.html":{}}}],["result.status",{"_index":1484,"title":{},"body":{"controllers/UserController.html":{}}}],["result.success",{"_index":1295,"title":{},"body":{"injectables/StoryService.html":{}}}],["result:6",{"_index":378,"title":{},"body":{"classes/ErrorResult.html":{},"classes/NoDataResult.html":{},"classes/NotFoundResult.html":{},"classes/SuccessResult.html":{}}}],["result:7",{"_index":377,"title":{},"body":{"classes/ErrorResult.html":{},"classes/NoDataResult.html":{},"classes/NotFoundResult.html":{},"classes/SuccessResult.html":{}}}],["result:8",{"_index":376,"title":{},"body":{"classes/ErrorResult.html":{},"classes/NoDataResult.html":{},"classes/NotFoundResult.html":{},"classes/SuccessResult.html":{}}}],["result[prop",{"_index":1625,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["results",{"_index":69,"title":{},"body":{"classes/AppCache.html":{},"injectables/AppLogger.html":{},"modules/AppLoggerModule.html":{},"modules/ApplicationModule.html":{},"injectables/AuthMiddleware.html":{},"controllers/CacheController.html":{},"classes/CacheObject.html":{},"modules/CoreModule.html":{},"interfaces/CreateListingDto.html":{},"interfaces/CreateStoryDto.html":{},"classes/Currency.html":{},"interfaces/CurrencyAttributes.html":{},"interfaces/CurrencyDto.html":{},"controllers/DevController.html":{},"modules/DevModule.html":{},"classes/Disclaimer.html":{},"interfaces/DisclaimerAttributes.html":{},"interfaces/DisclaimerDto.html":{},"classes/ErrorCodes.html":{},"classes/ErrorResult.html":{},"controllers/FilesController.html":{},"injectables/FireBase.html":{},"classes/HiringType.html":{},"interfaces/HiringTypeAttributes.html":{},"interfaces/HiringTypeDto.html":{},"interfaces/IGoogleProfile.html":{},"classes/KeyValuePair.html":{},"classes/Listing.html":{},"interfaces/ListingAttributes.html":{},"controllers/ListingController.html":{},"interfaces/ListingDto.html":{},"classes/ListingFollower.html":{},"interfaces/ListingFollowerAttributes.html":{},"modules/ListingModule.html":{},"classes/ListingReview.html":{},"interfaces/ListingReviewAttributes.html":{},"interfaces/ListingReviewDto.html":{},"interfaces/ListingReviewDto-1.html":{},"classes/ListingType.html":{},"interfaces/ListingTypeAttributes.html":{},"interfaces/ListingTypeDto.html":{},"classes/LocalizedCurrency.html":{},"interfaces/LocalizedCurrencyAttributes.html":{},"classes/LocalizedDisclaimer.html":{},"interfaces/LocalizedDisclaimerAttributes.html":{},"classes/LocalizedHiringType.html":{},"interfaces/LocalizedHiringTypeAttributes.html":{},"classes/LocalizedListingType.html":{},"interfaces/LocalizedListingTypeAttributes.html":{},"classes/LocalizedPriceType.html":{},"interfaces/LocalizedPriceTypeAttributes.html":{},"classes/LoginUserDto.html":{},"controllers/LookupsController.html":{},"modules/LookupsModule.html":{},"injectables/LookupsService.html":{},"injectables/MailManager.html":{},"classes/NoDataResult.html":{},"classes/NotFoundResult.html":{},"classes/OperationResult.html":{},"classes/PasswordRecoveryToken.html":{},"interfaces/PasswordRecoveryTokenAttributes.html":{},"classes/PriceType.html":{},"interfaces/PriceTypeAttributes.html":{},"interfaces/PriceTypeDto.html":{},"injectables/PrismaService.html":{},"classes/RegisterUser.html":{},"interfaces/ResetPassword.html":{},"classes/Result.html":{},"classes/SearchListingDto.html":{},"classes/SearchResultDto.html":{},"classes/SearchStoryDto.html":{},"classes/Story.html":{},"interfaces/StoryAttributes.html":{},"controllers/StoryController.html":{},"interfaces/StoryDto.html":{},"modules/StoryModule.html":{},"injectables/StoryService.html":{},"classes/SuccessResult.html":{},"interfaces/ToggleListingFollowDto.html":{},"classes/ToggleUserFollowDto.html":{},"classes/User.html":{},"interfaces/UserAttributes.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserFollower.html":{},"interfaces/UserFollowerAttributes.html":{},"modules/UserModule.html":{},"classes/UserSnippetDto.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":55,"title":{},"body":{"classes/AppCache.html":{},"controllers/CacheController.html":{},"classes/CacheObject.html":{},"controllers/DevController.html":{},"controllers/FilesController.html":{},"injectables/FireBase.html":{},"controllers/ListingController.html":{},"controllers/LookupsController.html":{},"injectables/LookupsService.html":{},"injectables/MailManager.html":{},"controllers/StoryController.html":{},"injectables/StoryService.html":{},"controllers/UserController.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":32,"title":{},"body":{"classes/AppCache.html":{},"injectables/AppLogger.html":{},"injectables/AuthMiddleware.html":{},"controllers/CacheController.html":{},"modules/CoreModule.html":{},"controllers/DevController.html":{},"modules/DevModule.html":{},"controllers/FilesController.html":{},"injectables/FireBase.html":{},"controllers/ListingController.html":{},"modules/ListingModule.html":{},"controllers/LookupsController.html":{},"modules/LookupsModule.html":{},"injectables/LookupsService.html":{},"injectables/MailManager.html":{},"injectables/PrismaService.html":{},"controllers/StoryController.html":{},"modules/StoryModule.html":{},"injectables/StoryService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/ValidationPipe.html":{}}}],["review",{"_index":595,"title":{},"body":{"controllers/ListingController.html":{}}}],["review'})@apiresponse({status",{"_index":643,"title":{},"body":{"controllers/ListingController.html":{}}}],["reviewid",{"_index":594,"title":{},"body":{"controllers/ListingController.html":{}}}],["reviews",{"_index":609,"title":{},"body":{"controllers/ListingController.html":{}}}],["reviewscount",{"_index":724,"title":{},"body":{"interfaces/ListingDto.html":{},"injectables/StoryService.html":{}}}],["reviewtext",{"_index":759,"title":{},"body":{"classes/ListingReview.html":{},"interfaces/ListingReviewAttributes.html":{},"interfaces/ListingReviewDto.html":{},"interfaces/ListingReviewDto-1.html":{}}}],["rimraf",{"_index":1712,"title":{},"body":{"dependencies.html":{}}}],["root",{"_index":312,"title":{},"body":{"controllers/DevController.html":{},"dependencies.html":{}}}],["rootdir",{"_index":958,"title":{},"body":{"injectables/LookupsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["route",{"_index":1811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["run",{"_index":1742,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":1714,"title":{},"body":{"dependencies.html":{}}}],["s').todate",{"_index":61,"title":{},"body":{"classes/AppCache.html":{},"classes/CacheObject.html":{}}}],["s.ownerid",{"_index":1325,"title":{},"body":{"injectables/StoryService.html":{}}}],["savefile",{"_index":930,"title":{},"body":{"injectables/LookupsService.html":{}}}],["savefile(bucket",{"_index":944,"title":{},"body":{"injectables/LookupsService.html":{}}}],["scope",{"_index":81,"title":{},"body":{"injectables/AppLogger.html":{}}}],["scope.transient",{"_index":88,"title":{},"body":{"injectables/AppLogger.html":{}}}],["searches",{"_index":615,"title":{},"body":{"controllers/ListingController.html":{},"controllers/StoryController.html":{}}}],["searchlistingdto",{"_index":614,"title":{"classes/SearchListingDto.html":{}},"body":{"controllers/ListingController.html":{},"classes/SearchListingDto.html":{},"coverage.html":{}}}],["searchlistingdto'})@post('v1/listings/search",{"_index":622,"title":{},"body":{"controllers/ListingController.html":{}}}],["searchlistings",{"_index":571,"title":{},"body":{"controllers/ListingController.html":{}}}],["searchlistings(userid",{"_index":612,"title":{},"body":{"controllers/ListingController.html":{}}}],["searchmodel",{"_index":613,"title":{},"body":{"controllers/ListingController.html":{},"controllers/StoryController.html":{},"injectables/StoryService.html":{}}}],["searchmodel.listingid",{"_index":1305,"title":{},"body":{"injectables/StoryService.html":{}}}],["searchmodel.ownerid",{"_index":1303,"title":{},"body":{"injectables/StoryService.html":{}}}],["searchmodel.pageindex",{"_index":1311,"title":{},"body":{"injectables/StoryService.html":{}}}],["searchmodel.pagesize",{"_index":1312,"title":{},"body":{"injectables/StoryService.html":{}}}],["searchmodel.status",{"_index":1307,"title":{},"body":{"injectables/StoryService.html":{}}}],["searchresultdto",{"_index":1145,"title":{"classes/SearchResultDto.html":{}},"body":{"classes/SearchResultDto.html":{},"injectables/StoryService.html":{},"coverage.html":{}}}],["searchstories",{"_index":1188,"title":{},"body":{"controllers/StoryController.html":{},"injectables/StoryService.html":{}}}],["searchstories(searchmodel",{"_index":1267,"title":{},"body":{"injectables/StoryService.html":{}}}],["searchstories(userid",{"_index":1206,"title":{},"body":{"controllers/StoryController.html":{}}}],["searchstorydto",{"_index":1150,"title":{"classes/SearchStoryDto.html":{}},"body":{"classes/SearchStoryDto.html":{},"controllers/StoryController.html":{},"injectables/StoryService.html":{},"coverage.html":{}}}],["searchstorydto'})@post('v1/stories/search",{"_index":1208,"title":{},"body":{"controllers/StoryController.html":{}}}],["seconds",{"_index":36,"title":{},"body":{"classes/AppCache.html":{},"classes/CacheObject.html":{}}}],["send",{"_index":1519,"title":{},"body":{"controllers/UserController.html":{}}}],["send(getstatustext(statuscodes.not_found",{"_index":326,"title":{},"body":{"controllers/DevController.html":{}}}],["sendgrid/mail",{"_index":1056,"title":{},"body":{"injectables/MailManager.html":{},"dependencies.html":{}}}],["sendnotification",{"_index":1663,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["sendnotification(email",{"_index":1731,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sendrecoverylink",{"_index":1047,"title":{},"body":{"injectables/MailManager.html":{}}}],["sendrecoverylink(email",{"_index":1049,"title":{},"body":{"injectables/MailManager.html":{}}}],["sendwelcomenotification",{"_index":1664,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["sendwelcomenotification(email",{"_index":1733,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sent",{"_index":1499,"title":{},"body":{"controllers/UserController.html":{}}}],["sequelize",{"_index":278,"title":{},"body":{"classes/Currency.html":{},"interfaces/CurrencyAttributes.html":{},"controllers/DevController.html":{},"classes/Disclaimer.html":{},"interfaces/DisclaimerAttributes.html":{},"classes/HiringType.html":{},"interfaces/HiringTypeAttributes.html":{},"classes/Listing.html":{},"interfaces/ListingAttributes.html":{},"classes/ListingFollower.html":{},"interfaces/ListingFollowerAttributes.html":{},"classes/ListingReview.html":{},"interfaces/ListingReviewAttributes.html":{},"classes/ListingType.html":{},"interfaces/ListingTypeAttributes.html":{},"classes/LocalizedCurrency.html":{},"interfaces/LocalizedCurrencyAttributes.html":{},"classes/LocalizedDisclaimer.html":{},"interfaces/LocalizedDisclaimerAttributes.html":{},"classes/LocalizedHiringType.html":{},"interfaces/LocalizedHiringTypeAttributes.html":{},"classes/LocalizedListingType.html":{},"interfaces/LocalizedListingTypeAttributes.html":{},"classes/LocalizedPriceType.html":{},"interfaces/LocalizedPriceTypeAttributes.html":{},"classes/PasswordRecoveryToken.html":{},"interfaces/PasswordRecoveryTokenAttributes.html":{},"classes/PriceType.html":{},"interfaces/PriceTypeAttributes.html":{},"classes/Story.html":{},"interfaces/StoryAttributes.html":{},"classes/User.html":{},"interfaces/UserAttributes.html":{},"classes/UserFollower.html":{},"interfaces/UserFollowerAttributes.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["sequelize.getqueryinterface",{"_index":319,"title":{},"body":{"controllers/DevController.html":{},"miscellaneous/variables.html":{}}}],["set",{"_index":1813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sgmail",{"_index":1055,"title":{},"body":{"injectables/MailManager.html":{}}}],["sgmail.send",{"_index":1063,"title":{},"body":{"injectables/MailManager.html":{}}}],["sgmail.setapikey(process.env.sendgrid_api_key",{"_index":1057,"title":{},"body":{"injectables/MailManager.html":{}}}],["shared/applogger/applogger.module",{"_index":123,"title":{},"body":{"modules/ApplicationModule.html":{},"modules/ListingModule.html":{},"modules/StoryModule.html":{}}}],["shared/constants",{"_index":1273,"title":{},"body":{"injectables/StoryService.html":{}}}],["shared/core/cache",{"_index":189,"title":{},"body":{"controllers/CacheController.html":{},"injectables/LookupsService.html":{}}}],["shared/core/core.module",{"_index":335,"title":{},"body":{"modules/DevModule.html":{},"modules/ListingModule.html":{},"modules/LookupsModule.html":{},"modules/StoryModule.html":{},"modules/UserModule.html":{}}}],["shared/core/database",{"_index":279,"title":{},"body":{"classes/Currency.html":{},"interfaces/CurrencyAttributes.html":{},"controllers/DevController.html":{},"classes/Disclaimer.html":{},"interfaces/DisclaimerAttributes.html":{},"classes/HiringType.html":{},"interfaces/HiringTypeAttributes.html":{},"classes/Listing.html":{},"interfaces/ListingAttributes.html":{},"classes/ListingFollower.html":{},"interfaces/ListingFollowerAttributes.html":{},"classes/ListingReview.html":{},"interfaces/ListingReviewAttributes.html":{},"classes/ListingType.html":{},"interfaces/ListingTypeAttributes.html":{},"classes/LocalizedCurrency.html":{},"interfaces/LocalizedCurrencyAttributes.html":{},"classes/LocalizedDisclaimer.html":{},"interfaces/LocalizedDisclaimerAttributes.html":{},"classes/LocalizedHiringType.html":{},"interfaces/LocalizedHiringTypeAttributes.html":{},"classes/LocalizedListingType.html":{},"interfaces/LocalizedListingTypeAttributes.html":{},"classes/LocalizedPriceType.html":{},"interfaces/LocalizedPriceTypeAttributes.html":{},"classes/PasswordRecoveryToken.html":{},"interfaces/PasswordRecoveryTokenAttributes.html":{},"classes/PriceType.html":{},"interfaces/PriceTypeAttributes.html":{},"classes/Story.html":{},"interfaces/StoryAttributes.html":{},"classes/User.html":{},"interfaces/UserAttributes.html":{},"classes/UserFollower.html":{},"interfaces/UserFollowerAttributes.html":{}}}],["shared/core/environment",{"_index":85,"title":{},"body":{"injectables/AppLogger.html":{},"injectables/AuthMiddleware.html":{},"controllers/FilesController.html":{},"injectables/LookupsService.html":{}}}],["shared/models/operationresult",{"_index":665,"title":{},"body":{"controllers/ListingController.html":{},"injectables/StoryService.html":{},"controllers/UserController.html":{}}}],["shared/models/searchresultdto",{"_index":1274,"title":{},"body":{"injectables/StoryService.html":{}}}],["sociallinks",{"_index":240,"title":{},"body":{"interfaces/CreateListingDto.html":{},"classes/Listing.html":{},"interfaces/ListingAttributes.html":{},"interfaces/ListingDto.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AppCache.html":{},"injectables/AppLogger.html":{},"modules/AppLoggerModule.html":{},"modules/ApplicationModule.html":{},"injectables/AuthMiddleware.html":{},"controllers/CacheController.html":{},"classes/CacheObject.html":{},"modules/CoreModule.html":{},"interfaces/CreateListingDto.html":{},"interfaces/CreateStoryDto.html":{},"classes/Currency.html":{},"interfaces/CurrencyAttributes.html":{},"interfaces/CurrencyDto.html":{},"controllers/DevController.html":{},"modules/DevModule.html":{},"classes/Disclaimer.html":{},"interfaces/DisclaimerAttributes.html":{},"interfaces/DisclaimerDto.html":{},"classes/ErrorCodes.html":{},"classes/ErrorResult.html":{},"controllers/FilesController.html":{},"injectables/FireBase.html":{},"classes/HiringType.html":{},"interfaces/HiringTypeAttributes.html":{},"interfaces/HiringTypeDto.html":{},"interfaces/IGoogleProfile.html":{},"classes/KeyValuePair.html":{},"classes/Listing.html":{},"interfaces/ListingAttributes.html":{},"controllers/ListingController.html":{},"interfaces/ListingDto.html":{},"classes/ListingFollower.html":{},"interfaces/ListingFollowerAttributes.html":{},"modules/ListingModule.html":{},"classes/ListingReview.html":{},"interfaces/ListingReviewAttributes.html":{},"interfaces/ListingReviewDto.html":{},"interfaces/ListingReviewDto-1.html":{},"classes/ListingType.html":{},"interfaces/ListingTypeAttributes.html":{},"interfaces/ListingTypeDto.html":{},"classes/LocalizedCurrency.html":{},"interfaces/LocalizedCurrencyAttributes.html":{},"classes/LocalizedDisclaimer.html":{},"interfaces/LocalizedDisclaimerAttributes.html":{},"classes/LocalizedHiringType.html":{},"interfaces/LocalizedHiringTypeAttributes.html":{},"classes/LocalizedListingType.html":{},"interfaces/LocalizedListingTypeAttributes.html":{},"classes/LocalizedPriceType.html":{},"interfaces/LocalizedPriceTypeAttributes.html":{},"classes/LoginUserDto.html":{},"controllers/LookupsController.html":{},"modules/LookupsModule.html":{},"injectables/LookupsService.html":{},"injectables/MailManager.html":{},"classes/NoDataResult.html":{},"classes/NotFoundResult.html":{},"classes/OperationResult.html":{},"classes/PasswordRecoveryToken.html":{},"interfaces/PasswordRecoveryTokenAttributes.html":{},"classes/PriceType.html":{},"interfaces/PriceTypeAttributes.html":{},"interfaces/PriceTypeDto.html":{},"injectables/PrismaService.html":{},"classes/RegisterUser.html":{},"interfaces/ResetPassword.html":{},"classes/Result.html":{},"classes/SearchListingDto.html":{},"classes/SearchResultDto.html":{},"classes/SearchStoryDto.html":{},"classes/Story.html":{},"interfaces/StoryAttributes.html":{},"controllers/StoryController.html":{},"interfaces/StoryDto.html":{},"modules/StoryModule.html":{},"injectables/StoryService.html":{},"classes/SuccessResult.html":{},"interfaces/ToggleListingFollowDto.html":{},"classes/ToggleUserFollowDto.html":{},"classes/User.html":{},"interfaces/UserAttributes.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserFollower.html":{},"interfaces/UserFollowerAttributes.html":{},"modules/UserModule.html":{},"classes/UserSnippetDto.html":{},"injectables/ValidationPipe.html":{}}}],["sourcekey",{"_index":294,"title":{},"body":{"classes/Currency.html":{},"interfaces/CurrencyAttributes.html":{},"classes/Disclaimer.html":{},"interfaces/DisclaimerAttributes.html":{},"classes/HiringType.html":{},"interfaces/HiringTypeAttributes.html":{},"classes/ListingType.html":{},"interfaces/ListingTypeAttributes.html":{},"classes/PriceType.html":{},"interfaces/PriceTypeAttributes.html":{},"classes/User.html":{},"interfaces/UserAttributes.html":{}}}],["src/.../applogger.service.ts",{"_index":1792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.middleware.ts",{"_index":1789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../constants.ts",{"_index":1726,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../currency.localized.ts",{"_index":1775,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../currency.ts",{"_index":1768,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../database.ts",{"_index":1793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../dev.controller.ts",{"_index":1795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../disclaimer.localized.ts",{"_index":1776,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../disclaimer.ts",{"_index":1769,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../environment.ts",{"_index":1787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../file.controller.ts",{"_index":1786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../hiringtype.localized.ts",{"_index":1777,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../hiringtype.ts",{"_index":1770,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../http.ts",{"_index":1729,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../listing.ts",{"_index":1771,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../listingfollower.ts",{"_index":1772,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../listingreview.ts",{"_index":1773,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../listingtype.localized.ts",{"_index":1778,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../listingtype.ts",{"_index":1774,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../lookups.service.ts",{"_index":1794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1728,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../onesignal.ts",{"_index":1730,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../passwordrecoverytoken.ts",{"_index":1780,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../pricetype.localized.ts",{"_index":1779,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../pricetype.ts",{"_index":1781,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../story.ts",{"_index":1782,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../user.decorator.ts",{"_index":1790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.service.ts",{"_index":1791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.ts",{"_index":1783,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../userfollower.ts",{"_index":1784,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../utils.ts",{"_index":1788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":117,"title":{},"body":{"modules/ApplicationModule.html":{}}}],["src/dev/cache.controller.ts",{"_index":177,"title":{},"body":{"controllers/CacheController.html":{},"coverage.html":{}}}],["src/dev/cache.controller.ts:13",{"_index":188,"title":{},"body":{"controllers/CacheController.html":{}}}],["src/dev/cache.controller.ts:19",{"_index":185,"title":{},"body":{"controllers/CacheController.html":{}}}],["src/dev/dev.controller.ts",{"_index":302,"title":{},"body":{"controllers/DevController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/dev/dev.controller.ts:27",{"_index":307,"title":{},"body":{"controllers/DevController.html":{}}}],["src/dev/dev.module.ts",{"_index":330,"title":{},"body":{"modules/DevModule.html":{}}}],["src/dev/dev.module.ts:18",{"_index":331,"title":{},"body":{"modules/DevModule.html":{}}}],["src/listing/dto/createlistingdto.ts",{"_index":219,"title":{},"body":{"interfaces/CreateListingDto.html":{},"coverage.html":{}}}],["src/listing/dto/createlistingreviewdto.ts",{"_index":776,"title":{},"body":{"interfaces/ListingReviewDto.html":{},"coverage.html":{}}}],["src/listing/dto/listingdto.ts",{"_index":712,"title":{},"body":{"interfaces/ListingDto.html":{},"coverage.html":{}}}],["src/listing/dto/listingreviewdto.ts",{"_index":777,"title":{},"body":{"interfaces/ListingReviewDto-1.html":{},"coverage.html":{}}}],["src/listing/dto/searchlistingdto.ts",{"_index":1133,"title":{},"body":{"classes/SearchListingDto.html":{},"coverage.html":{}}}],["src/listing/dto/searchlistingdto.ts:2",{"_index":1139,"title":{},"body":{"classes/SearchListingDto.html":{}}}],["src/listing/dto/searchlistingdto.ts:3",{"_index":1142,"title":{},"body":{"classes/SearchListingDto.html":{}}}],["src/listing/dto/searchlistingdto.ts:4",{"_index":1138,"title":{},"body":{"classes/SearchListingDto.html":{}}}],["src/listing/dto/searchlistingdto.ts:5",{"_index":1137,"title":{},"body":{"classes/SearchListingDto.html":{}}}],["src/listing/dto/searchlistingdto.ts:6",{"_index":1144,"title":{},"body":{"classes/SearchListingDto.html":{}}}],["src/listing/dto/searchlistingdto.ts:7",{"_index":1140,"title":{},"body":{"classes/SearchListingDto.html":{}}}],["src/listing/dto/searchlistingdto.ts:8",{"_index":1141,"title":{},"body":{"classes/SearchListingDto.html":{}}}],["src/listing/dto/searchlistingdto.ts:9",{"_index":1136,"title":{},"body":{"classes/SearchListingDto.html":{}}}],["src/listing/dto/togglelistingfollowdto.ts",{"_index":1375,"title":{},"body":{"interfaces/ToggleListingFollowDto.html":{},"coverage.html":{}}}],["src/listing/listing.controller.ts",{"_index":564,"title":{},"body":{"controllers/ListingController.html":{},"coverage.html":{}}}],["src/listing/listing.controller.ts:112",{"_index":604,"title":{},"body":{"controllers/ListingController.html":{}}}],["src/listing/listing.controller.ts:124",{"_index":592,"title":{},"body":{"controllers/ListingController.html":{}}}],["src/listing/listing.controller.ts:139",{"_index":646,"title":{},"body":{"controllers/ListingController.html":{}}}],["src/listing/listing.controller.ts:158",{"_index":611,"title":{},"body":{"controllers/ListingController.html":{}}}],["src/listing/listing.controller.ts:174",{"_index":597,"title":{},"body":{"controllers/ListingController.html":{}}}],["src/listing/listing.controller.ts:191",{"_index":632,"title":{},"body":{"controllers/ListingController.html":{}}}],["src/listing/listing.controller.ts:44",{"_index":584,"title":{},"body":{"controllers/ListingController.html":{}}}],["src/listing/listing.controller.ts:67",{"_index":638,"title":{},"body":{"controllers/ListingController.html":{}}}],["src/listing/listing.controller.ts:84",{"_index":601,"title":{},"body":{"controllers/ListingController.html":{}}}],["src/listing/listing.controller.ts:96",{"_index":623,"title":{},"body":{"controllers/ListingController.html":{}}}],["src/listing/listing.module.ts",{"_index":740,"title":{},"body":{"modules/ListingModule.html":{}}}],["src/listing/listing.module.ts:22",{"_index":742,"title":{},"body":{"modules/ListingModule.html":{}}}],["src/listing/listing.service.ts",{"_index":1643,"title":{},"body":{"coverage.html":{}}}],["src/lookups/dto/currencydto.ts",{"_index":299,"title":{},"body":{"interfaces/CurrencyDto.html":{},"coverage.html":{}}}],["src/lookups/dto/disclaimerdto.ts",{"_index":356,"title":{},"body":{"interfaces/DisclaimerDto.html":{},"coverage.html":{}}}],["src/lookups/dto/hiringtypedto.ts",{"_index":496,"title":{},"body":{"interfaces/HiringTypeDto.html":{},"coverage.html":{}}}],["src/lookups/dto/listingtypedto.ts",{"_index":799,"title":{},"body":{"interfaces/ListingTypeDto.html":{},"coverage.html":{}}}],["src/lookups/dto/pricetypedto.ts",{"_index":1103,"title":{},"body":{"interfaces/PriceTypeDto.html":{},"coverage.html":{}}}],["src/lookups/file.controller.ts",{"_index":382,"title":{},"body":{"controllers/FilesController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/lookups/file.controller.ts:32",{"_index":407,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/lookups/file.controller.ts:50",{"_index":403,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/lookups/file.controller.ts:63",{"_index":392,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/lookups/file.controller.ts:79",{"_index":399,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/lookups/lookups.controller.ts",{"_index":866,"title":{},"body":{"controllers/LookupsController.html":{},"coverage.html":{}}}],["src/lookups/lookups.controller.ts:24",{"_index":889,"title":{},"body":{"controllers/LookupsController.html":{}}}],["src/lookups/lookups.controller.ts:34",{"_index":892,"title":{},"body":{"controllers/LookupsController.html":{}}}],["src/lookups/lookups.controller.ts:41",{"_index":875,"title":{},"body":{"controllers/LookupsController.html":{}}}],["src/lookups/lookups.controller.ts:48",{"_index":885,"title":{},"body":{"controllers/LookupsController.html":{}}}],["src/lookups/lookups.controller.ts:55",{"_index":879,"title":{},"body":{"controllers/LookupsController.html":{}}}],["src/lookups/lookups.module.ts",{"_index":919,"title":{},"body":{"modules/LookupsModule.html":{}}}],["src/lookups/lookups.module.ts:21",{"_index":920,"title":{},"body":{"modules/LookupsModule.html":{}}}],["src/lookups/lookups.service.ts",{"_index":927,"title":{},"body":{"injectables/LookupsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/lookups/lookups.service.ts:110",{"_index":943,"title":{},"body":{"injectables/LookupsService.html":{}}}],["src/lookups/lookups.service.ts:148",{"_index":937,"title":{},"body":{"injectables/LookupsService.html":{}}}],["src/lookups/lookups.service.ts:189",{"_index":940,"title":{},"body":{"injectables/LookupsService.html":{}}}],["src/lookups/lookups.service.ts:225",{"_index":938,"title":{},"body":{"injectables/LookupsService.html":{}}}],["src/lookups/lookups.service.ts:26",{"_index":931,"title":{},"body":{"injectables/LookupsService.html":{}}}],["src/lookups/lookups.service.ts:261",{"_index":946,"title":{},"body":{"injectables/LookupsService.html":{}}}],["src/lookups/lookups.service.ts:285",{"_index":939,"title":{},"body":{"injectables/LookupsService.html":{}}}],["src/lookups/lookups.service.ts:29",{"_index":942,"title":{},"body":{"injectables/LookupsService.html":{}}}],["src/lookups/lookups.service.ts:291",{"_index":934,"title":{},"body":{"injectables/LookupsService.html":{}}}],["src/lookups/lookups.service.ts:302",{"_index":932,"title":{},"body":{"injectables/LookupsService.html":{}}}],["src/lookups/lookups.service.ts:73",{"_index":936,"title":{},"body":{"injectables/LookupsService.html":{}}}],["src/main.ts",{"_index":1649,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/models/currency.localized.ts",{"_index":800,"title":{},"body":{"classes/LocalizedCurrency.html":{},"interfaces/LocalizedCurrencyAttributes.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/models/currency.localized.ts:24",{"_index":804,"title":{},"body":{"classes/LocalizedCurrency.html":{}}}],["src/models/currency.localized.ts:25",{"_index":806,"title":{},"body":{"classes/LocalizedCurrency.html":{}}}],["src/models/currency.localized.ts:26",{"_index":808,"title":{},"body":{"classes/LocalizedCurrency.html":{}}}],["src/models/currency.localized.ts:27",{"_index":807,"title":{},"body":{"classes/LocalizedCurrency.html":{}}}],["src/models/currency.localized.ts:28",{"_index":805,"title":{},"body":{"classes/LocalizedCurrency.html":{}}}],["src/models/currency.localized.ts:30",{"_index":803,"title":{},"body":{"classes/LocalizedCurrency.html":{}}}],["src/models/currency.localized.ts:31",{"_index":809,"title":{},"body":{"classes/LocalizedCurrency.html":{}}}],["src/models/currency.ts",{"_index":258,"title":{},"body":{"classes/Currency.html":{},"interfaces/CurrencyAttributes.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/models/currency.ts:17",{"_index":271,"title":{},"body":{"classes/Currency.html":{}}}],["src/models/currency.ts:18",{"_index":269,"title":{},"body":{"classes/Currency.html":{}}}],["src/models/currency.ts:19",{"_index":274,"title":{},"body":{"classes/Currency.html":{}}}],["src/models/currency.ts:21",{"_index":270,"title":{},"body":{"classes/Currency.html":{}}}],["src/models/currency.ts:22",{"_index":275,"title":{},"body":{"classes/Currency.html":{}}}],["src/models/currency.ts:24",{"_index":273,"title":{},"body":{"classes/Currency.html":{}}}],["src/models/currency.ts:26",{"_index":268,"title":{},"body":{"classes/Currency.html":{}}}],["src/models/disclaimer.localized.ts",{"_index":813,"title":{},"body":{"classes/LocalizedDisclaimer.html":{},"interfaces/LocalizedDisclaimerAttributes.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/models/disclaimer.localized.ts:23",{"_index":816,"title":{},"body":{"classes/LocalizedDisclaimer.html":{}}}],["src/models/disclaimer.localized.ts:24",{"_index":818,"title":{},"body":{"classes/LocalizedDisclaimer.html":{}}}],["src/models/disclaimer.localized.ts:25",{"_index":819,"title":{},"body":{"classes/LocalizedDisclaimer.html":{}}}],["src/models/disclaimer.localized.ts:26",{"_index":817,"title":{},"body":{"classes/LocalizedDisclaimer.html":{}}}],["src/models/disclaimer.localized.ts:28",{"_index":815,"title":{},"body":{"classes/LocalizedDisclaimer.html":{}}}],["src/models/disclaimer.localized.ts:29",{"_index":820,"title":{},"body":{"classes/LocalizedDisclaimer.html":{}}}],["src/models/disclaimer.ts",{"_index":338,"title":{},"body":{"classes/Disclaimer.html":{},"interfaces/DisclaimerAttributes.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/models/disclaimer.ts:16",{"_index":344,"title":{},"body":{"classes/Disclaimer.html":{}}}],["src/models/disclaimer.ts:17",{"_index":342,"title":{},"body":{"classes/Disclaimer.html":{}}}],["src/models/disclaimer.ts:19",{"_index":343,"title":{},"body":{"classes/Disclaimer.html":{}}}],["src/models/disclaimer.ts:20",{"_index":347,"title":{},"body":{"classes/Disclaimer.html":{}}}],["src/models/disclaimer.ts:22",{"_index":346,"title":{},"body":{"classes/Disclaimer.html":{}}}],["src/models/disclaimer.ts:24",{"_index":341,"title":{},"body":{"classes/Disclaimer.html":{}}}],["src/models/hiringtype.localized.ts",{"_index":823,"title":{},"body":{"classes/LocalizedHiringType.html":{},"interfaces/LocalizedHiringTypeAttributes.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/models/hiringtype.localized.ts:23",{"_index":826,"title":{},"body":{"classes/LocalizedHiringType.html":{}}}],["src/models/hiringtype.localized.ts:24",{"_index":828,"title":{},"body":{"classes/LocalizedHiringType.html":{}}}],["src/models/hiringtype.localized.ts:25",{"_index":829,"title":{},"body":{"classes/LocalizedHiringType.html":{}}}],["src/models/hiringtype.localized.ts:26",{"_index":827,"title":{},"body":{"classes/LocalizedHiringType.html":{}}}],["src/models/hiringtype.localized.ts:28",{"_index":825,"title":{},"body":{"classes/LocalizedHiringType.html":{}}}],["src/models/hiringtype.localized.ts:29",{"_index":830,"title":{},"body":{"classes/LocalizedHiringType.html":{}}}],["src/models/hiringtype.ts",{"_index":478,"title":{},"body":{"classes/HiringType.html":{},"interfaces/HiringTypeAttributes.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/models/hiringtype.ts:16",{"_index":484,"title":{},"body":{"classes/HiringType.html":{}}}],["src/models/hiringtype.ts:17",{"_index":482,"title":{},"body":{"classes/HiringType.html":{}}}],["src/models/hiringtype.ts:19",{"_index":483,"title":{},"body":{"classes/HiringType.html":{}}}],["src/models/hiringtype.ts:20",{"_index":487,"title":{},"body":{"classes/HiringType.html":{}}}],["src/models/hiringtype.ts:22",{"_index":486,"title":{},"body":{"classes/HiringType.html":{}}}],["src/models/hiringtype.ts:24",{"_index":481,"title":{},"body":{"classes/HiringType.html":{}}}],["src/models/listing.ts",{"_index":517,"title":{},"body":{"classes/Listing.html":{},"interfaces/ListingAttributes.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/models/listing.ts:42",{"_index":526,"title":{},"body":{"classes/Listing.html":{}}}],["src/models/listing.ts:43",{"_index":536,"title":{},"body":{"classes/Listing.html":{}}}],["src/models/listing.ts:44",{"_index":537,"title":{},"body":{"classes/Listing.html":{}}}],["src/models/listing.ts:45",{"_index":528,"title":{},"body":{"classes/Listing.html":{}}}],["src/models/listing.ts:46",{"_index":540,"title":{},"body":{"classes/Listing.html":{}}}],["src/models/listing.ts:47",{"_index":529,"title":{},"body":{"classes/Listing.html":{}}}],["src/models/listing.ts:48",{"_index":530,"title":{},"body":{"classes/Listing.html":{}}}],["src/models/listing.ts:49",{"_index":520,"title":{},"body":{"classes/Listing.html":{}}}],["src/models/listing.ts:50",{"_index":524,"title":{},"body":{"classes/Listing.html":{}}}],["src/models/listing.ts:51",{"_index":522,"title":{},"body":{"classes/Listing.html":{}}}],["src/models/listing.ts:52",{"_index":543,"title":{},"body":{"classes/Listing.html":{}}}],["src/models/listing.ts:53",{"_index":519,"title":{},"body":{"classes/Listing.html":{}}}],["src/models/listing.ts:54",{"_index":547,"title":{},"body":{"classes/Listing.html":{}}}],["src/models/listing.ts:55",{"_index":546,"title":{},"body":{"classes/Listing.html":{}}}],["src/models/listing.ts:56",{"_index":539,"title":{},"body":{"classes/Listing.html":{}}}],["src/models/listing.ts:57",{"_index":534,"title":{},"body":{"classes/Listing.html":{}}}],["src/models/listing.ts:58",{"_index":538,"title":{},"body":{"classes/Listing.html":{}}}],["src/models/listing.ts:59",{"_index":523,"title":{},"body":{"classes/Listing.html":{}}}],["src/models/listing.ts:60",{"_index":525,"title":{},"body":{"classes/Listing.html":{}}}],["src/models/listing.ts:61",{"_index":533,"title":{},"body":{"classes/Listing.html":{}}}],["src/models/listing.ts:62",{"_index":532,"title":{},"body":{"classes/Listing.html":{}}}],["src/models/listing.ts:63",{"_index":531,"title":{},"body":{"classes/Listing.html":{}}}],["src/models/listing.ts:64",{"_index":541,"title":{},"body":{"classes/Listing.html":{}}}],["src/models/listing.ts:65",{"_index":548,"title":{},"body":{"classes/Listing.html":{}}}],["src/models/listing.ts:66",{"_index":542,"title":{},"body":{"classes/Listing.html":{}}}],["src/models/listing.ts:67",{"_index":527,"title":{},"body":{"classes/Listing.html":{}}}],["src/models/listing.ts:68",{"_index":535,"title":{},"body":{"classes/Listing.html":{}}}],["src/models/listing.ts:69",{"_index":544,"title":{},"body":{"classes/Listing.html":{}}}],["src/models/listing.ts:70",{"_index":521,"title":{},"body":{"classes/Listing.html":{}}}],["src/models/listing.ts:71",{"_index":545,"title":{},"body":{"classes/Listing.html":{}}}],["src/models/listingfollower.ts",{"_index":726,"title":{},"body":{"classes/ListingFollower.html":{},"interfaces/ListingFollowerAttributes.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/models/listingfollower.ts:19",{"_index":729,"title":{},"body":{"classes/ListingFollower.html":{}}}],["src/models/listingfollower.ts:20",{"_index":732,"title":{},"body":{"classes/ListingFollower.html":{}}}],["src/models/listingfollower.ts:21",{"_index":730,"title":{},"body":{"classes/ListingFollower.html":{}}}],["src/models/listingfollower.ts:23",{"_index":728,"title":{},"body":{"classes/ListingFollower.html":{}}}],["src/models/listingfollower.ts:24",{"_index":731,"title":{},"body":{"classes/ListingFollower.html":{}}}],["src/models/listingreview.ts",{"_index":755,"title":{},"body":{"classes/ListingReview.html":{},"interfaces/ListingReviewAttributes.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/models/listingreview.ts:21",{"_index":764,"title":{},"body":{"classes/ListingReview.html":{}}}],["src/models/listingreview.ts:22",{"_index":771,"title":{},"body":{"classes/ListingReview.html":{}}}],["src/models/listingreview.ts:23",{"_index":765,"title":{},"body":{"classes/ListingReview.html":{}}}],["src/models/listingreview.ts:24",{"_index":769,"title":{},"body":{"classes/ListingReview.html":{}}}],["src/models/listingreview.ts:25",{"_index":763,"title":{},"body":{"classes/ListingReview.html":{}}}],["src/models/listingreview.ts:26",{"_index":766,"title":{},"body":{"classes/ListingReview.html":{}}}],["src/models/listingreview.ts:27",{"_index":767,"title":{},"body":{"classes/ListingReview.html":{}}}],["src/models/listingreview.ts:28",{"_index":768,"title":{},"body":{"classes/ListingReview.html":{}}}],["src/models/listingreview.ts:30",{"_index":762,"title":{},"body":{"classes/ListingReview.html":{}}}],["src/models/listingreview.ts:31",{"_index":770,"title":{},"body":{"classes/ListingReview.html":{}}}],["src/models/listingtype.localized.ts",{"_index":833,"title":{},"body":{"classes/LocalizedListingType.html":{},"interfaces/LocalizedListingTypeAttributes.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/models/listingtype.localized.ts:23",{"_index":836,"title":{},"body":{"classes/LocalizedListingType.html":{}}}],["src/models/listingtype.localized.ts:24",{"_index":838,"title":{},"body":{"classes/LocalizedListingType.html":{}}}],["src/models/listingtype.localized.ts:25",{"_index":839,"title":{},"body":{"classes/LocalizedListingType.html":{}}}],["src/models/listingtype.localized.ts:26",{"_index":837,"title":{},"body":{"classes/LocalizedListingType.html":{}}}],["src/models/listingtype.localized.ts:28",{"_index":835,"title":{},"body":{"classes/LocalizedListingType.html":{}}}],["src/models/listingtype.localized.ts:29",{"_index":840,"title":{},"body":{"classes/LocalizedListingType.html":{}}}],["src/models/listingtype.ts",{"_index":780,"title":{},"body":{"classes/ListingType.html":{},"interfaces/ListingTypeAttributes.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/models/listingtype.ts:17",{"_index":788,"title":{},"body":{"classes/ListingType.html":{}}}],["src/models/listingtype.ts:18",{"_index":786,"title":{},"body":{"classes/ListingType.html":{}}}],["src/models/listingtype.ts:19",{"_index":785,"title":{},"body":{"classes/ListingType.html":{}}}],["src/models/listingtype.ts:21",{"_index":787,"title":{},"body":{"classes/ListingType.html":{}}}],["src/models/listingtype.ts:22",{"_index":791,"title":{},"body":{"classes/ListingType.html":{}}}],["src/models/listingtype.ts:24",{"_index":790,"title":{},"body":{"classes/ListingType.html":{}}}],["src/models/listingtype.ts:26",{"_index":784,"title":{},"body":{"classes/ListingType.html":{}}}],["src/models/passwordrecoverytoken.ts",{"_index":1081,"title":{},"body":{"classes/PasswordRecoveryToken.html":{},"interfaces/PasswordRecoveryTokenAttributes.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/models/passwordrecoverytoken.ts:22",{"_index":1083,"title":{},"body":{"classes/PasswordRecoveryToken.html":{}}}],["src/models/passwordrecoverytoken.ts:23",{"_index":1085,"title":{},"body":{"classes/PasswordRecoveryToken.html":{}}}],["src/models/passwordrecoverytoken.ts:24",{"_index":1084,"title":{},"body":{"classes/PasswordRecoveryToken.html":{}}}],["src/models/pricetype.localized.ts",{"_index":844,"title":{},"body":{"classes/LocalizedPriceType.html":{},"interfaces/LocalizedPriceTypeAttributes.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/models/pricetype.localized.ts:24",{"_index":849,"title":{},"body":{"classes/LocalizedPriceType.html":{}}}],["src/models/pricetype.localized.ts:25",{"_index":851,"title":{},"body":{"classes/LocalizedPriceType.html":{}}}],["src/models/pricetype.localized.ts:26",{"_index":848,"title":{},"body":{"classes/LocalizedPriceType.html":{}}}],["src/models/pricetype.localized.ts:27",{"_index":852,"title":{},"body":{"classes/LocalizedPriceType.html":{}}}],["src/models/pricetype.localized.ts:28",{"_index":850,"title":{},"body":{"classes/LocalizedPriceType.html":{}}}],["src/models/pricetype.localized.ts:30",{"_index":847,"title":{},"body":{"classes/LocalizedPriceType.html":{}}}],["src/models/pricetype.localized.ts:31",{"_index":853,"title":{},"body":{"classes/LocalizedPriceType.html":{}}}],["src/models/pricetype.ts",{"_index":1090,"title":{},"body":{"classes/PriceType.html":{},"interfaces/PriceTypeAttributes.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/models/pricetype.ts:16",{"_index":1095,"title":{},"body":{"classes/PriceType.html":{}}}],["src/models/pricetype.ts:17",{"_index":1093,"title":{},"body":{"classes/PriceType.html":{}}}],["src/models/pricetype.ts:19",{"_index":1094,"title":{},"body":{"classes/PriceType.html":{}}}],["src/models/pricetype.ts:20",{"_index":1097,"title":{},"body":{"classes/PriceType.html":{}}}],["src/models/pricetype.ts:22",{"_index":1096,"title":{},"body":{"classes/PriceType.html":{}}}],["src/models/pricetype.ts:24",{"_index":1092,"title":{},"body":{"classes/PriceType.html":{}}}],["src/models/story.ts",{"_index":1158,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryAttributes.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/models/story.ts:26",{"_index":1165,"title":{},"body":{"classes/Story.html":{}}}],["src/models/story.ts:27",{"_index":1170,"title":{},"body":{"classes/Story.html":{}}}],["src/models/story.ts:28",{"_index":1168,"title":{},"body":{"classes/Story.html":{}}}],["src/models/story.ts:29",{"_index":1171,"title":{},"body":{"classes/Story.html":{}}}],["src/models/story.ts:30",{"_index":1169,"title":{},"body":{"classes/Story.html":{}}}],["src/models/story.ts:31",{"_index":1164,"title":{},"body":{"classes/Story.html":{}}}],["src/models/story.ts:32",{"_index":1163,"title":{},"body":{"classes/Story.html":{}}}],["src/models/story.ts:33",{"_index":1167,"title":{},"body":{"classes/Story.html":{}}}],["src/models/story.ts:34",{"_index":1160,"title":{},"body":{"classes/Story.html":{}}}],["src/models/story.ts:35",{"_index":1173,"title":{},"body":{"classes/Story.html":{}}}],["src/models/story.ts:36",{"_index":1161,"title":{},"body":{"classes/Story.html":{}}}],["src/models/story.ts:37",{"_index":1166,"title":{},"body":{"classes/Story.html":{}}}],["src/models/story.ts:38",{"_index":1172,"title":{},"body":{"classes/Story.html":{}}}],["src/models/story.ts:40",{"_index":1162,"title":{},"body":{"classes/Story.html":{}}}],["src/models/story.ts:41",{"_index":1174,"title":{},"body":{"classes/Story.html":{}}}],["src/models/user.ts",{"_index":1382,"title":{},"body":{"classes/User.html":{},"interfaces/UserAttributes.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/models/user.ts:28",{"_index":1397,"title":{},"body":{"classes/User.html":{}}}],["src/models/user.ts:29",{"_index":1399,"title":{},"body":{"classes/User.html":{}}}],["src/models/user.ts:30",{"_index":1391,"title":{},"body":{"classes/User.html":{}}}],["src/models/user.ts:31",{"_index":1401,"title":{},"body":{"classes/User.html":{}}}],["src/models/user.ts:32",{"_index":1394,"title":{},"body":{"classes/User.html":{}}}],["src/models/user.ts:33",{"_index":1393,"title":{},"body":{"classes/User.html":{}}}],["src/models/user.ts:35",{"_index":1396,"title":{},"body":{"classes/User.html":{}}}],["src/models/user.ts:36",{"_index":1395,"title":{},"body":{"classes/User.html":{}}}],["src/models/user.ts:37",{"_index":1392,"title":{},"body":{"classes/User.html":{}}}],["src/models/user.ts:38",{"_index":1400,"title":{},"body":{"classes/User.html":{}}}],["src/models/user.ts:40",{"_index":1390,"title":{},"body":{"classes/User.html":{}}}],["src/models/user.ts:41",{"_index":1402,"title":{},"body":{"classes/User.html":{}}}],["src/models/user.ts:43",{"_index":1398,"title":{},"body":{"classes/User.html":{}}}],["src/models/user.ts:45",{"_index":1389,"title":{},"body":{"classes/User.html":{}}}],["src/models/userfollower.ts",{"_index":1561,"title":{},"body":{"classes/UserFollower.html":{},"interfaces/UserFollowerAttributes.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/models/userfollower.ts:16",{"_index":1565,"title":{},"body":{"classes/UserFollower.html":{}}}],["src/models/userfollower.ts:17",{"_index":1567,"title":{},"body":{"classes/UserFollower.html":{}}}],["src/models/userfollower.ts:18",{"_index":1564,"title":{},"body":{"classes/UserFollower.html":{}}}],["src/models/userfollower.ts:20",{"_index":1563,"title":{},"body":{"classes/UserFollower.html":{}}}],["src/models/userfollower.ts:21",{"_index":1566,"title":{},"body":{"classes/UserFollower.html":{}}}],["src/shared/applogger/applogger.module.ts",{"_index":107,"title":{},"body":{"modules/AppLoggerModule.html":{}}}],["src/shared/applogger/applogger.service.ts",{"_index":73,"title":{},"body":{"injectables/AppLogger.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/applogger/applogger.service.ts:9",{"_index":79,"title":{},"body":{"injectables/AppLogger.html":{}}}],["src/shared/constants.ts",{"_index":358,"title":{},"body":{"classes/ErrorCodes.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/shared/constants.ts:7",{"_index":363,"title":{},"body":{"classes/ErrorCodes.html":{}}}],["src/shared/constants.ts:8",{"_index":364,"title":{},"body":{"classes/ErrorCodes.html":{}}}],["src/shared/constants.ts:9",{"_index":362,"title":{},"body":{"classes/ErrorCodes.html":{}}}],["src/shared/core/cache.ts",{"_index":6,"title":{},"body":{"classes/AppCache.html":{},"classes/CacheObject.html":{},"coverage.html":{}}}],["src/shared/core/cache.ts:13",{"_index":22,"title":{},"body":{"classes/AppCache.html":{}}}],["src/shared/core/cache.ts:14",{"_index":27,"title":{},"body":{"classes/AppCache.html":{}}}],["src/shared/core/cache.ts:18",{"_index":39,"title":{},"body":{"classes/AppCache.html":{}}}],["src/shared/core/cache.ts:3",{"_index":201,"title":{},"body":{"classes/CacheObject.html":{}}}],["src/shared/core/cache.ts:35",{"_index":41,"title":{},"body":{"classes/AppCache.html":{}}}],["src/shared/core/cache.ts:56",{"_index":34,"title":{},"body":{"classes/AppCache.html":{}}}],["src/shared/core/cache.ts:60",{"_index":43,"title":{},"body":{"classes/AppCache.html":{}}}],["src/shared/core/cache.ts:8",{"_index":202,"title":{},"body":{"classes/CacheObject.html":{}}}],["src/shared/core/cache.ts:9",{"_index":203,"title":{},"body":{"classes/CacheObject.html":{}}}],["src/shared/core/core.module.ts",{"_index":211,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/shared/core/core.module.ts:12",{"_index":213,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/shared/core/database.ts",{"_index":1657,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/core/environment.ts",{"_index":1659,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/core/firebase.ts",{"_index":452,"title":{},"body":{"injectables/FireBase.html":{},"coverage.html":{}}}],["src/shared/core/firebase.ts:5",{"_index":456,"title":{},"body":{"injectables/FireBase.html":{}}}],["src/shared/core/mailmanager.ts",{"_index":1046,"title":{},"body":{"injectables/MailManager.html":{},"coverage.html":{}}}],["src/shared/core/mailmanager.ts:12",{"_index":1051,"title":{},"body":{"injectables/MailManager.html":{}}}],["src/shared/core/mailmanager.ts:7",{"_index":1048,"title":{},"body":{"injectables/MailManager.html":{}}}],["src/shared/core/onesignal.ts",{"_index":1662,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/shared/core/prisma.service.ts",{"_index":1104,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/shared/core/prisma.service.ts:13",{"_index":1108,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/shared/core/prisma.service.ts:9",{"_index":1109,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/shared/models/errorresult.ts",{"_index":370,"title":{},"body":{"classes/ErrorResult.html":{},"coverage.html":{}}}],["src/shared/models/errorresult.ts:2",{"_index":372,"title":{},"body":{"classes/ErrorResult.html":{}}}],["src/shared/models/errorresult.ts:8",{"_index":373,"title":{},"body":{"classes/ErrorResult.html":{}}}],["src/shared/models/keyvaluepair.ts",{"_index":507,"title":{},"body":{"classes/KeyValuePair.html":{},"coverage.html":{}}}],["src/shared/models/keyvaluepair.ts:1",{"_index":511,"title":{},"body":{"classes/KeyValuePair.html":{}}}],["src/shared/models/keyvaluepair.ts:6",{"_index":512,"title":{},"body":{"classes/KeyValuePair.html":{}}}],["src/shared/models/keyvaluepair.ts:7",{"_index":513,"title":{},"body":{"classes/KeyValuePair.html":{}}}],["src/shared/models/nodataresult.ts",{"_index":1069,"title":{},"body":{"classes/NoDataResult.html":{},"coverage.html":{}}}],["src/shared/models/nodataresult.ts:2",{"_index":1070,"title":{},"body":{"classes/NoDataResult.html":{}}}],["src/shared/models/notfoundresult.ts",{"_index":1073,"title":{},"body":{"classes/NotFoundResult.html":{},"coverage.html":{}}}],["src/shared/models/notfoundresult.ts:2",{"_index":1074,"title":{},"body":{"classes/NotFoundResult.html":{}}}],["src/shared/models/operationresult.ts",{"_index":1076,"title":{},"body":{"classes/OperationResult.html":{},"coverage.html":{}}}],["src/shared/models/operationresult.ts:2",{"_index":1079,"title":{},"body":{"classes/OperationResult.html":{}}}],["src/shared/models/operationresult.ts:3",{"_index":1077,"title":{},"body":{"classes/OperationResult.html":{}}}],["src/shared/models/operationresult.ts:4",{"_index":1078,"title":{},"body":{"classes/OperationResult.html":{}}}],["src/shared/models/result.ts",{"_index":1126,"title":{},"body":{"classes/Result.html":{},"coverage.html":{}}}],["src/shared/models/result.ts:1",{"_index":1128,"title":{},"body":{"classes/Result.html":{}}}],["src/shared/models/result.ts:6",{"_index":1131,"title":{},"body":{"classes/Result.html":{}}}],["src/shared/models/result.ts:7",{"_index":1130,"title":{},"body":{"classes/Result.html":{}}}],["src/shared/models/result.ts:8",{"_index":1129,"title":{},"body":{"classes/Result.html":{}}}],["src/shared/models/searchresultdto.ts",{"_index":1146,"title":{},"body":{"classes/SearchResultDto.html":{},"coverage.html":{}}}],["src/shared/models/searchresultdto.ts:2",{"_index":1148,"title":{},"body":{"classes/SearchResultDto.html":{}}}],["src/shared/models/searchresultdto.ts:3",{"_index":1149,"title":{},"body":{"classes/SearchResultDto.html":{}}}],["src/shared/models/successresult.ts",{"_index":1370,"title":{},"body":{"classes/SuccessResult.html":{},"coverage.html":{}}}],["src/shared/models/successresult.ts:2",{"_index":1372,"title":{},"body":{"classes/SuccessResult.html":{}}}],["src/shared/pipes/validation.pipe.ts",{"_index":1592,"title":{},"body":{"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["src/shared/pipes/validation.pipe.ts:14",{"_index":1604,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["src/shared/pipes/validation.pipe.ts:37",{"_index":1597,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["src/shared/pipes/validation.pipe.ts:48",{"_index":1599,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["src/story/dto/createstorydto.ts",{"_index":248,"title":{},"body":{"interfaces/CreateStoryDto.html":{},"coverage.html":{}}}],["src/story/dto/searchstorydto.ts",{"_index":1151,"title":{},"body":{"classes/SearchStoryDto.html":{},"coverage.html":{}}}],["src/story/dto/searchstorydto.ts:2",{"_index":1153,"title":{},"body":{"classes/SearchStoryDto.html":{}}}],["src/story/dto/searchstorydto.ts:3",{"_index":1152,"title":{},"body":{"classes/SearchStoryDto.html":{}}}],["src/story/dto/searchstorydto.ts:4",{"_index":1156,"title":{},"body":{"classes/SearchStoryDto.html":{}}}],["src/story/dto/searchstorydto.ts:5",{"_index":1154,"title":{},"body":{"classes/SearchStoryDto.html":{}}}],["src/story/dto/searchstorydto.ts:6",{"_index":1155,"title":{},"body":{"classes/SearchStoryDto.html":{}}}],["src/story/dto/storydto.ts",{"_index":1235,"title":{},"body":{"interfaces/StoryDto.html":{},"coverage.html":{}}}],["src/story/story.controller.ts",{"_index":1183,"title":{},"body":{"controllers/StoryController.html":{},"coverage.html":{}}}],["src/story/story.controller.ts:108",{"_index":1198,"title":{},"body":{"controllers/StoryController.html":{}}}],["src/story/story.controller.ts:39",{"_index":1195,"title":{},"body":{"controllers/StoryController.html":{}}}],["src/story/story.controller.ts:59",{"_index":1212,"title":{},"body":{"controllers/StoryController.html":{}}}],["src/story/story.controller.ts:71",{"_index":1202,"title":{},"body":{"controllers/StoryController.html":{}}}],["src/story/story.controller.ts:80",{"_index":1209,"title":{},"body":{"controllers/StoryController.html":{}}}],["src/story/story.controller.ts:96",{"_index":1205,"title":{},"body":{"controllers/StoryController.html":{}}}],["src/story/story.module.ts",{"_index":1242,"title":{},"body":{"modules/StoryModule.html":{}}}],["src/story/story.module.ts:29",{"_index":1243,"title":{},"body":{"modules/StoryModule.html":{}}}],["src/story/story.service.ts",{"_index":1248,"title":{},"body":{"injectables/StoryService.html":{},"coverage.html":{}}}],["src/story/story.service.ts:134",{"_index":1268,"title":{},"body":{"injectables/StoryService.html":{}}}],["src/story/story.service.ts:15",{"_index":1253,"title":{},"body":{"injectables/StoryService.html":{}}}],["src/story/story.service.ts:191",{"_index":1266,"title":{},"body":{"injectables/StoryService.html":{}}}],["src/story/story.service.ts:22",{"_index":1255,"title":{},"body":{"injectables/StoryService.html":{}}}],["src/story/story.service.ts:223",{"_index":1260,"title":{},"body":{"injectables/StoryService.html":{}}}],["src/story/story.service.ts:30",{"_index":1270,"title":{},"body":{"injectables/StoryService.html":{}}}],["src/story/story.service.ts:48",{"_index":1258,"title":{},"body":{"injectables/StoryService.html":{}}}],["src/story/story.service.ts:59",{"_index":1263,"title":{},"body":{"injectables/StoryService.html":{}}}],["src/story/story.service.ts:91",{"_index":1257,"title":{},"body":{"injectables/StoryService.html":{}}}],["src/user/auth.middleware.ts",{"_index":128,"title":{},"body":{"injectables/AuthMiddleware.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/user/auth.middleware.ts:12",{"_index":132,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["src/user/auth.middleware.ts:15",{"_index":139,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["src/user/dto/googlepofile.ts",{"_index":498,"title":{},"body":{"interfaces/IGoogleProfile.html":{},"coverage.html":{}}}],["src/user/dto/loginuserdto.ts",{"_index":858,"title":{},"body":{"classes/LoginUserDto.html":{},"coverage.html":{}}}],["src/user/dto/loginuserdto.ts:5",{"_index":861,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["src/user/dto/loginuserdto.ts:7",{"_index":863,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["src/user/dto/registeruser.ts",{"_index":1114,"title":{},"body":{"classes/RegisterUser.html":{},"coverage.html":{}}}],["src/user/dto/registeruser.ts:10",{"_index":1121,"title":{},"body":{"classes/RegisterUser.html":{}}}],["src/user/dto/registeruser.ts:11",{"_index":1118,"title":{},"body":{"classes/RegisterUser.html":{}}}],["src/user/dto/registeruser.ts:4",{"_index":1119,"title":{},"body":{"classes/RegisterUser.html":{}}}],["src/user/dto/registeruser.ts:6",{"_index":1120,"title":{},"body":{"classes/RegisterUser.html":{}}}],["src/user/dto/registeruser.ts:8",{"_index":1117,"title":{},"body":{"classes/RegisterUser.html":{}}}],["src/user/dto/registeruser.ts:9",{"_index":1122,"title":{},"body":{"classes/RegisterUser.html":{}}}],["src/user/dto/resetpassword.ts",{"_index":1124,"title":{},"body":{"interfaces/ResetPassword.html":{},"coverage.html":{}}}],["src/user/dto/toggleuserfollowdto.ts",{"_index":1377,"title":{},"body":{"classes/ToggleUserFollowDto.html":{},"coverage.html":{}}}],["src/user/dto/toggleuserfollowdto.ts:11",{"_index":1380,"title":{},"body":{"classes/ToggleUserFollowDto.html":{}}}],["src/user/dto/toggleuserfollowdto.ts:5",{"_index":1381,"title":{},"body":{"classes/ToggleUserFollowDto.html":{}}}],["src/user/dto/toggleuserfollowdto.ts:8",{"_index":1378,"title":{},"body":{"classes/ToggleUserFollowDto.html":{}}}],["src/user/dto/userdto.ts",{"_index":1547,"title":{},"body":{"classes/UserDto.html":{},"coverage.html":{}}}],["src/user/dto/userdto.ts:10",{"_index":1551,"title":{},"body":{"classes/UserDto.html":{}}}],["src/user/dto/userdto.ts:11",{"_index":1553,"title":{},"body":{"classes/UserDto.html":{}}}],["src/user/dto/userdto.ts:12",{"_index":1558,"title":{},"body":{"classes/UserDto.html":{}}}],["src/user/dto/userdto.ts:13",{"_index":1557,"title":{},"body":{"classes/UserDto.html":{}}}],["src/user/dto/userdto.ts:4",{"_index":1554,"title":{},"body":{"classes/UserDto.html":{}}}],["src/user/dto/userdto.ts:6",{"_index":1555,"title":{},"body":{"classes/UserDto.html":{}}}],["src/user/dto/userdto.ts:7",{"_index":1559,"title":{},"body":{"classes/UserDto.html":{}}}],["src/user/dto/userdto.ts:8",{"_index":1556,"title":{},"body":{"classes/UserDto.html":{}}}],["src/user/dto/userdto.ts:9",{"_index":1552,"title":{},"body":{"classes/UserDto.html":{}}}],["src/user/dto/usersnippetdto.ts",{"_index":1580,"title":{},"body":{"classes/UserSnippetDto.html":{},"coverage.html":{}}}],["src/user/dto/usersnippetdto.ts:10",{"_index":1586,"title":{},"body":{"classes/UserSnippetDto.html":{}}}],["src/user/dto/usersnippetdto.ts:2",{"_index":1591,"title":{},"body":{"classes/UserSnippetDto.html":{}}}],["src/user/dto/usersnippetdto.ts:3",{"_index":1585,"title":{},"body":{"classes/UserSnippetDto.html":{}}}],["src/user/dto/usersnippetdto.ts:4",{"_index":1589,"title":{},"body":{"classes/UserSnippetDto.html":{}}}],["src/user/dto/usersnippetdto.ts:5",{"_index":1590,"title":{},"body":{"classes/UserSnippetDto.html":{}}}],["src/user/dto/usersnippetdto.ts:6",{"_index":1584,"title":{},"body":{"classes/UserSnippetDto.html":{}}}],["src/user/dto/usersnippetdto.ts:7",{"_index":1583,"title":{},"body":{"classes/UserSnippetDto.html":{}}}],["src/user/dto/usersnippetdto.ts:8",{"_index":1588,"title":{},"body":{"classes/UserSnippetDto.html":{}}}],["src/user/dto/usersnippetdto.ts:9",{"_index":1587,"title":{},"body":{"classes/UserSnippetDto.html":{}}}],["src/user/user.controller.ts",{"_index":1410,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:124",{"_index":1425,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:154",{"_index":1450,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:190",{"_index":1439,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:200",{"_index":1447,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:208",{"_index":1471,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:220",{"_index":1463,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:232",{"_index":1442,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:248",{"_index":1433,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:264",{"_index":1436,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:37",{"_index":1457,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:62",{"_index":1428,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:77",{"_index":1460,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:88",{"_index":1453,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.decorator.ts",{"_index":1667,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/user/user.module.ts",{"_index":1575,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.module.ts:19",{"_index":1576,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service.ts",{"_index":1668,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/http.ts",{"_index":1672,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/utils/utils.ts",{"_index":1673,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["standardcode",{"_index":300,"title":{},"body":{"interfaces/CurrencyDto.html":{},"classes/LocalizedCurrency.html":{},"interfaces/LocalizedCurrencyAttributes.html":{},"injectables/LookupsService.html":{}}}],["starrating",{"_index":760,"title":{},"body":{"classes/ListingReview.html":{},"interfaces/ListingReviewAttributes.html":{},"interfaces/ListingReviewDto.html":{},"interfaces/ListingReviewDto-1.html":{}}}],["start",{"_index":1743,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":1746,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":1748,"title":{},"body":{"index.html":{}}}],["started",{"_index":1735,"title":{"index.html":{}},"body":{}}],["statements",{"_index":1632,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":9,"title":{},"body":{"classes/AppCache.html":{},"classes/CacheObject.html":{},"classes/Currency.html":{},"interfaces/CurrencyAttributes.html":{},"classes/Disclaimer.html":{},"interfaces/DisclaimerAttributes.html":{},"classes/ErrorCodes.html":{},"classes/HiringType.html":{},"interfaces/HiringTypeAttributes.html":{},"classes/ListingType.html":{},"interfaces/ListingTypeAttributes.html":{},"classes/PriceType.html":{},"interfaces/PriceTypeAttributes.html":{},"classes/User.html":{},"interfaces/UserAttributes.html":{}}}],["status",{"_index":147,"title":{},"body":{"injectables/AuthMiddleware.html":{},"interfaces/CreateListingDto.html":{},"interfaces/CreateStoryDto.html":{},"controllers/DevController.html":{},"classes/ErrorResult.html":{},"controllers/FilesController.html":{},"classes/Listing.html":{},"interfaces/ListingAttributes.html":{},"controllers/ListingController.html":{},"interfaces/ListingDto.html":{},"controllers/LookupsController.html":{},"classes/NoDataResult.html":{},"classes/NotFoundResult.html":{},"classes/Result.html":{},"classes/SearchListingDto.html":{},"classes/SearchStoryDto.html":{},"classes/Story.html":{},"interfaces/StoryAttributes.html":{},"controllers/StoryController.html":{},"interfaces/StoryDto.html":{},"injectables/StoryService.html":{},"classes/SuccessResult.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["status(httpstatus.bad_request",{"_index":1518,"title":{},"body":{"controllers/UserController.html":{}}}],["status(statuscodes.not_found",{"_index":325,"title":{},"body":{"controllers/DevController.html":{}}}],["statuscodes",{"_index":145,"title":{},"body":{"injectables/AuthMiddleware.html":{},"controllers/DevController.html":{}}}],["still",{"_index":1816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stockavailability",{"_index":241,"title":{},"body":{"interfaces/CreateListingDto.html":{},"classes/Listing.html":{},"interfaces/ListingAttributes.html":{},"interfaces/ListingDto.html":{},"injectables/StoryService.html":{}}}],["storage",{"_index":315,"title":{},"body":{"controllers/DevController.html":{},"miscellaneous/variables.html":{}}}],["storageoptions",{"_index":316,"title":{},"body":{"controllers/DevController.html":{},"miscellaneous/variables.html":{}}}],["stories",{"_index":1181,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryAttributes.html":{},"controllers/StoryController.html":{},"injectables/StoryService.html":{}}}],["stories'})@apibody({type",{"_index":1207,"title":{},"body":{"controllers/StoryController.html":{}}}],["stories'})@apiresponse({status",{"_index":1200,"title":{},"body":{"controllers/StoryController.html":{}}}],["stories'})@get('v1/stories",{"_index":1201,"title":{},"body":{"controllers/StoryController.html":{}}}],["stories.count",{"_index":1315,"title":{},"body":{"injectables/StoryService.html":{}}}],["stories.rows",{"_index":1327,"title":{},"body":{"injectables/StoryService.html":{}}}],["stories.rows.filter",{"_index":1317,"title":{},"body":{"injectables/StoryService.html":{}}}],["stories.rows.map((s",{"_index":1324,"title":{},"body":{"injectables/StoryService.html":{}}}],["storiescount",{"_index":1550,"title":{},"body":{"classes/UserDto.html":{}}}],["storieswithlistings",{"_index":1316,"title":{},"body":{"injectables/StoryService.html":{}}}],["storieswithlistings.length",{"_index":1319,"title":{},"body":{"injectables/StoryService.html":{}}}],["storieswithlistings.map",{"_index":1321,"title":{},"body":{"injectables/StoryService.html":{}}}],["story",{"_index":1157,"title":{"classes/Story.html":{}},"body":{"classes/Story.html":{},"interfaces/StoryAttributes.html":{},"controllers/StoryController.html":{},"injectables/StoryService.html":{},"coverage.html":{}}}],["story'})@apiresponse({status",{"_index":1193,"title":{},"body":{"controllers/StoryController.html":{}}}],["story'})@get('v1/stories/:id",{"_index":1204,"title":{},"body":{"controllers/StoryController.html":{}}}],["story.body",{"_index":1339,"title":{},"body":{"injectables/StoryService.html":{}}}],["story.conclusion",{"_index":1342,"title":{},"body":{"injectables/StoryService.html":{}}}],["story.controller",{"_index":1244,"title":{},"body":{"modules/StoryModule.html":{}}}],["story.create(storydata",{"_index":1278,"title":{},"body":{"injectables/StoryService.html":{}}}],["story.createdat",{"_index":1348,"title":{},"body":{"injectables/StoryService.html":{}}}],["story.destroy",{"_index":1300,"title":{},"body":{"injectables/StoryService.html":{}}}],["story.disclaimerid",{"_index":1334,"title":{},"body":{"injectables/StoryService.html":{}}}],["story.disclaimerid)?.name",{"_index":1336,"title":{},"body":{"injectables/StoryService.html":{}}}],["story.findall",{"_index":1282,"title":{},"body":{"injectables/StoryService.html":{}}}],["story.findandcountall",{"_index":1309,"title":{},"body":{"injectables/StoryService.html":{}}}],["story.findone",{"_index":1281,"title":{},"body":{"injectables/StoryService.html":{}}}],["story.headerline",{"_index":1338,"title":{},"body":{"injectables/StoryService.html":{}}}],["story.id",{"_index":1333,"title":{},"body":{"injectables/StoryService.html":{}}}],["story.imaginativeyear",{"_index":1343,"title":{},"body":{"injectables/StoryService.html":{}}}],["story.init",{"_index":1180,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryAttributes.html":{}}}],["story.intro",{"_index":1340,"title":{},"body":{"injectables/StoryService.html":{}}}],["story.listing",{"_index":1293,"title":{},"body":{"injectables/StoryService.html":{}}}],["story.listingid",{"_index":1318,"title":{},"body":{"injectables/StoryService.html":{}}}],["story.media",{"_index":1298,"title":{},"body":{"injectables/StoryService.html":{}}}],["story.ownerid",{"_index":1347,"title":{},"body":{"injectables/StoryService.html":{}}}],["story.privacy",{"_index":1337,"title":{},"body":{"injectables/StoryService.html":{}}}],["story.service",{"_index":1214,"title":{},"body":{"controllers/StoryController.html":{},"modules/StoryModule.html":{}}}],["story.status",{"_index":1344,"title":{},"body":{"injectables/StoryService.html":{}}}],["story.tagline",{"_index":1341,"title":{},"body":{"injectables/StoryService.html":{}}}],["story.update(storydata",{"_index":1280,"title":{},"body":{"injectables/StoryService.html":{}}}],["story.updatedat",{"_index":1349,"title":{},"body":{"injectables/StoryService.html":{}}}],["story/story.module",{"_index":124,"title":{},"body":{"modules/ApplicationModule.html":{}}}],["storyattributes",{"_index":1159,"title":{"interfaces/StoryAttributes.html":{}},"body":{"classes/Story.html":{},"interfaces/StoryAttributes.html":{},"coverage.html":{}}}],["storycontroller",{"_index":1182,"title":{"controllers/StoryController.html":{}},"body":{"controllers/StoryController.html":{},"modules/StoryModule.html":{},"coverage.html":{}}}],["storycreationattributes",{"_index":1175,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryAttributes.html":{},"miscellaneous/typealiases.html":{}}}],["storydata",{"_index":1191,"title":{},"body":{"controllers/StoryController.html":{},"injectables/StoryService.html":{}}}],["storydata.id",{"_index":1222,"title":{},"body":{"controllers/StoryController.html":{}}}],["storydata.ownerid",{"_index":1221,"title":{},"body":{"controllers/StoryController.html":{}}}],["storydto",{"_index":1216,"title":{"interfaces/StoryDto.html":{}},"body":{"controllers/StoryController.html":{},"interfaces/StoryDto.html":{},"injectables/StoryService.html":{},"coverage.html":{}}}],["storydtos",{"_index":1284,"title":{},"body":{"injectables/StoryService.html":{}}}],["storydtos.push(await",{"_index":1285,"title":{},"body":{"injectables/StoryService.html":{}}}],["storymodule",{"_index":115,"title":{"modules/StoryModule.html":{}},"body":{"modules/ApplicationModule.html":{},"modules/StoryModule.html":{},"modules.html":{},"overview.html":{}}}],["storyservice",{"_index":1213,"title":{"injectables/StoryService.html":{}},"body":{"controllers/StoryController.html":{},"modules/StoryModule.html":{},"injectables/StoryService.html":{},"coverage.html":{},"overview.html":{}}}],["string",{"_index":24,"title":{},"body":{"classes/AppCache.html":{},"injectables/AppLogger.html":{},"classes/CacheObject.html":{},"interfaces/CreateListingDto.html":{},"interfaces/CreateStoryDto.html":{},"classes/Currency.html":{},"interfaces/CurrencyAttributes.html":{},"interfaces/CurrencyDto.html":{},"classes/Disclaimer.html":{},"interfaces/DisclaimerAttributes.html":{},"interfaces/DisclaimerDto.html":{},"classes/ErrorCodes.html":{},"classes/ErrorResult.html":{},"controllers/FilesController.html":{},"injectables/FireBase.html":{},"classes/HiringType.html":{},"interfaces/HiringTypeAttributes.html":{},"interfaces/HiringTypeDto.html":{},"interfaces/IGoogleProfile.html":{},"classes/Listing.html":{},"interfaces/ListingAttributes.html":{},"controllers/ListingController.html":{},"interfaces/ListingDto.html":{},"classes/ListingFollower.html":{},"interfaces/ListingFollowerAttributes.html":{},"classes/ListingReview.html":{},"interfaces/ListingReviewAttributes.html":{},"interfaces/ListingReviewDto.html":{},"interfaces/ListingReviewDto-1.html":{},"classes/ListingType.html":{},"interfaces/ListingTypeAttributes.html":{},"interfaces/ListingTypeDto.html":{},"classes/LocalizedCurrency.html":{},"interfaces/LocalizedCurrencyAttributes.html":{},"classes/LocalizedDisclaimer.html":{},"interfaces/LocalizedDisclaimerAttributes.html":{},"classes/LocalizedHiringType.html":{},"interfaces/LocalizedHiringTypeAttributes.html":{},"classes/LocalizedListingType.html":{},"interfaces/LocalizedListingTypeAttributes.html":{},"classes/LocalizedPriceType.html":{},"interfaces/LocalizedPriceTypeAttributes.html":{},"classes/LoginUserDto.html":{},"controllers/LookupsController.html":{},"injectables/LookupsService.html":{},"injectables/MailManager.html":{},"classes/NoDataResult.html":{},"classes/NotFoundResult.html":{},"classes/OperationResult.html":{},"classes/PasswordRecoveryToken.html":{},"interfaces/PasswordRecoveryTokenAttributes.html":{},"classes/PriceType.html":{},"interfaces/PriceTypeAttributes.html":{},"interfaces/PriceTypeDto.html":{},"classes/RegisterUser.html":{},"interfaces/ResetPassword.html":{},"classes/Result.html":{},"classes/SearchListingDto.html":{},"classes/SearchStoryDto.html":{},"classes/Story.html":{},"interfaces/StoryAttributes.html":{},"controllers/StoryController.html":{},"interfaces/StoryDto.html":{},"injectables/StoryService.html":{},"classes/SuccessResult.html":{},"interfaces/ToggleListingFollowDto.html":{},"classes/ToggleUserFollowDto.html":{},"classes/User.html":{},"interfaces/UserAttributes.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserFollower.html":{},"interfaces/UserFollowerAttributes.html":{},"classes/UserSnippetDto.html":{},"injectables/ValidationPipe.html":{}}}],["string).split",{"_index":161,"title":{},"body":{"injectables/AuthMiddleware.html":{},"miscellaneous/variables.html":{}}}],["subject",{"_index":1065,"title":{},"body":{"injectables/MailManager.html":{}}}],["submitted",{"_index":1611,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["success",{"_index":437,"title":{},"body":{"controllers/FilesController.html":{},"classes/OperationResult.html":{},"controllers/UserController.html":{}}}],["successfully",{"_index":581,"title":{},"body":{"controllers/ListingController.html":{},"controllers/StoryController.html":{},"controllers/UserController.html":{}}}],["successresult",{"_index":1369,"title":{"classes/SuccessResult.html":{}},"body":{"classes/SuccessResult.html":{},"coverage.html":{}}}],["summary",{"_index":197,"title":{},"body":{"controllers/CacheController.html":{},"controllers/FilesController.html":{},"controllers/ListingController.html":{},"controllers/LookupsController.html":{},"controllers/StoryController.html":{},"controllers/UserController.html":{}}}],["super('error",{"_index":379,"title":{},"body":{"classes/ErrorResult.html":{}}}],["super('no_data",{"_index":1071,"title":{},"body":{"classes/NoDataResult.html":{}}}],["super('not_found",{"_index":1075,"title":{},"body":{"classes/NotFoundResult.html":{}}}],["super('success",{"_index":1374,"title":{},"body":{"classes/SuccessResult.html":{}}}],["support",{"_index":1758,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1759,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1721,"title":{},"body":{"dependencies.html":{}}}],["symbol",{"_index":265,"title":{},"body":{"classes/Currency.html":{},"interfaces/CurrencyAttributes.html":{},"interfaces/CurrencyDto.html":{},"injectables/LookupsService.html":{}}}],["table",{"_index":1675,"title":{},"body":{"coverage.html":{}}}],["tablename",{"_index":291,"title":{},"body":{"classes/Currency.html":{},"interfaces/CurrencyAttributes.html":{},"classes/Disclaimer.html":{},"interfaces/DisclaimerAttributes.html":{},"classes/HiringType.html":{},"interfaces/HiringTypeAttributes.html":{},"classes/Listing.html":{},"interfaces/ListingAttributes.html":{},"classes/ListingFollower.html":{},"interfaces/ListingFollowerAttributes.html":{},"classes/ListingReview.html":{},"interfaces/ListingReviewAttributes.html":{},"classes/ListingType.html":{},"interfaces/ListingTypeAttributes.html":{},"classes/LocalizedCurrency.html":{},"interfaces/LocalizedCurrencyAttributes.html":{},"classes/LocalizedDisclaimer.html":{},"interfaces/LocalizedDisclaimerAttributes.html":{},"classes/LocalizedHiringType.html":{},"interfaces/LocalizedHiringTypeAttributes.html":{},"classes/LocalizedListingType.html":{},"interfaces/LocalizedListingTypeAttributes.html":{},"classes/LocalizedPriceType.html":{},"interfaces/LocalizedPriceTypeAttributes.html":{},"classes/PasswordRecoveryToken.html":{},"interfaces/PasswordRecoveryTokenAttributes.html":{},"classes/PriceType.html":{},"interfaces/PriceTypeAttributes.html":{},"classes/Story.html":{},"interfaces/StoryAttributes.html":{},"classes/User.html":{},"interfaces/UserAttributes.html":{},"classes/UserFollower.html":{},"interfaces/UserFollowerAttributes.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1674,"title":{},"body":{"coverage.html":{}}}],["tagline",{"_index":256,"title":{},"body":{"interfaces/CreateStoryDto.html":{},"classes/Story.html":{},"interfaces/StoryAttributes.html":{},"interfaces/StoryDto.html":{},"injectables/StoryService.html":{}}}],["test",{"_index":1751,"title":{},"body":{"index.html":{}}}],["test:covswagger",{"_index":1754,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1753,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1750,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":1111,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$disconnect",{"_index":1112,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.builderror(errors",{"_index":1619,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["this.data",{"_index":50,"title":{},"body":{"classes/AppCache.html":{},"classes/CacheObject.html":{},"classes/SuccessResult.html":{}}}],["this.error",{"_index":380,"title":{},"body":{"classes/ErrorResult.html":{}}}],["this.expiredate",{"_index":49,"title":{},"body":{"classes/AppCache.html":{},"classes/CacheObject.html":{}}}],["this.getlistingsnippet",{"_index":1328,"title":{},"body":{"injectables/StoryService.html":{}}}],["this.getlistingsnippet(listing",{"_index":1294,"title":{},"body":{"injectables/StoryService.html":{}}}],["this.key",{"_index":514,"title":{},"body":{"classes/KeyValuePair.html":{}}}],["this.listingservice.addlisting(lang",{"_index":678,"title":{},"body":{"controllers/ListingController.html":{}}}],["this.listingservice.deletelisting(userid",{"_index":692,"title":{},"body":{"controllers/ListingController.html":{}}}],["this.listingservice.deletereview",{"_index":707,"title":{},"body":{"controllers/ListingController.html":{}}}],["this.listingservice.getalllistings(lang",{"_index":685,"title":{},"body":{"controllers/ListingController.html":{}}}],["this.listingservice.getlisting",{"_index":1291,"title":{},"body":{"injectables/StoryService.html":{}}}],["this.listingservice.getlisting(id",{"_index":690,"title":{},"body":{"controllers/ListingController.html":{}}}],["this.listingservice.getlistingreviews",{"_index":703,"title":{},"body":{"controllers/ListingController.html":{}}}],["this.listingservice.getlistingsbyids(lang",{"_index":1322,"title":{},"body":{"injectables/StoryService.html":{}}}],["this.listingservice.searchlistings",{"_index":688,"title":{},"body":{"controllers/ListingController.html":{}}}],["this.listingservice.togglelistingfollow(togglemodel",{"_index":711,"title":{},"body":{"controllers/ListingController.html":{}}}],["this.listingservice.updatelisting",{"_index":682,"title":{},"body":{"controllers/ListingController.html":{}}}],["this.listingservice.upsertreview",{"_index":698,"title":{},"body":{"controllers/ListingController.html":{}}}],["this.lookupservice.deletefile(bucket",{"_index":438,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.lookupservice.duplicatefile",{"_index":448,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.lookupservice.getfile(bucket",{"_index":433,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.lookupservice.savefile(bucket",{"_index":428,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.lookupsservice.deletefile",{"_index":1299,"title":{},"body":{"injectables/StoryService.html":{}}}],["this.lookupsservice.getcurrencies(lang",{"_index":907,"title":{},"body":{"controllers/LookupsController.html":{}}}],["this.lookupsservice.getdisclaimers(lang",{"_index":914,"title":{},"body":{"controllers/LookupsController.html":{},"injectables/StoryService.html":{}}}],["this.lookupsservice.gethiringtypes(lang",{"_index":910,"title":{},"body":{"controllers/LookupsController.html":{}}}],["this.lookupsservice.getlistingtypes(type",{"_index":901,"title":{},"body":{"controllers/LookupsController.html":{}}}],["this.lookupsservice.getpricetypes(lang",{"_index":904,"title":{},"body":{"controllers/LookupsController.html":{}}}],["this.mapstory(dbstory",{"_index":1289,"title":{},"body":{"injectables/StoryService.html":{}}}],["this.mapstory(story",{"_index":1279,"title":{},"body":{"injectables/StoryService.html":{}}}],["this.status",{"_index":1132,"title":{},"body":{"classes/Result.html":{}}}],["this.storyservice.addstory(lang",{"_index":1223,"title":{},"body":{"controllers/StoryController.html":{}}}],["this.storyservice.deletestory(userid",{"_index":1234,"title":{},"body":{"controllers/StoryController.html":{}}}],["this.storyservice.getallstories(lang",{"_index":1228,"title":{},"body":{"controllers/StoryController.html":{}}}],["this.storyservice.getstory(id",{"_index":1232,"title":{},"body":{"controllers/StoryController.html":{}}}],["this.storyservice.searchstories",{"_index":1230,"title":{},"body":{"controllers/StoryController.html":{}}}],["this.storyservice.updatestory(id",{"_index":1225,"title":{},"body":{"controllers/StoryController.html":{}}}],["this.tovalidate(metatype",{"_index":1612,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["this.userservice.facebooklogin(req.body.token",{"_index":1516,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.forgotpassword(req.body.email",{"_index":1497,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.generatejwt(result.data",{"_index":1488,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.getfollowedusers",{"_index":1544,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.getlistingfollowers",{"_index":1546,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.getuser(decoded.id",{"_index":167,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["this.userservice.getuser(story.ownerid",{"_index":1332,"title":{},"body":{"injectables/StoryService.html":{}}}],["this.userservice.getuser(userid",{"_index":1531,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.getuserfollowedusers",{"_index":1326,"title":{},"body":{"injectables/StoryService.html":{}}}],["this.userservice.getuserfollowedusers(userid",{"_index":1287,"title":{},"body":{"injectables/StoryService.html":{}}}],["this.userservice.getuserfollowers",{"_index":1542,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.googlelogin(req.body.token",{"_index":1523,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.locallogin",{"_index":1506,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.register(req.body",{"_index":1483,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.resetpassword(req.body",{"_index":1502,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.toggleuserfollow(togglemodel",{"_index":1539,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.updateuserprofile(userprofile",{"_index":1536,"title":{},"body":{"controllers/UserController.html":{}}}],["this.value",{"_index":515,"title":{},"body":{"classes/KeyValuePair.html":{}}}],["throw",{"_index":168,"title":{},"body":{"injectables/AuthMiddleware.html":{},"controllers/UserController.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["title",{"_index":761,"title":{},"body":{"classes/ListingReview.html":{},"interfaces/ListingReviewAttributes.html":{},"interfaces/ListingReviewDto.html":{},"interfaces/ListingReviewDto-1.html":{}}}],["togglelistingfollow",{"_index":572,"title":{},"body":{"controllers/ListingController.html":{}}}],["togglelistingfollow(userid",{"_index":624,"title":{},"body":{"controllers/ListingController.html":{}}}],["togglelistingfollowdto",{"_index":626,"title":{"interfaces/ToggleListingFollowDto.html":{}},"body":{"controllers/ListingController.html":{},"interfaces/ToggleListingFollowDto.html":{},"coverage.html":{}}}],["togglelistingfollowdto'})@post('v1/listings/toggle",{"_index":631,"title":{},"body":{"controllers/ListingController.html":{}}}],["togglemodel",{"_index":625,"title":{},"body":{"controllers/ListingController.html":{},"controllers/UserController.html":{}}}],["togglemodel.followerid",{"_index":1538,"title":{},"body":{"controllers/UserController.html":{}}}],["togglemodel.userid",{"_index":710,"title":{},"body":{"controllers/ListingController.html":{}}}],["toggles",{"_index":627,"title":{},"body":{"controllers/ListingController.html":{},"controllers/UserController.html":{}}}],["toggleuserfollow",{"_index":1421,"title":{},"body":{"controllers/UserController.html":{}}}],["toggleuserfollow(followerid",{"_index":1461,"title":{},"body":{"controllers/UserController.html":{}}}],["toggleuserfollowdto",{"_index":1376,"title":{"classes/ToggleUserFollowDto.html":{}},"body":{"classes/ToggleUserFollowDto.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["toggleuserfollowdto'})@post('v1/users/toggle",{"_index":1462,"title":{},"body":{"controllers/UserController.html":{}}}],["token",{"_index":163,"title":{},"body":{"injectables/AuthMiddleware.html":{},"classes/PasswordRecoveryToken.html":{},"interfaces/PasswordRecoveryTokenAttributes.html":{},"interfaces/ResetPassword.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["token[1",{"_index":1819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["totalratingcount",{"_index":242,"title":{},"body":{"interfaces/CreateListingDto.html":{},"classes/Listing.html":{},"interfaces/ListingAttributes.html":{}}}],["tovalidate",{"_index":1594,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["tovalidate(metatype",{"_index":1598,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["trace",{"_index":78,"title":{},"body":{"injectables/AppLogger.html":{}}}],["transform",{"_index":1595,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["transform(value",{"_index":1601,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["transformer",{"_index":1609,"title":{},"body":{"injectables/ValidationPipe.html":{},"dependencies.html":{}}}],["true",{"_index":286,"title":{},"body":{"classes/Currency.html":{},"interfaces/CurrencyAttributes.html":{},"classes/Disclaimer.html":{},"interfaces/DisclaimerAttributes.html":{},"classes/HiringType.html":{},"interfaces/HiringTypeAttributes.html":{},"classes/Listing.html":{},"interfaces/ListingAttributes.html":{},"controllers/ListingController.html":{},"classes/ListingFollower.html":{},"interfaces/ListingFollowerAttributes.html":{},"classes/ListingReview.html":{},"interfaces/ListingReviewAttributes.html":{},"classes/ListingType.html":{},"interfaces/ListingTypeAttributes.html":{},"classes/LocalizedCurrency.html":{},"interfaces/LocalizedCurrencyAttributes.html":{},"classes/LocalizedDisclaimer.html":{},"interfaces/LocalizedDisclaimerAttributes.html":{},"classes/LocalizedHiringType.html":{},"interfaces/LocalizedHiringTypeAttributes.html":{},"classes/LocalizedListingType.html":{},"interfaces/LocalizedListingTypeAttributes.html":{},"classes/LocalizedPriceType.html":{},"interfaces/LocalizedPriceTypeAttributes.html":{},"injectables/LookupsService.html":{},"classes/OperationResult.html":{},"classes/PasswordRecoveryToken.html":{},"interfaces/PasswordRecoveryTokenAttributes.html":{},"classes/PriceType.html":{},"interfaces/PriceTypeAttributes.html":{},"classes/Story.html":{},"interfaces/StoryAttributes.html":{},"injectables/StoryService.html":{},"classes/User.html":{},"interfaces/UserAttributes.html":{},"classes/UserFollower.html":{},"interfaces/UserFollowerAttributes.html":{}}}],["try",{"_index":1043,"title":{},"body":{"injectables/LookupsService.html":{},"injectables/StoryService.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":17,"title":{},"body":{"classes/AppCache.html":{},"injectables/AppLogger.html":{},"injectables/AuthMiddleware.html":{},"classes/CacheObject.html":{},"interfaces/CreateListingDto.html":{},"interfaces/CreateStoryDto.html":{},"classes/Currency.html":{},"interfaces/CurrencyAttributes.html":{},"interfaces/CurrencyDto.html":{},"controllers/DevController.html":{},"classes/Disclaimer.html":{},"interfaces/DisclaimerAttributes.html":{},"interfaces/DisclaimerDto.html":{},"classes/ErrorCodes.html":{},"classes/ErrorResult.html":{},"controllers/FilesController.html":{},"injectables/FireBase.html":{},"classes/HiringType.html":{},"interfaces/HiringTypeAttributes.html":{},"interfaces/HiringTypeDto.html":{},"interfaces/IGoogleProfile.html":{},"classes/KeyValuePair.html":{},"classes/Listing.html":{},"interfaces/ListingAttributes.html":{},"controllers/ListingController.html":{},"interfaces/ListingDto.html":{},"classes/ListingFollower.html":{},"interfaces/ListingFollowerAttributes.html":{},"modules/ListingModule.html":{},"classes/ListingReview.html":{},"interfaces/ListingReviewAttributes.html":{},"interfaces/ListingReviewDto.html":{},"interfaces/ListingReviewDto-1.html":{},"classes/ListingType.html":{},"interfaces/ListingTypeAttributes.html":{},"interfaces/ListingTypeDto.html":{},"classes/LocalizedCurrency.html":{},"interfaces/LocalizedCurrencyAttributes.html":{},"classes/LocalizedDisclaimer.html":{},"interfaces/LocalizedDisclaimerAttributes.html":{},"classes/LocalizedHiringType.html":{},"interfaces/LocalizedHiringTypeAttributes.html":{},"classes/LocalizedListingType.html":{},"interfaces/LocalizedListingTypeAttributes.html":{},"classes/LocalizedPriceType.html":{},"interfaces/LocalizedPriceTypeAttributes.html":{},"classes/LoginUserDto.html":{},"controllers/LookupsController.html":{},"modules/LookupsModule.html":{},"injectables/LookupsService.html":{},"injectables/MailManager.html":{},"classes/NoDataResult.html":{},"classes/NotFoundResult.html":{},"classes/OperationResult.html":{},"classes/PasswordRecoveryToken.html":{},"interfaces/PasswordRecoveryTokenAttributes.html":{},"classes/PriceType.html":{},"interfaces/PriceTypeAttributes.html":{},"interfaces/PriceTypeDto.html":{},"classes/RegisterUser.html":{},"interfaces/ResetPassword.html":{},"classes/Result.html":{},"classes/SearchListingDto.html":{},"classes/SearchResultDto.html":{},"classes/SearchStoryDto.html":{},"classes/Story.html":{},"interfaces/StoryAttributes.html":{},"controllers/StoryController.html":{},"interfaces/StoryDto.html":{},"modules/StoryModule.html":{},"injectables/StoryService.html":{},"classes/SuccessResult.html":{},"interfaces/ToggleListingFollowDto.html":{},"classes/ToggleUserFollowDto.html":{},"classes/User.html":{},"interfaces/UserAttributes.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserFollower.html":{},"interfaces/UserFollowerAttributes.html":{},"modules/UserModule.html":{},"classes/UserSnippetDto.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type.format",{"_index":993,"title":{},"body":{"injectables/LookupsService.html":{}}}],["type.name",{"_index":976,"title":{},"body":{"injectables/LookupsService.html":{}}}],["type.standardcode",{"_index":1011,"title":{},"body":{"injectables/LookupsService.html":{}}}],["typealiases",{"_index":1766,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":884,"title":{},"body":{"controllers/LookupsController.html":{},"injectables/ValidationPipe.html":{}}}],["types'})@apiresponse({status",{"_index":882,"title":{},"body":{"controllers/LookupsController.html":{}}}],["types'})@get('v1/lookups/hiring",{"_index":883,"title":{},"body":{"controllers/LookupsController.html":{}}}],["types'})@get('v1/lookups/listing",{"_index":887,"title":{},"body":{"controllers/LookupsController.html":{}}}],["types'})@get('v1/lookups/price",{"_index":891,"title":{},"body":{"controllers/LookupsController.html":{}}}],["types.find((type",{"_index":1628,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["types/:type",{"_index":888,"title":{},"body":{"controllers/LookupsController.html":{}}}],["typescript",{"_index":1719,"title":{},"body":{"dependencies.html":{}}}],["ui",{"_index":1722,"title":{},"body":{"dependencies.html":{}}}],["umzug",{"_index":314,"title":{},"body":{"controllers/DevController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["umzug.up",{"_index":327,"title":{},"body":{"controllers/DevController.html":{}}}],["unauthorized",{"_index":1530,"title":{},"body":{"controllers/UserController.html":{}}}],["undefined",{"_index":1143,"title":{},"body":{"classes/SearchListingDto.html":{},"classes/SearchStoryDto.html":{},"injectables/StoryService.html":{}}}],["unit",{"_index":1749,"title":{},"body":{"index.html":{}}}],["updated",{"_index":679,"title":{},"body":{"controllers/ListingController.html":{},"controllers/StoryController.html":{}}}],["updated.'})@apibody({type",{"_index":636,"title":{},"body":{"controllers/ListingController.html":{},"controllers/StoryController.html":{}}}],["updatedat",{"_index":266,"title":{},"body":{"classes/Currency.html":{},"interfaces/CurrencyAttributes.html":{},"interfaces/CurrencyDto.html":{},"classes/Disclaimer.html":{},"interfaces/DisclaimerAttributes.html":{},"interfaces/DisclaimerDto.html":{},"classes/HiringType.html":{},"interfaces/HiringTypeAttributes.html":{},"interfaces/HiringTypeDto.html":{},"classes/Listing.html":{},"interfaces/ListingAttributes.html":{},"interfaces/ListingDto.html":{},"classes/ListingFollower.html":{},"interfaces/ListingFollowerAttributes.html":{},"classes/ListingReview.html":{},"interfaces/ListingReviewAttributes.html":{},"interfaces/ListingReviewDto-1.html":{},"classes/ListingType.html":{},"interfaces/ListingTypeAttributes.html":{},"interfaces/ListingTypeDto.html":{},"classes/LocalizedCurrency.html":{},"interfaces/LocalizedCurrencyAttributes.html":{},"classes/LocalizedDisclaimer.html":{},"interfaces/LocalizedDisclaimerAttributes.html":{},"classes/LocalizedHiringType.html":{},"interfaces/LocalizedHiringTypeAttributes.html":{},"classes/LocalizedListingType.html":{},"interfaces/LocalizedListingTypeAttributes.html":{},"classes/LocalizedPriceType.html":{},"interfaces/LocalizedPriceTypeAttributes.html":{},"injectables/LookupsService.html":{},"classes/PriceType.html":{},"interfaces/PriceTypeAttributes.html":{},"interfaces/PriceTypeDto.html":{},"classes/Story.html":{},"interfaces/StoryAttributes.html":{},"interfaces/StoryDto.html":{},"injectables/StoryService.html":{},"classes/User.html":{},"interfaces/UserAttributes.html":{},"classes/UserFollower.html":{},"interfaces/UserFollowerAttributes.html":{}}}],["updatelisting",{"_index":573,"title":{},"body":{"controllers/ListingController.html":{}}}],["updatelisting(lang",{"_index":633,"title":{},"body":{"controllers/ListingController.html":{}}}],["updates",{"_index":634,"title":{},"body":{"controllers/ListingController.html":{},"controllers/StoryController.html":{},"controllers/UserController.html":{}}}],["updatestory",{"_index":1189,"title":{},"body":{"controllers/StoryController.html":{},"injectables/StoryService.html":{}}}],["updatestory(id",{"_index":1269,"title":{},"body":{"injectables/StoryService.html":{}}}],["updatestory(lang",{"_index":1210,"title":{},"body":{"controllers/StoryController.html":{}}}],["updateuserprofile",{"_index":1422,"title":{},"body":{"controllers/UserController.html":{}}}],["updateuserprofile(userid",{"_index":1464,"title":{},"body":{"controllers/UserController.html":{}}}],["uploadedfile",{"_index":411,"title":{},"body":{"controllers/FilesController.html":{}}}],["uploadfile",{"_index":386,"title":{},"body":{"controllers/FilesController.html":{}}}],["uploadfile(bucket",{"_index":404,"title":{},"body":{"controllers/FilesController.html":{}}}],["uploads",{"_index":405,"title":{},"body":{"controllers/FilesController.html":{}}}],["upsertlistingreview",{"_index":574,"title":{},"body":{"controllers/ListingController.html":{}}}],["upsertlistingreview(userid",{"_index":639,"title":{},"body":{"controllers/ListingController.html":{}}}],["url",{"_index":243,"title":{},"body":{"interfaces/CreateListingDto.html":{},"controllers/FilesController.html":{},"classes/Listing.html":{},"interfaces/ListingAttributes.html":{},"interfaces/ListingDto.html":{}}}],["urls",{"_index":440,"title":{},"body":{"controllers/FilesController.html":{}}}],["urls'})@post('v1/files/duplicate",{"_index":398,"title":{},"body":{"controllers/FilesController.html":{}}}],["use",{"_index":129,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["use(req",{"_index":133,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["useinterceptors",{"_index":409,"title":{},"body":{"controllers/FilesController.html":{}}}],["useinterceptors(fileinterceptor('file",{"_index":422,"title":{},"body":{"controllers/FilesController.html":{}}}],["usepipes(new",{"_index":1503,"title":{},"body":{"controllers/UserController.html":{}}}],["user",{"_index":166,"title":{"classes/User.html":{}},"body":{"injectables/AuthMiddleware.html":{},"controllers/ListingController.html":{},"controllers/StoryController.html":{},"injectables/StoryService.html":{},"classes/User.html":{},"interfaces/UserAttributes.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user'})@apiresponse({status",{"_index":1431,"title":{},"body":{"controllers/UserController.html":{}}}],["user('id",{"_index":670,"title":{},"body":{"controllers/ListingController.html":{},"controllers/StoryController.html":{},"controllers/UserController.html":{}}}],["user.controller",{"_index":1577,"title":{},"body":{"modules/UserModule.html":{}}}],["user.datavalues",{"_index":1515,"title":{},"body":{"controllers/UserController.html":{}}}],["user.decorator",{"_index":1476,"title":{},"body":{"controllers/UserController.html":{}}}],["user.hasmany(listing",{"_index":1407,"title":{},"body":{"classes/User.html":{},"interfaces/UserAttributes.html":{}}}],["user.hasone(passwordrecoverytoken",{"_index":1408,"title":{},"body":{"classes/User.html":{},"interfaces/UserAttributes.html":{}}}],["user.init",{"_index":1404,"title":{},"body":{"classes/User.html":{},"interfaces/UserAttributes.html":{}}}],["user.service",{"_index":1472,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user/auth.middleware",{"_index":745,"title":{},"body":{"modules/ListingModule.html":{},"modules/LookupsModule.html":{},"modules/StoryModule.html":{}}}],["user/user.decorator",{"_index":654,"title":{},"body":{"controllers/ListingController.html":{},"controllers/StoryController.html":{}}}],["user/user.module",{"_index":119,"title":{},"body":{"modules/ApplicationModule.html":{},"modules/ListingModule.html":{},"modules/LookupsModule.html":{},"modules/StoryModule.html":{}}}],["user/user.service",{"_index":149,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/StoryService.html":{}}}],["user_followers",{"_index":1570,"title":{},"body":{"classes/UserFollower.html":{},"interfaces/UserFollowerAttributes.html":{}}}],["user_template|3",{"_index":1178,"title":{},"body":{"classes/Story.html":{},"interfaces/StoryAttributes.html":{}}}],["userattributes",{"_index":1383,"title":{"interfaces/UserAttributes.html":{}},"body":{"classes/User.html":{},"interfaces/UserAttributes.html":{},"coverage.html":{}}}],["usercontroller",{"_index":1409,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["usercreationattributes",{"_index":1403,"title":{},"body":{"classes/User.html":{},"interfaces/UserAttributes.html":{},"miscellaneous/typealiases.html":{}}}],["userdto",{"_index":1466,"title":{"classes/UserDto.html":{}},"body":{"controllers/UserController.html":{},"classes/UserDto.html":{},"coverage.html":{}}}],["userdto'})@post('v1/users/profile",{"_index":1470,"title":{},"body":{"controllers/UserController.html":{}}}],["userfollower",{"_index":1560,"title":{"classes/UserFollower.html":{}},"body":{"classes/UserFollower.html":{},"interfaces/UserFollowerAttributes.html":{},"coverage.html":{}}}],["userfollower.init",{"_index":1569,"title":{},"body":{"classes/UserFollower.html":{},"interfaces/UserFollowerAttributes.html":{}}}],["userfollowerattributes",{"_index":1562,"title":{"interfaces/UserFollowerAttributes.html":{}},"body":{"classes/UserFollower.html":{},"interfaces/UserFollowerAttributes.html":{},"coverage.html":{}}}],["userfollowercreationattributes",{"_index":1568,"title":{},"body":{"classes/UserFollower.html":{},"interfaces/UserFollowerAttributes.html":{},"miscellaneous/typealiases.html":{}}}],["userfollowings",{"_index":1265,"title":{},"body":{"injectables/StoryService.html":{}}}],["userfollowings.find((f",{"_index":1345,"title":{},"body":{"injectables/StoryService.html":{}}}],["userid",{"_index":576,"title":{},"body":{"controllers/ListingController.html":{},"classes/ListingFollower.html":{},"interfaces/ListingFollowerAttributes.html":{},"classes/ListingReview.html":{},"interfaces/ListingReviewAttributes.html":{},"interfaces/ListingReviewDto.html":{},"interfaces/ListingReviewDto-1.html":{},"classes/PasswordRecoveryToken.html":{},"interfaces/PasswordRecoveryTokenAttributes.html":{},"controllers/StoryController.html":{},"injectables/StoryService.html":{},"interfaces/ToggleListingFollowDto.html":{},"classes/ToggleUserFollowDto.html":{},"classes/User.html":{},"interfaces/UserAttributes.html":{},"controllers/UserController.html":{},"classes/UserFollower.html":{},"interfaces/UserFollowerAttributes.html":{}}}],["usermodule",{"_index":116,"title":{"modules/UserModule.html":{}},"body":{"modules/ApplicationModule.html":{},"modules/ListingModule.html":{},"modules/LookupsModule.html":{},"modules/StoryModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":778,"title":{},"body":{"interfaces/ListingReviewDto-1.html":{}}}],["userprofile",{"_index":1465,"title":{},"body":{"controllers/UserController.html":{}}}],["userprofile.id",{"_index":1535,"title":{},"body":{"controllers/UserController.html":{}}}],["users",{"_index":1406,"title":{},"body":{"classes/User.html":{},"interfaces/UserAttributes.html":{},"controllers/UserController.html":{}}}],["users'})@post('v1/listings/:listingid/followers",{"_index":1435,"title":{},"body":{"controllers/UserController.html":{}}}],["users'})@post('v1/users/:userid/followers",{"_index":1441,"title":{},"body":{"controllers/UserController.html":{}}}],["users'})@post('v1/users/:userid/following",{"_index":1432,"title":{},"body":{"controllers/UserController.html":{}}}],["userservice",{"_index":131,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/StoryService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{}}}],["usersnippetdto",{"_index":1479,"title":{"classes/UserSnippetDto.html":{}},"body":{"controllers/UserController.html":{},"classes/UserSnippetDto.html":{},"coverage.html":{}}}],["uses",{"_index":244,"title":{},"body":{"interfaces/CreateListingDto.html":{},"classes/Listing.html":{},"interfaces/ListingAttributes.html":{},"interfaces/ListingDto.html":{}}}],["using",{"_index":616,"title":{},"body":{"controllers/ListingController.html":{},"controllers/StoryController.html":{}}}],["utils/http",{"_index":1474,"title":{},"body":{"controllers/UserController.html":{}}}],["utils/utils",{"_index":658,"title":{},"body":{"controllers/ListingController.html":{},"controllers/StoryController.html":{}}}],["uuid",{"_index":415,"title":{},"body":{"controllers/FilesController.html":{},"controllers/ListingController.html":{},"injectables/LookupsService.html":{},"controllers/StoryController.html":{}}}],["v",{"_index":510,"title":{},"body":{"classes/KeyValuePair.html":{}}}],["v1/auth/me",{"_index":1579,"title":{},"body":{"modules/UserModule.html":{}}}],["v1/files/:bucket/:type/:name",{"_index":926,"title":{},"body":{"modules/LookupsModule.html":{}}}],["v1/files/:bucket/:type/upload",{"_index":925,"title":{},"body":{"modules/LookupsModule.html":{}}}],["v1/listings",{"_index":747,"title":{},"body":{"modules/ListingModule.html":{}}}],["v1/listings/:id",{"_index":750,"title":{},"body":{"modules/ListingModule.html":{}}}],["v1/listings/search",{"_index":753,"title":{},"body":{"modules/ListingModule.html":{}}}],["v1/stories",{"_index":1245,"title":{},"body":{"modules/StoryModule.html":{}}}],["v1/stories/:id",{"_index":1246,"title":{},"body":{"modules/StoryModule.html":{}}}],["v1/stories/search",{"_index":1247,"title":{},"body":{"modules/StoryModule.html":{}}}],["v4",{"_index":414,"title":{},"body":{"controllers/FilesController.html":{},"controllers/ListingController.html":{},"injectables/LookupsService.html":{},"controllers/StoryController.html":{}}}],["v4()}${path.extname(file.originalname",{"_index":427,"title":{},"body":{"controllers/FilesController.html":{}}}],["v4()}${path.extname(filepath",{"_index":1041,"title":{},"body":{"injectables/LookupsService.html":{}}}],["validate",{"_index":1607,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["validate(object",{"_index":1614,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["validation",{"_index":1617,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["validationpipe",{"_index":1504,"title":{"injectables/ValidationPipe.html":{}},"body":{"controllers/UserController.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["validator",{"_index":864,"title":{},"body":{"classes/LoginUserDto.html":{},"classes/RegisterUser.html":{},"classes/ToggleUserFollowDto.html":{},"classes/UserDto.html":{},"injectables/ValidationPipe.html":{},"dependencies.html":{}}}],["value",{"_index":20,"title":{},"body":{"classes/AppCache.html":{},"classes/ErrorCodes.html":{},"classes/ErrorResult.html":{},"classes/KeyValuePair.html":{},"controllers/ListingController.html":{},"controllers/LookupsController.html":{},"classes/NoDataResult.html":{},"classes/NotFoundResult.html":{},"classes/OperationResult.html":{},"classes/Result.html":{},"classes/SearchListingDto.html":{},"classes/SearchResultDto.html":{},"classes/SearchStoryDto.html":{},"controllers/StoryController.html":{},"injectables/StoryService.html":{},"classes/SuccessResult.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1635,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1785,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verified_email",{"_index":505,"title":{},"body":{"interfaces/IGoogleProfile.html":{}}}],["viewscount",{"_index":245,"title":{},"body":{"interfaces/CreateListingDto.html":{},"classes/Listing.html":{},"interfaces/ListingAttributes.html":{},"interfaces/ListingDto.html":{}}}],["void",{"_index":33,"title":{},"body":{"classes/AppCache.html":{},"injectables/AppLogger.html":{},"classes/CacheObject.html":{},"modules/CoreModule.html":{},"modules/DevModule.html":{},"modules/ListingModule.html":{},"modules/LookupsModule.html":{},"modules/StoryModule.html":{},"modules/UserModule.html":{}}}],["want",{"_index":1817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["watch",{"_index":1744,"title":{},"body":{"index.html":{}}}],["where.listingid",{"_index":1306,"title":{},"body":{"injectables/StoryService.html":{}}}],["where.ownerid",{"_index":1304,"title":{},"body":{"injectables/StoryService.html":{}}}],["where.status",{"_index":1308,"title":{},"body":{"injectables/StoryService.html":{}}}],["yes",{"_index":1261,"title":{},"body":{"injectables/StoryService.html":{},"controllers/UserController.html":{}}}],["zoom",{"_index":104,"title":{},"body":{"modules/AppLoggerModule.html":{},"modules/ApplicationModule.html":{},"modules/CoreModule.html":{},"modules/DevModule.html":{},"modules/ListingModule.html":{},"modules/LookupsModule.html":{},"modules/StoryModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AppCache.html":{"url":"classes/AppCache.html","title":"class - AppCache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/core/Cache.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                _cache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                add\n                            \n                            \n                                    Static\n                                clear\n                            \n                            \n                                    Static\n                                get\n                            \n                            \n                                    Static\n                                    Async\n                                getAsync\n                            \n                            \n                                    Static\n                                getCache\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            _cache\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/core/Cache.ts:13\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            add\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    add(key: string, data: CacheObject)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/core/Cache.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                CacheObject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n\n            \n                \n                    Defined in src/shared/core/Cache.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(key: string, seconds: number, cb: any)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/core/Cache.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    seconds\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cb\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            Async\n                            getAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAsync(key: string, seconds: number, cb: any)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/core/Cache.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    seconds\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cb\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getCache\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCache()\n                \n            \n\n\n            \n                \n                    Defined in src/shared/core/Cache.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as moment from 'moment';\n\nclass CacheObject {\n  constructor(data: any, expireDate: Date) {\n    this.expireDate = expireDate;\n    this.data = data;\n  }\n  public data: any;\n  public expireDate: Date;\n}\n\nclass AppCache {\n  static _cache: any = {};\n  public static add(key: string, data: CacheObject): void {\n    AppCache._cache[key] = data;\n  }\n\n  public static get(key: string, seconds: number, cb: any): any {\n    if (\n      AppCache._cache[key] &&\n      AppCache._cache[key].expireDate > moment.utc().toDate()\n    ) {\n      return AppCache._cache[key].data;\n    } else {\n      const data = cb();\n      const cacheObj = new CacheObject(\n        data,\n        moment.utc().add(seconds, 's').toDate(),\n      );\n      AppCache.add(key, cacheObj);\n      return cacheObj;\n    }\n  }\n\n  public static async getAsync(\n    key: string,\n    seconds: number,\n    cb: any,\n  ): Promise {\n    if (\n      AppCache._cache[key] &&\n      AppCache._cache[key].expireDate > moment.utc().toDate()\n    ) {\n      return AppCache._cache[key].data;\n    } else {\n      const data = await cb();\n      const cacheObj = new CacheObject(\n        data,\n        moment.utc().add(seconds, 's').toDate(),\n      );\n      AppCache.add(key, cacheObj);\n      return cacheObj.data;\n    }\n  }\n\n  public static clear(): void {\n    AppCache._cache = {};\n  }\n\n  public static getCache(): any {\n    return AppCache._cache;\n  }\n}\n\nexport { CacheObject, AppCache };\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppLogger.html":{"url":"injectables/AppLogger.html","title":"injectable - AppLogger","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppLogger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/appLogger/appLogger.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Logger\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            error\n                        \n                        \n                    \n                \n            \n            \n                \nerror(message: any, trace: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/appLogger/appLogger.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    trace\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Scope, Logger } from '@nestjs/common';\nimport * as fs from 'fs';\nimport env from '@/shared/core/Environment';\n\nconst logFile = env.APP_LOG_FILE;\n\n@Injectable({ scope: Scope.TRANSIENT })\nexport class AppLogger extends Logger {\n  error(message: any, trace: string) {\n    fs.appendFile(logFile, message, (err) => console.log(err, trace));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppLoggerModule.html":{"url":"modules/AppLoggerModule.html","title":"module - AppLoggerModule","body":"\n                   \n\n\n\n\n    Modules\n    AppLoggerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppLoggerModule\n\n\n\ncluster_AppLoggerModule_exports\n\n\n\ncluster_AppLoggerModule_providers\n\n\n\n\nAppLogger \n\nAppLogger \n\n\n\nAppLoggerModule\n\nAppLoggerModule\n\nAppLogger  -->\n\nAppLoggerModule->AppLogger \n\n\n\n\n\nAppLogger\n\nAppLogger\n\nAppLoggerModule -->\n\nAppLogger->AppLoggerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/shared/appLogger/appLogger.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppLogger\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AppLogger\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppLogger } from './appLogger.service';\n\n@Module({\n  providers: [AppLogger],\n  exports: [AppLogger],\n})\nexport class AppLoggerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ApplicationModule.html":{"url":"modules/ApplicationModule.html","title":"module - ApplicationModule","body":"\n                   \n\n\n\n\n    Modules\n    ApplicationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ApplicationModule\n\n\n\ncluster_ApplicationModule_imports\n\n\n\n\nAppLoggerModule\n\nAppLoggerModule\n\n\n\nApplicationModule\n\nApplicationModule\n\nApplicationModule -->\n\nAppLoggerModule->ApplicationModule\n\n\n\n\n\nDevModule\n\nDevModule\n\nApplicationModule -->\n\nDevModule->ApplicationModule\n\n\n\n\n\nListingModule\n\nListingModule\n\nApplicationModule -->\n\nListingModule->ApplicationModule\n\n\n\n\n\nLookupsModule\n\nLookupsModule\n\nApplicationModule -->\n\nLookupsModule->ApplicationModule\n\n\n\n\n\nStoryModule\n\nStoryModule\n\nApplicationModule -->\n\nStoryModule->ApplicationModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nApplicationModule -->\n\nUserModule->ApplicationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AppLoggerModule\n                        \n                        \n                            DevModule\n                        \n                        \n                            ListingModule\n                        \n                        \n                            LookupsModule\n                        \n                        \n                            StoryModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserModule } from './user/user.module';\nimport { ListingModule } from './listing/listing.module';\nimport { DevModule } from './dev/dev.module';\nimport { LookupsModule } from './lookups/lookups.module';\nimport { AppLoggerModule } from './shared/appLogger/appLogger.module';\nimport { StoryModule } from './story/story.module';\n@Module({\n  imports: [\n    UserModule,\n    ListingModule,\n    DevModule,\n    LookupsModule,\n    AppLoggerModule,\n    StoryModule,\n  ],\n  controllers: [],\n  providers: [],\n})\nexport class ApplicationModule {\n  constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthMiddleware.html":{"url":"injectables/AuthMiddleware.html","title":"injectable - AuthMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/auth.middleware.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/user/auth.middleware.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            use\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req: Request, _res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/user/auth.middleware.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { NestMiddleware, HttpStatus, Injectable } from '@nestjs/common';\nimport { Request, Response, NextFunction } from 'express';\n//import { getStatusText, StatusCodes } from \"http-status-codes\";\nimport { UserService } from '@/user/user.service';\nimport * as jwt from 'jsonwebtoken';\nimport env from '@/shared/core/Environment';\nimport { HttpException } from '@nestjs/common/exceptions/http.exception';\n\nconst JWT_SECRET = env.JWT_SECRET;\n\n@Injectable()\nexport class AuthMiddleware implements NestMiddleware {\n  constructor(private readonly userService: UserService) {}\n\n  async use(req: Request, _res: Response, next: NextFunction) {\n    const authHeaders = req.headers.authorization;\n    if (authHeaders && (authHeaders as string).split(' ')[1]) {\n      const token = (authHeaders as string).split(' ')[1];\n      const decoded: any = jwt.verify(token, JWT_SECRET);\n      const user = await this.userService.getUser(decoded.id);\n\n      if (!user) {\n        throw new HttpException('User not found.', HttpStatus.UNAUTHORIZED);\n      }\n\n      req.user = user;\n      next();\n    } else {\n      throw new HttpException('Not authorized.', HttpStatus.UNAUTHORIZED);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CacheController.html":{"url":"controllers/CacheController.html","title":"controller - CacheController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CacheController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dev/cache.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                clearCache\n                            \n                            \n                                    Async\n                                getAllItems\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            clearCache\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clearCache()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('v1/cache')@ApiOperation({summary: 'Deletes all cached items'})\n                \n            \n\n            \n                \n                    Defined in src/dev/cache.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAllItems\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllItems()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('v1/cache')@ApiOperation({summary: 'Gets all cached items'})\n                \n            \n\n            \n                \n                    Defined in src/dev/cache.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { AppCache } from '@/shared/core/Cache';\nimport { Controller, Delete, Get } from '@nestjs/common';\nimport { ApiBearerAuth, ApiTags, ApiOperation } from '@nestjs/swagger';\n\n@ApiBearerAuth()\n@ApiTags('Cache')\n@Controller()\nexport class CacheController {\n  constructor() {}\n\n  @Get('v1/cache')\n  @ApiOperation({ summary: 'Gets all cached items' })\n  async getAllItems(): Promise {\n    return AppCache.getCache();\n  }\n\n  @Delete('v1/cache')\n  @ApiOperation({ summary: 'Deletes all cached items' })\n  async clearCache(): Promise {\n    AppCache.clear();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CacheObject.html":{"url":"classes/CacheObject.html","title":"class - CacheObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CacheObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/core/Cache.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                expireDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any, expireDate: Date)\n                    \n                \n                        \n                            \n                                Defined in src/shared/core/Cache.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        expireDate\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/core/Cache.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            expireDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/core/Cache.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import * as moment from 'moment';\n\nclass CacheObject {\n  constructor(data: any, expireDate: Date) {\n    this.expireDate = expireDate;\n    this.data = data;\n  }\n  public data: any;\n  public expireDate: Date;\n}\n\nclass AppCache {\n  static _cache: any = {};\n  public static add(key: string, data: CacheObject): void {\n    AppCache._cache[key] = data;\n  }\n\n  public static get(key: string, seconds: number, cb: any): any {\n    if (\n      AppCache._cache[key] &&\n      AppCache._cache[key].expireDate > moment.utc().toDate()\n    ) {\n      return AppCache._cache[key].data;\n    } else {\n      const data = cb();\n      const cacheObj = new CacheObject(\n        data,\n        moment.utc().add(seconds, 's').toDate(),\n      );\n      AppCache.add(key, cacheObj);\n      return cacheObj;\n    }\n  }\n\n  public static async getAsync(\n    key: string,\n    seconds: number,\n    cb: any,\n  ): Promise {\n    if (\n      AppCache._cache[key] &&\n      AppCache._cache[key].expireDate > moment.utc().toDate()\n    ) {\n      return AppCache._cache[key].data;\n    } else {\n      const data = await cb();\n      const cacheObj = new CacheObject(\n        data,\n        moment.utc().add(seconds, 's').toDate(),\n      );\n      AppCache.add(key, cacheObj);\n      return cacheObj.data;\n    }\n  }\n\n  public static clear(): void {\n    AppCache._cache = {};\n  }\n\n  public static getCache(): any {\n    return AppCache._cache;\n  }\n}\n\nexport { CacheObject, AppCache };\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_exports\n\n\n\ncluster_CoreModule_providers\n\n\n\n\nFireBase \n\nFireBase \n\n\n\nMailManager \n\nMailManager \n\n\n\nPrismaService \n\nPrismaService \n\n\n\nCoreModule\n\nCoreModule\n\nFireBase  -->\n\nCoreModule->FireBase \n\n\n\nMailManager  -->\n\nCoreModule->MailManager \n\n\n\nPrismaService  -->\n\nCoreModule->PrismaService \n\n\n\n\n\nFireBase\n\nFireBase\n\nCoreModule -->\n\nFireBase->CoreModule\n\n\n\n\n\nMailManager\n\nMailManager\n\nCoreModule -->\n\nMailManager->CoreModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nCoreModule -->\n\nPrismaService->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/shared/core/core.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FireBase\n                        \n                        \n                            MailManager\n                        \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FireBase\n                        \n                        \n                            MailManager\n                        \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    configure()\n                \n            \n\n\n            \n                \n                    Defined in src/shared/core/core.module.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, NestModule } from '@nestjs/common';\nimport FireBase from './FireBase';\nimport MailManager from './MailManager';\nimport { PrismaService } from './prisma.service';\n@Module({\n  imports: [],\n  providers: [MailManager, FireBase, PrismaService],\n  controllers: [],\n  exports: [MailManager, FireBase, PrismaService],\n})\nexport class CoreModule implements NestModule {\n  public configure() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateListingDto.html":{"url":"interfaces/CreateListingDto.html","title":"interface - CreateListingDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CreateListingDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/listing/dto/CreateListingDto.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        advantages\n                                \n                                \n                                        brandName\n                                \n                                \n                                        credentials\n                                \n                                \n                                            Optional\n                                        currencyId\n                                \n                                \n                                        description\n                                \n                                \n                                            Optional\n                                        hiringTypeId\n                                \n                                \n                                        id\n                                \n                                \n                                        isEdited\n                                \n                                \n                                        listingTypeId\n                                \n                                \n                                        media\n                                \n                                \n                                        name\n                                \n                                \n                                        offerDescription\n                                \n                                \n                                        offerPrice\n                                \n                                \n                                            Optional\n                                        otherHiring\n                                \n                                \n                                            Optional\n                                        otherPriceType\n                                \n                                \n                                        overallRating\n                                \n                                \n                                        ownerId\n                                \n                                \n                                        pageType\n                                \n                                \n                                        price\n                                \n                                \n                                        priceTypeId\n                                \n                                \n                                        privacy\n                                \n                                \n                                        socialLinks\n                                \n                                \n                                        status\n                                \n                                \n                                        stockAvailability\n                                \n                                \n                                        totalRatingCount\n                                \n                                \n                                        url\n                                \n                                \n                                        uses\n                                \n                                \n                                        viewsCount\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        advantages\n                                    \n                                \n                                \n                                    \n                                        advantages:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        brandName\n                                    \n                                \n                                \n                                    \n                                        brandName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        credentials\n                                    \n                                \n                                \n                                    \n                                        credentials:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        currencyId\n                                    \n                                \n                                \n                                    \n                                        currencyId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hiringTypeId\n                                    \n                                \n                                \n                                    \n                                        hiringTypeId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isEdited\n                                    \n                                \n                                \n                                    \n                                        isEdited:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        listingTypeId\n                                    \n                                \n                                \n                                    \n                                        listingTypeId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        media\n                                    \n                                \n                                \n                                    \n                                        media:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offerDescription\n                                    \n                                \n                                \n                                    \n                                        offerDescription:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offerPrice\n                                    \n                                \n                                \n                                    \n                                        offerPrice:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        otherHiring\n                                    \n                                \n                                \n                                    \n                                        otherHiring:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        otherPriceType\n                                    \n                                \n                                \n                                    \n                                        otherPriceType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        overallRating\n                                    \n                                \n                                \n                                    \n                                        overallRating:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ownerId\n                                    \n                                \n                                \n                                    \n                                        ownerId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageType\n                                    \n                                \n                                \n                                    \n                                        pageType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                    \n                                \n                                \n                                    \n                                        price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        priceTypeId\n                                    \n                                \n                                \n                                    \n                                        priceTypeId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        privacy\n                                    \n                                \n                                \n                                    \n                                        privacy:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        socialLinks\n                                    \n                                \n                                \n                                    \n                                        socialLinks:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stockAvailability\n                                    \n                                \n                                \n                                    \n                                        stockAvailability:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalRatingCount\n                                    \n                                \n                                \n                                    \n                                        totalRatingCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uses\n                                    \n                                \n                                \n                                    \n                                        uses:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewsCount\n                                    \n                                \n                                \n                                    \n                                        viewsCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export default interface CreateListingDto {\n  id: string;\n  ownerId: string;\n  pageType: string;\n  listingTypeId: string;\n  privacy: string;\n  media: any;\n  name: string;\n  brandName: string;\n  description: string;\n  credentials: string;\n  uses: string;\n  stockAvailability: string;\n  advantages: string;\n  url: string;\n  price: number;\n  priceTypeId: string;\n  otherPriceType?: string;\n  currencyId?: string;\n  hiringTypeId?: string;\n  otherHiring?: string;\n  offerPrice: number;\n  offerDescription: string;\n  socialLinks: any;\n  viewsCount: number;\n  status: number;\n  isEdited: boolean;\n\n  overallRating: number;\n  totalRatingCount: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateStoryDto.html":{"url":"interfaces/CreateStoryDto.html","title":"interface - CreateStoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CreateStoryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/story/dto/CreateStoryDto.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        body\n                                \n                                \n                                            Optional\n                                        conclusion\n                                \n                                \n                                        disclaimerId\n                                \n                                \n                                        headerLine\n                                \n                                \n                                        id\n                                \n                                \n                                        imaginativeYear\n                                \n                                \n                                            Optional\n                                        intro\n                                \n                                \n                                            Optional\n                                        listingId\n                                \n                                \n                                        media\n                                \n                                \n                                        ownerId\n                                \n                                \n                                        privacy\n                                \n                                \n                                        status\n                                \n                                \n                                            Optional\n                                        tagline\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                    \n                                \n                                \n                                    \n                                        body:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        conclusion\n                                    \n                                \n                                \n                                    \n                                        conclusion:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disclaimerId\n                                    \n                                \n                                \n                                    \n                                        disclaimerId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headerLine\n                                    \n                                \n                                \n                                    \n                                        headerLine:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imaginativeYear\n                                    \n                                \n                                \n                                    \n                                        imaginativeYear:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        intro\n                                    \n                                \n                                \n                                    \n                                        intro:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        listingId\n                                    \n                                \n                                \n                                    \n                                        listingId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        media\n                                    \n                                \n                                \n                                    \n                                        media:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ownerId\n                                    \n                                \n                                \n                                    \n                                        ownerId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        privacy\n                                    \n                                \n                                \n                                    \n                                        privacy:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tagline\n                                    \n                                \n                                \n                                    \n                                        tagline:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export default interface CreateStoryDto {\n  id: string;\n  ownerId: string;\n  listingId?: string;\n  privacy: string;\n  media: any;\n  headerLine: string;\n  disclaimerId: string;\n  intro?: string;\n  body?: string;\n  tagline?: string;\n  conclusion?: string;\n  imaginativeYear: number;\n  status: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Currency.html":{"url":"classes/Currency.html","title":"class - Currency","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Currency\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/Currency.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n            \n                Implements\n            \n            \n                            CurrencyAttributes\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                associations\n                            \n                            \n                                    Public\n                                code\n                            \n                            \n                                    Public\n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                localizedCurrencies\n                            \n                            \n                                    Public\n                                symbol\n                            \n                            \n                                    Public\n                                    Readonly\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            associations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Currency.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Currency.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Currency.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Currency.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                                Optional\n                            localizedCurrencies\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     LocalizedCurrency[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Currency.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            symbol\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Currency.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Currency.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Association, DataTypes, Model, Optional } from 'sequelize';\nimport sequelize from '../shared/core/Database';\nimport LocalizedCurrency from './Currency.Localized';\n\ninterface CurrencyAttributes {\n  id: string;\n  code: string;\n  symbol: string;\n}\n\ntype CurrencyCreationAttributes = Optional;\n\nexport default class Currency\n  extends Model\n  implements CurrencyAttributes\n{\n  public id!: string;\n  public code!: string;\n  public symbol!: string;\n\n  public readonly createdAt!: Date;\n  public readonly updatedAt!: Date;\n\n  public readonly localizedCurrencies?: LocalizedCurrency[];\n\n  public static associations: {\n    products: Association;\n  };\n}\n\nCurrency.init(\n  {\n    id: {\n      type: DataTypes.UUID,\n      autoIncrement: true,\n      primaryKey: true,\n    },\n    code: {\n      type: new DataTypes.STRING(10),\n      allowNull: false,\n    },\n    symbol: {\n      type: new DataTypes.STRING(10),\n      allowNull: false,\n    },\n  },\n  {\n    tableName: 'currencies',\n    sequelize,\n  },\n);\n\nCurrency.hasMany(LocalizedCurrency, {\n  sourceKey: 'id',\n  foreignKey: 'refId',\n  as: 'localized_currencies',\n});\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CurrencyAttributes.html":{"url":"interfaces/CurrencyAttributes.html","title":"interface - CurrencyAttributes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CurrencyAttributes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/Currency.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        code\n                                \n                                \n                                        id\n                                \n                                \n                                        symbol\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        symbol\n                                    \n                                \n                                \n                                    \n                                        symbol:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Association, DataTypes, Model, Optional } from 'sequelize';\nimport sequelize from '../shared/core/Database';\nimport LocalizedCurrency from './Currency.Localized';\n\ninterface CurrencyAttributes {\n  id: string;\n  code: string;\n  symbol: string;\n}\n\ntype CurrencyCreationAttributes = Optional;\n\nexport default class Currency\n  extends Model\n  implements CurrencyAttributes\n{\n  public id!: string;\n  public code!: string;\n  public symbol!: string;\n\n  public readonly createdAt!: Date;\n  public readonly updatedAt!: Date;\n\n  public readonly localizedCurrencies?: LocalizedCurrency[];\n\n  public static associations: {\n    products: Association;\n  };\n}\n\nCurrency.init(\n  {\n    id: {\n      type: DataTypes.UUID,\n      autoIncrement: true,\n      primaryKey: true,\n    },\n    code: {\n      type: new DataTypes.STRING(10),\n      allowNull: false,\n    },\n    symbol: {\n      type: new DataTypes.STRING(10),\n      allowNull: false,\n    },\n  },\n  {\n    tableName: 'currencies',\n    sequelize,\n  },\n);\n\nCurrency.hasMany(LocalizedCurrency, {\n  sourceKey: 'id',\n  foreignKey: 'refId',\n  as: 'localized_currencies',\n});\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CurrencyDto.html":{"url":"interfaces/CurrencyDto.html","title":"interface - CurrencyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CurrencyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lookups/dto/CurrencyDto.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        code\n                                \n                                \n                                        createdAt\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                                \n                                        standardCode\n                                \n                                \n                                        symbol\n                                \n                                \n                                        updatedAt\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        standardCode\n                                    \n                                \n                                \n                                    \n                                        standardCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        symbol\n                                    \n                                \n                                \n                                    \n                                        symbol:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export default interface CurrencyDto {\n  id: string;\n  name: string;\n  standardCode: string;\n  code: string;\n  symbol: string;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DevController.html":{"url":"controllers/DevController.html","title":"controller - DevController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DevController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dev/dev.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                databaseMigration\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            databaseMigration\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    databaseMigration(_req: Request, _res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('v1/database-migration')\n                \n            \n\n            \n                \n                    Defined in src/dev/dev.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Req, Res } from '@nestjs/common';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { Request, Response } from 'express';\nimport approot from 'app-root-path';\nimport Umzug from 'umzug';\nimport sequelize from './../shared/core/Database';\n// import { Sequelize } from \"sequelize\";\n\n// import { StatusCodes, getStatusText } from \"http-status-codes\";\n\nconst umzug = new Umzug({\n  storage: 'sequelize',\n  storageOptions: { sequelize },\n  migrations: {\n    params: [sequelize.getQueryInterface(), sequelize],\n    path: approot.resolve('migrations'),\n  },\n});\n\n@ApiBearerAuth()\n@ApiTags('DB_Migration')\n@Controller()\nexport class DevController {\n  constructor(/*private readonly listingService: ListingService*/) {}\n\n  @Get('v1/database-migration')\n  async databaseMigration(\n    @Req() _req: Request,\n    @Res() _res: Response,\n  ): Promise {\n    /*if (!req.isAuthenticated() || !req.user) {\n      res\n        .status(StatusCodes.NOT_FOUND)\n        .send(getStatusText(StatusCodes.NOT_FOUND));\n      return;\n    }*/\n    await umzug.up();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DevModule.html":{"url":"modules/DevModule.html","title":"module - DevModule","body":"\n                   \n\n\n\n\n    Modules\n    DevModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DevModule\n\n\n\ncluster_DevModule_imports\n\n\n\n\nCoreModule\n\nCoreModule\n\n\n\nDevModule\n\nDevModule\n\nDevModule -->\n\nCoreModule->DevModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/dev/dev.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            DevController\n                        \n                        \n                            CacheController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CoreModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    configure()\n                \n            \n\n\n            \n                \n                    Defined in src/dev/dev.module.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {\n  //MiddlewareConsumer,\n  Module,\n  NestModule,\n  //RequestMethod,\n} from '@nestjs/common';\nimport { DevController } from './dev.controller';\nimport { CoreModule } from './../shared/core/core.module';\nimport { CacheController } from './cache.controller';\n\n@Module({\n  imports: [CoreModule],\n  providers: [],\n  controllers: [DevController, CacheController],\n  exports: [],\n})\nexport class DevModule implements NestModule {\n  public configure() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Disclaimer.html":{"url":"classes/Disclaimer.html","title":"class - Disclaimer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Disclaimer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/Disclaimer.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n            \n                Implements\n            \n            \n                            DisclaimerAttributes\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                associations\n                            \n                            \n                                    Public\n                                code\n                            \n                            \n                                    Public\n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                localizedDisclaimers\n                            \n                            \n                                    Public\n                                    Readonly\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            associations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Disclaimer.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Disclaimer.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Disclaimer.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Disclaimer.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                                Optional\n                            localizedDisclaimers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     LocalizedDisclaimer[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Disclaimer.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Disclaimer.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Association, DataTypes, Model, Optional } from 'sequelize';\nimport sequelize from '../shared/core/Database';\nimport LocalizedDisclaimer from './Disclaimer.Localized';\n\ninterface DisclaimerAttributes {\n  id: string;\n  code: string;\n}\n\ntype DisclaimerCreationAttributes = Optional;\n\nexport default class Disclaimer\n  extends Model\n  implements DisclaimerAttributes\n{\n  public id!: string;\n  public code!: string;\n\n  public readonly createdAt!: Date;\n  public readonly updatedAt!: Date;\n\n  public readonly localizedDisclaimers?: LocalizedDisclaimer[];\n\n  public static associations: {\n    products: Association;\n  };\n}\n\nDisclaimer.init(\n  {\n    id: {\n      type: DataTypes.UUID,\n      autoIncrement: true,\n      primaryKey: true,\n    },\n    code: {\n      type: new DataTypes.STRING(150),\n      allowNull: false,\n    },\n  },\n  {\n    tableName: 'disclaimers',\n    sequelize,\n  },\n);\n\nDisclaimer.hasMany(LocalizedDisclaimer, {\n  sourceKey: 'id',\n  foreignKey: 'refId',\n  as: 'localized_disclaimers',\n});\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DisclaimerAttributes.html":{"url":"interfaces/DisclaimerAttributes.html","title":"interface - DisclaimerAttributes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DisclaimerAttributes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/Disclaimer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        code\n                                \n                                \n                                        id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Association, DataTypes, Model, Optional } from 'sequelize';\nimport sequelize from '../shared/core/Database';\nimport LocalizedDisclaimer from './Disclaimer.Localized';\n\ninterface DisclaimerAttributes {\n  id: string;\n  code: string;\n}\n\ntype DisclaimerCreationAttributes = Optional;\n\nexport default class Disclaimer\n  extends Model\n  implements DisclaimerAttributes\n{\n  public id!: string;\n  public code!: string;\n\n  public readonly createdAt!: Date;\n  public readonly updatedAt!: Date;\n\n  public readonly localizedDisclaimers?: LocalizedDisclaimer[];\n\n  public static associations: {\n    products: Association;\n  };\n}\n\nDisclaimer.init(\n  {\n    id: {\n      type: DataTypes.UUID,\n      autoIncrement: true,\n      primaryKey: true,\n    },\n    code: {\n      type: new DataTypes.STRING(150),\n      allowNull: false,\n    },\n  },\n  {\n    tableName: 'disclaimers',\n    sequelize,\n  },\n);\n\nDisclaimer.hasMany(LocalizedDisclaimer, {\n  sourceKey: 'id',\n  foreignKey: 'refId',\n  as: 'localized_disclaimers',\n});\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DisclaimerDto.html":{"url":"interfaces/DisclaimerDto.html","title":"interface - DisclaimerDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DisclaimerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lookups/dto/DisclaimerDto.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        code\n                                \n                                \n                                        createdAt\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                                \n                                        updatedAt\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export default interface DisclaimerDto {\n  id: string;\n  code: string;\n  name: string;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorCodes.html":{"url":"classes/ErrorCodes.html","title":"class - ErrorCodes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorCodes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/constants.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                GENERAL_ERROR\n                            \n                            \n                                    Static\n                                LISTING_HAVE_STORIES\n                            \n                            \n                                    Static\n                                NOT_FOUND\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            GENERAL_ERROR\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'GENERAL_ERROR'\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/constants.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            LISTING_HAVE_STORIES\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'LISTING_HAVE_STORIES'\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/constants.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            NOT_FOUND\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'NOT_FOUND'\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/constants.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export enum ListingStatus {\n  Draft,\n  Published,\n}\n\nexport class ErrorCodes {\n  public static LISTING_HAVE_STORIES = 'LISTING_HAVE_STORIES';\n  public static NOT_FOUND = 'NOT_FOUND';\n  public static GENERAL_ERROR = 'GENERAL_ERROR';\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorResult.html":{"url":"classes/ErrorResult.html","title":"class - ErrorResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/models/ErrorResult.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Result\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                error\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                error\n                            \n                            \n                                    Public\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(err: any)\n                    \n                \n                        \n                            \n                                Defined in src/shared/models/ErrorResult.ts:2\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        err\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/ErrorResult.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                            \n                                \n                                    Inherited from         Result\n\n                                \n                            \n                        \n                            \n                                    Defined in         Result:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                            \n                                \n                                    Inherited from         Result\n\n                                \n                            \n                        \n                            \n                                    Defined in         Result:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Result\n\n                                \n                            \n                        \n                            \n                                    Defined in         Result:6\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import Result from './Result';\nexport default class ErrorResult extends Result {\n  constructor(err: any) {\n    super('ERROR');\n    this.error = err;\n  }\n\n  public error: any;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FilesController.html":{"url":"controllers/FilesController.html","title":"controller - FilesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FilesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lookups/file.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteFile\n                            \n                            \n                                    Async\n                                duplicateFiles\n                            \n                            \n                                    Async\n                                getFile\n                            \n                            \n                                    Async\n                                uploadFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteFile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteFile(bucket: string, type: string, name: string, _res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Deletes a file given its bucket, type and name'})@Delete('v1/files/:bucket/:type/:name')\n                \n            \n\n            \n                \n                    Defined in src/lookups/file.controller.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bucket\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            duplicateFiles\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    duplicateFiles(mediaFiles: Array)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Duplicates the media files and returns new list with new file urls'})@Post('v1/files/duplicate')\n                \n            \n\n            \n                \n                    Defined in src/lookups/file.controller.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mediaFiles\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getFile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFile(bucket: string, type: string, name: string, _res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Gets a file given its bucket, type and name'})@Get('v1/files/:bucket/:type/:name')\n                \n            \n\n            \n                \n                    Defined in src/lookups/file.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bucket\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            uploadFile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadFile(bucket: string, type: string, _req: Request, file)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Uploads a file to a given bucket'})@UseInterceptors(undefined)@Post('v1/files/:bucket/:type/upload')\n                \n            \n\n            \n                \n                    Defined in src/lookups/file.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bucket\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Post,\n  UseInterceptors,\n  Param,\n  Get,\n  Res,\n  Req,\n  UploadedFile,\n  Delete,\n  Body,\n} from '@nestjs/common';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { Response, Request } from 'express';\nimport * as path from 'path';\nimport { v4 } from 'uuid';\nimport env from '@/shared/core/Environment';\nimport { LookupsService } from './lookups.service';\n\nconst domain = env.APP_DOMAIN;\n\n@ApiBearerAuth()\n@ApiTags('Files')\n@Controller()\nexport class FilesController {\n  constructor(private lookupService: LookupsService) {}\n\n  @ApiOperation({ summary: 'Uploads a file to a given bucket' })\n  @UseInterceptors(FileInterceptor('file'))\n  @Post('v1/files/:bucket/:type/upload')\n  async uploadFile(\n    @Param('bucket') bucket: string,\n    @Param('type') type: string,\n    @Req() _req: Request,\n    @UploadedFile() file,\n  ): Promise {\n    const fileName = `${v4()}${path.extname(file.originalname)}`;\n    this.lookupService.saveFile(bucket, type, fileName, file.buffer);\n    return {\n      url: `${domain}/api/v1/files/${bucket}/${type}/${fileName}`,\n      bucket: bucket,\n      type: type,\n      fileName: fileName,\n    };\n  }\n\n  @ApiOperation({ summary: 'Gets a file given its bucket, type and name' })\n  @Get('v1/files/:bucket/:type/:name')\n  async getFile(\n    @Param('bucket') bucket: string,\n    @Param('type') type: string,\n    @Param('name') name: string,\n    @Res() _res: Response,\n  ): Promise {\n    const file = this.lookupService.getFile(bucket, type, name);\n    if (!file) return _res.sendStatus(404);\n    return _res.sendFile(file);\n  }\n\n  @ApiOperation({ summary: 'Deletes a file given its bucket, type and name' })\n  @Delete('v1/files/:bucket/:type/:name')\n  async deleteFile(\n    @Param('bucket') bucket: string,\n    @Param('type') type: string,\n    @Param('name') name: string,\n    @Res() _res: Response,\n  ): Promise {\n    const success = this.lookupService.deleteFile(bucket, type, name);\n    if (success === false) return _res.sendStatus(404);\n    return _res.send({ status: 'SUCCESS' });\n  }\n\n  @ApiOperation({\n    summary:\n      'Duplicates the media files and returns new list with new file urls',\n  })\n  @Post('v1/files/duplicate')\n  async duplicateFiles(@Body() mediaFiles: Array): Promise {\n    if (mediaFiles) {\n      const newMediaFiles: Array = [];\n      for (const media of mediaFiles) {\n        if (media.bucket && media.type && media.fileName) {\n          const newFileName = this.lookupService.duplicateFile(\n            media.bucket,\n            media.type,\n            media.fileName,\n          );\n          const newMedia = {\n            url: media.url.replace(media.fileName, newFileName),\n            fileName: newFileName,\n            type: media.type,\n            bucket: media.bucket,\n          };\n          newMediaFiles.push(newMedia);\n        }\n      }\n      return newMediaFiles;\n    }\n    return null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FireBase.html":{"url":"injectables/FireBase.html","title":"injectable - FireBase","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FireBase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/core/FireBase.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                getFirebaseDynamicLink\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getFirebaseDynamicLink\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFirebaseDynamicLink(recoveryToken: string, email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/core/FireBase.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    recoveryToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport axios from 'axios';\n@Injectable()\nexport default class FireBase {\n  public async getFirebaseDynamicLink(recoveryToken: string, email: string) {\n    return axios.post(\n      'https://firebasedynamiclinks.googleapis.com/v1/shortLinks?key=AIzaSyA-HrLLRVEdatU_-ebXzHu7XyFWe6qAqhc',\n      {\n        dynamicLinkInfo: {\n          domainUriPrefix: 'https://imaginativenews.page.link',\n          link: `https://imaginativenews.page.link/forgot-password?token=${recoveryToken}&email=${email}`,\n          androidInfo: {\n            androidPackageName: 'com.imaginative_news.imaginative_news',\n          },\n          iosInfo: { iosBundleId: 'com.imaginative-news.imaginative-news' },\n        },\n      },\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HiringType.html":{"url":"classes/HiringType.html","title":"class - HiringType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HiringType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/HiringType.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n            \n                Implements\n            \n            \n                            HiringTypeAttributes\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                associations\n                            \n                            \n                                    Public\n                                code\n                            \n                            \n                                    Public\n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                localizedHiringTypes\n                            \n                            \n                                    Public\n                                    Readonly\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            associations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/HiringType.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/HiringType.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/HiringType.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/HiringType.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                                Optional\n                            localizedHiringTypes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     LocalizedHiringType[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/HiringType.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/HiringType.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Association, DataTypes, Model, Optional } from 'sequelize';\nimport sequelize from '../shared/core/Database';\nimport LocalizedHiringType from './HiringType.Localized';\n\ninterface HiringTypeAttributes {\n  id: string;\n  code: string;\n}\n\ntype HiringTypeCreationAttributes = Optional;\n\nexport default class HiringType\n  extends Model\n  implements HiringTypeAttributes\n{\n  public id!: string;\n  public code!: string;\n\n  public readonly createdAt!: Date;\n  public readonly updatedAt!: Date;\n\n  public readonly localizedHiringTypes?: LocalizedHiringType[];\n\n  public static associations: {\n    products: Association;\n  };\n}\n\nHiringType.init(\n  {\n    id: {\n      type: DataTypes.UUID,\n      autoIncrement: true,\n      primaryKey: true,\n    },\n    code: {\n      type: new DataTypes.STRING(128),\n      allowNull: false,\n    },\n  },\n  {\n    tableName: 'hiring_types',\n    sequelize,\n  },\n);\n\nHiringType.hasMany(LocalizedHiringType, {\n  sourceKey: 'id',\n  foreignKey: 'refId',\n  as: 'localized_hiring_types',\n});\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HiringTypeAttributes.html":{"url":"interfaces/HiringTypeAttributes.html","title":"interface - HiringTypeAttributes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HiringTypeAttributes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/HiringType.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        code\n                                \n                                \n                                        id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Association, DataTypes, Model, Optional } from 'sequelize';\nimport sequelize from '../shared/core/Database';\nimport LocalizedHiringType from './HiringType.Localized';\n\ninterface HiringTypeAttributes {\n  id: string;\n  code: string;\n}\n\ntype HiringTypeCreationAttributes = Optional;\n\nexport default class HiringType\n  extends Model\n  implements HiringTypeAttributes\n{\n  public id!: string;\n  public code!: string;\n\n  public readonly createdAt!: Date;\n  public readonly updatedAt!: Date;\n\n  public readonly localizedHiringTypes?: LocalizedHiringType[];\n\n  public static associations: {\n    products: Association;\n  };\n}\n\nHiringType.init(\n  {\n    id: {\n      type: DataTypes.UUID,\n      autoIncrement: true,\n      primaryKey: true,\n    },\n    code: {\n      type: new DataTypes.STRING(128),\n      allowNull: false,\n    },\n  },\n  {\n    tableName: 'hiring_types',\n    sequelize,\n  },\n);\n\nHiringType.hasMany(LocalizedHiringType, {\n  sourceKey: 'id',\n  foreignKey: 'refId',\n  as: 'localized_hiring_types',\n});\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HiringTypeDto.html":{"url":"interfaces/HiringTypeDto.html","title":"interface - HiringTypeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HiringTypeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lookups/dto/HiringTypeDto.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        code\n                                \n                                \n                                        createdAt\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                                \n                                        updatedAt\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export default interface HiringTypeDto {\n  id: string;\n  code: string;\n  name: string;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IGoogleProfile.html":{"url":"interfaces/IGoogleProfile.html","title":"interface - IGoogleProfile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IGoogleProfile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/GooglePofile.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        email\n                                \n                                \n                                            Optional\n                                        family_name\n                                \n                                \n                                            Optional\n                                        gender\n                                \n                                \n                                            Optional\n                                        given_name\n                                \n                                \n                                            Optional\n                                        hd\n                                \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                            Optional\n                                        link\n                                \n                                \n                                            Optional\n                                        locale\n                                \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                            Optional\n                                        picture\n                                \n                                \n                                            Optional\n                                        verified_email\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        family_name\n                                    \n                                \n                                \n                                    \n                                        family_name:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gender\n                                    \n                                \n                                \n                                    \n                                        gender:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        given_name\n                                    \n                                \n                                \n                                    \n                                        given_name:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hd\n                                    \n                                \n                                \n                                    \n                                        hd:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        locale\n                                    \n                                \n                                \n                                    \n                                        locale:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        picture\n                                    \n                                \n                                \n                                    \n                                        picture:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        verified_email\n                                    \n                                \n                                \n                                    \n                                        verified_email:     boolean | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export default interface IGoogleProfile {\n  email?: string | null;\n  family_name?: string | null;\n  gender?: string | null;\n  given_name?: string | null;\n  hd?: string | null;\n  id?: string | null;\n  link?: string | null;\n  locale?: string | null;\n  name?: string | null;\n  picture?: string | null;\n  verified_email?: boolean | null;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/KeyValuePair.html":{"url":"classes/KeyValuePair.html","title":"class - KeyValuePair","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  KeyValuePair\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/models/KeyValuePair.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                key\n                            \n                            \n                                    Public\n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(k: K, v: V)\n                    \n                \n                        \n                            \n                                Defined in src/shared/models/KeyValuePair.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        k\n                                                  \n                                                        \n                                                                    K\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        v\n                                                  \n                                                        \n                                                                    V\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     K\n\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/KeyValuePair.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     V\n\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/KeyValuePair.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export default class KeyValuePair {\n  constructor(k: K, v: V) {\n    this.key = k;\n    this.value = v;\n  }\n  public key: K;\n  public value: V;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Listing.html":{"url":"classes/Listing.html","title":"class - Listing","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Listing\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/Listing.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n            \n                Implements\n            \n            \n                            ListingAttributes\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                advantages\n                            \n                            \n                                    Public\n                                brandName\n                            \n                            \n                                    Public\n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Public\n                                credentials\n                            \n                            \n                                    Public\n                                    Optional\n                                currencyId\n                            \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                    Optional\n                                hiringTypeId\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                isEdited\n                            \n                            \n                                    Public\n                                listingTypeId\n                            \n                            \n                                    Public\n                                media\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                offerDescription\n                            \n                            \n                                    Public\n                                offerPrice\n                            \n                            \n                                    Public\n                                    Optional\n                                otherHiring\n                            \n                            \n                                    Public\n                                    Optional\n                                otherPriceType\n                            \n                            \n                                    Public\n                                overallRating\n                            \n                            \n                                    Public\n                                ownerId\n                            \n                            \n                                    Public\n                                pageType\n                            \n                            \n                                    Public\n                                price\n                            \n                            \n                                    Public\n                                priceTypeId\n                            \n                            \n                                    Public\n                                privacy\n                            \n                            \n                                    Public\n                                socialLinks\n                            \n                            \n                                    Public\n                                status\n                            \n                            \n                                    Public\n                                stockAvailability\n                            \n                            \n                                    Public\n                                totalRatingCount\n                            \n                            \n                                    Public\n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Public\n                                url\n                            \n                            \n                                    Public\n                                uses\n                            \n                            \n                                    Public\n                                viewsCount\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            advantages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Listing.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            brandName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Listing.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Listing.ts:70\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            credentials\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Listing.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            currencyId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Listing.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Listing.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            hiringTypeId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Listing.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Listing.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isEdited\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Listing.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            listingTypeId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Listing.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            media\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Listing.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Listing.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            offerDescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Listing.ts:63\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            offerPrice\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Listing.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            otherHiring\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Listing.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            otherPriceType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Listing.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            overallRating\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Listing.ts:68\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ownerId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Listing.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pageType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Listing.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            price\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Listing.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            priceTypeId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Listing.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            privacy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Listing.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            socialLinks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Listing.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Listing.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            stockAvailability\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Listing.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            totalRatingCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Listing.ts:69\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Listing.ts:71\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Listing.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uses\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Listing.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            viewsCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Listing.ts:65\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { DataTypes, Model, Optional } from 'sequelize';\nimport sequelize from '../shared/core/Database';\n\ninterface ListingAttributes {\n  id: string;\n  ownerId: string;\n  pageType: string;\n  listingTypeId: string;\n  privacy: string;\n  media: any;\n  name: string;\n  brandName: string;\n  description: string;\n  credentials: string;\n  uses: string;\n  stockAvailability: string;\n  advantages: string;\n  url: string;\n  price: number;\n  priceTypeId: string;\n  otherPriceType?: string;\n  currencyId?: string;\n  hiringTypeId?: string;\n  otherHiring?: string;\n  offerPrice: number;\n  offerDescription: string;\n  socialLinks: any;\n  viewsCount: number;\n  status: number;\n  isEdited: boolean;\n\n  overallRating: number;\n  totalRatingCount: number;\n}\n\ntype ListingCreationAttributes = Optional;\n\nexport default class Listing\n  extends Model\n  implements ListingAttributes\n{\n  public id!: string;\n  public ownerId!: string;\n  public pageType!: string;\n  public listingTypeId!: string;\n  public privacy!: string;\n  public media!: any;\n  public name!: string;\n  public brandName!: string;\n  public description!: string;\n  public credentials!: string;\n  public stockAvailability!: string;\n  public advantages!: string;\n  public uses!: string;\n  public url!: string;\n  public priceTypeId!: string;\n  public otherPriceType?: string;\n  public price!: number;\n  public currencyId?: string;\n  public hiringTypeId?: string;\n  public otherHiring?: string;\n  public offerPrice!: number;\n  public offerDescription!: string;\n  public socialLinks!: any;\n  public viewsCount!: number;\n  public status!: number;\n  public isEdited!: boolean;\n  public overallRating!: number;\n  public totalRatingCount!: number;\n  public readonly createdAt!: Date;\n  public readonly updatedAt!: Date;\n}\n\nListing.init(\n  {\n    id: {\n      type: DataTypes.UUID,\n      autoIncrement: true,\n      primaryKey: true,\n    },\n    ownerId: {\n      type: new DataTypes.STRING(50),\n      allowNull: false,\n    },\n    pageType: {\n      type: new DataTypes.STRING(50),\n      allowNull: false,\n    },\n    listingTypeId: {\n      type: new DataTypes.STRING(50),\n      allowNull: false,\n    },\n    privacy: {\n      type: new DataTypes.STRING(50),\n      allowNull: false,\n    },\n    media: {\n      type: DataTypes.JSON,\n      allowNull: false,\n    },\n    name: {\n      type: new DataTypes.STRING(200),\n      allowNull: false,\n    },\n    brandName: {\n      type: new DataTypes.STRING(200),\n      allowNull: false,\n    },\n    description: {\n      type: new DataTypes.STRING(3000),\n      allowNull: false,\n    },\n    stockAvailability: {\n      type: new DataTypes.STRING(70),\n      allowNull: false,\n    },\n    advantages: {\n      type: new DataTypes.STRING(2000),\n      allowNull: false,\n    },\n    uses: {\n      type: new DataTypes.STRING(1500),\n      allowNull: false,\n    },\n    credentials: {\n      type: new DataTypes.STRING(3000),\n      allowNull: false,\n    },\n    url: {\n      type: new DataTypes.STRING(400),\n      allowNull: false,\n    },\n    priceTypeId: {\n      type: new DataTypes.STRING(50),\n      allowNull: false,\n    },\n    otherPriceType: {\n      type: new DataTypes.STRING(150),\n      allowNull: false,\n    },\n    price: {\n      type: DataTypes.NUMBER,\n      allowNull: false,\n    },\n    currencyId: {\n      type: new DataTypes.STRING(50),\n      allowNull: true,\n    },\n    hiringTypeId: {\n      type: new DataTypes.STRING(50),\n      allowNull: true,\n    },\n    otherHiring: {\n      type: new DataTypes.STRING(150),\n      allowNull: true,\n    },\n    offerPrice: {\n      type: DataTypes.NUMBER,\n      allowNull: false,\n    },\n    offerDescription: {\n      type: new DataTypes.STRING(3000),\n      allowNull: false,\n    },\n    socialLinks: {\n      type: DataTypes.JSON,\n      allowNull: false,\n    },\n    viewsCount: {\n      type: DataTypes.NUMBER,\n      allowNull: false,\n    },\n    status: {\n      type: DataTypes.NUMBER,\n      allowNull: false,\n    },\n    isEdited: {\n      type: DataTypes.BOOLEAN,\n      allowNull: false,\n    },\n    overallRating: {\n      type: DataTypes.FLOAT,\n      allowNull: false,\n    },\n    totalRatingCount: {\n      type: DataTypes.FLOAT,\n      allowNull: false,\n    },\n  },\n  {\n    tableName: 'listings',\n    sequelize,\n  },\n);\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ListingAttributes.html":{"url":"interfaces/ListingAttributes.html","title":"interface - ListingAttributes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ListingAttributes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/Listing.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        advantages\n                                \n                                \n                                        brandName\n                                \n                                \n                                        credentials\n                                \n                                \n                                            Optional\n                                        currencyId\n                                \n                                \n                                        description\n                                \n                                \n                                            Optional\n                                        hiringTypeId\n                                \n                                \n                                        id\n                                \n                                \n                                        isEdited\n                                \n                                \n                                        listingTypeId\n                                \n                                \n                                        media\n                                \n                                \n                                        name\n                                \n                                \n                                        offerDescription\n                                \n                                \n                                        offerPrice\n                                \n                                \n                                            Optional\n                                        otherHiring\n                                \n                                \n                                            Optional\n                                        otherPriceType\n                                \n                                \n                                        overallRating\n                                \n                                \n                                        ownerId\n                                \n                                \n                                        pageType\n                                \n                                \n                                        price\n                                \n                                \n                                        priceTypeId\n                                \n                                \n                                        privacy\n                                \n                                \n                                        socialLinks\n                                \n                                \n                                        status\n                                \n                                \n                                        stockAvailability\n                                \n                                \n                                        totalRatingCount\n                                \n                                \n                                        url\n                                \n                                \n                                        uses\n                                \n                                \n                                        viewsCount\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        advantages\n                                    \n                                \n                                \n                                    \n                                        advantages:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        brandName\n                                    \n                                \n                                \n                                    \n                                        brandName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        credentials\n                                    \n                                \n                                \n                                    \n                                        credentials:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        currencyId\n                                    \n                                \n                                \n                                    \n                                        currencyId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hiringTypeId\n                                    \n                                \n                                \n                                    \n                                        hiringTypeId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isEdited\n                                    \n                                \n                                \n                                    \n                                        isEdited:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        listingTypeId\n                                    \n                                \n                                \n                                    \n                                        listingTypeId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        media\n                                    \n                                \n                                \n                                    \n                                        media:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offerDescription\n                                    \n                                \n                                \n                                    \n                                        offerDescription:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offerPrice\n                                    \n                                \n                                \n                                    \n                                        offerPrice:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        otherHiring\n                                    \n                                \n                                \n                                    \n                                        otherHiring:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        otherPriceType\n                                    \n                                \n                                \n                                    \n                                        otherPriceType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        overallRating\n                                    \n                                \n                                \n                                    \n                                        overallRating:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ownerId\n                                    \n                                \n                                \n                                    \n                                        ownerId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageType\n                                    \n                                \n                                \n                                    \n                                        pageType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                    \n                                \n                                \n                                    \n                                        price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        priceTypeId\n                                    \n                                \n                                \n                                    \n                                        priceTypeId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        privacy\n                                    \n                                \n                                \n                                    \n                                        privacy:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        socialLinks\n                                    \n                                \n                                \n                                    \n                                        socialLinks:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stockAvailability\n                                    \n                                \n                                \n                                    \n                                        stockAvailability:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalRatingCount\n                                    \n                                \n                                \n                                    \n                                        totalRatingCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uses\n                                    \n                                \n                                \n                                    \n                                        uses:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewsCount\n                                    \n                                \n                                \n                                    \n                                        viewsCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DataTypes, Model, Optional } from 'sequelize';\nimport sequelize from '../shared/core/Database';\n\ninterface ListingAttributes {\n  id: string;\n  ownerId: string;\n  pageType: string;\n  listingTypeId: string;\n  privacy: string;\n  media: any;\n  name: string;\n  brandName: string;\n  description: string;\n  credentials: string;\n  uses: string;\n  stockAvailability: string;\n  advantages: string;\n  url: string;\n  price: number;\n  priceTypeId: string;\n  otherPriceType?: string;\n  currencyId?: string;\n  hiringTypeId?: string;\n  otherHiring?: string;\n  offerPrice: number;\n  offerDescription: string;\n  socialLinks: any;\n  viewsCount: number;\n  status: number;\n  isEdited: boolean;\n\n  overallRating: number;\n  totalRatingCount: number;\n}\n\ntype ListingCreationAttributes = Optional;\n\nexport default class Listing\n  extends Model\n  implements ListingAttributes\n{\n  public id!: string;\n  public ownerId!: string;\n  public pageType!: string;\n  public listingTypeId!: string;\n  public privacy!: string;\n  public media!: any;\n  public name!: string;\n  public brandName!: string;\n  public description!: string;\n  public credentials!: string;\n  public stockAvailability!: string;\n  public advantages!: string;\n  public uses!: string;\n  public url!: string;\n  public priceTypeId!: string;\n  public otherPriceType?: string;\n  public price!: number;\n  public currencyId?: string;\n  public hiringTypeId?: string;\n  public otherHiring?: string;\n  public offerPrice!: number;\n  public offerDescription!: string;\n  public socialLinks!: any;\n  public viewsCount!: number;\n  public status!: number;\n  public isEdited!: boolean;\n  public overallRating!: number;\n  public totalRatingCount!: number;\n  public readonly createdAt!: Date;\n  public readonly updatedAt!: Date;\n}\n\nListing.init(\n  {\n    id: {\n      type: DataTypes.UUID,\n      autoIncrement: true,\n      primaryKey: true,\n    },\n    ownerId: {\n      type: new DataTypes.STRING(50),\n      allowNull: false,\n    },\n    pageType: {\n      type: new DataTypes.STRING(50),\n      allowNull: false,\n    },\n    listingTypeId: {\n      type: new DataTypes.STRING(50),\n      allowNull: false,\n    },\n    privacy: {\n      type: new DataTypes.STRING(50),\n      allowNull: false,\n    },\n    media: {\n      type: DataTypes.JSON,\n      allowNull: false,\n    },\n    name: {\n      type: new DataTypes.STRING(200),\n      allowNull: false,\n    },\n    brandName: {\n      type: new DataTypes.STRING(200),\n      allowNull: false,\n    },\n    description: {\n      type: new DataTypes.STRING(3000),\n      allowNull: false,\n    },\n    stockAvailability: {\n      type: new DataTypes.STRING(70),\n      allowNull: false,\n    },\n    advantages: {\n      type: new DataTypes.STRING(2000),\n      allowNull: false,\n    },\n    uses: {\n      type: new DataTypes.STRING(1500),\n      allowNull: false,\n    },\n    credentials: {\n      type: new DataTypes.STRING(3000),\n      allowNull: false,\n    },\n    url: {\n      type: new DataTypes.STRING(400),\n      allowNull: false,\n    },\n    priceTypeId: {\n      type: new DataTypes.STRING(50),\n      allowNull: false,\n    },\n    otherPriceType: {\n      type: new DataTypes.STRING(150),\n      allowNull: false,\n    },\n    price: {\n      type: DataTypes.NUMBER,\n      allowNull: false,\n    },\n    currencyId: {\n      type: new DataTypes.STRING(50),\n      allowNull: true,\n    },\n    hiringTypeId: {\n      type: new DataTypes.STRING(50),\n      allowNull: true,\n    },\n    otherHiring: {\n      type: new DataTypes.STRING(150),\n      allowNull: true,\n    },\n    offerPrice: {\n      type: DataTypes.NUMBER,\n      allowNull: false,\n    },\n    offerDescription: {\n      type: new DataTypes.STRING(3000),\n      allowNull: false,\n    },\n    socialLinks: {\n      type: DataTypes.JSON,\n      allowNull: false,\n    },\n    viewsCount: {\n      type: DataTypes.NUMBER,\n      allowNull: false,\n    },\n    status: {\n      type: DataTypes.NUMBER,\n      allowNull: false,\n    },\n    isEdited: {\n      type: DataTypes.BOOLEAN,\n      allowNull: false,\n    },\n    overallRating: {\n      type: DataTypes.FLOAT,\n      allowNull: false,\n    },\n    totalRatingCount: {\n      type: DataTypes.FLOAT,\n      allowNull: false,\n    },\n  },\n  {\n    tableName: 'listings',\n    sequelize,\n  },\n);\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ListingController.html":{"url":"controllers/ListingController.html","title":"controller - ListingController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ListingController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/listing/listing.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createListing\n                            \n                            \n                                    Async\n                                deleteListing\n                            \n                            \n                                    Async\n                                deleteListingReview\n                            \n                            \n                                    Async\n                                getAllListings\n                            \n                            \n                                    Async\n                                getListing\n                            \n                            \n                                    Async\n                                getListingReviews\n                            \n                            \n                                    Async\n                                searchListings\n                            \n                            \n                                    Async\n                                toggleListingFollow\n                            \n                            \n                                    Async\n                                updateListing\n                            \n                            \n                                    Async\n                                upsertListingReview\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createListing\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createListing(lang: string, userid: string, listingData: CreateListingDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Create new listing'})@ApiResponse({status: 201, description: 'The listing has been successfully created.'})@ApiBody({type: 'CreateListingDto'})@Post('v1/listings')\n                \n            \n\n            \n                \n                    Defined in src/listing/listing.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'en'\n                                    \n\n                                \n                                \n                                    userid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    listingData\n                                    \n                                                CreateListingDto\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteListing\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteListing(userId: string, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Deletes a listing given its id'})@ApiResponse({status: 200, description: 'Returns Operation Result'})@Delete('v1/listings/:id')\n                \n            \n\n            \n                \n                    Defined in src/listing/listing.controller.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteListingReview\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteListingReview(userId: string, listingId: string, reviewId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Deletes a review given its id'})@ApiResponse({status: 200, description: 'Returns Operation Result'})@Delete('v1/listings/:listingId/reviews/:reviewId')\n                \n            \n\n            \n                \n                    Defined in src/listing/listing.controller.ts:174\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    listingId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reviewId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAllListings\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllListings(lang: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Gets all listings'})@ApiResponse({status: 200, description: 'Return all listings'})@Get('v1/listings')\n                \n            \n\n            \n                \n                    Defined in src/listing/listing.controller.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'en'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getListing\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getListing(userId: string, lang: string, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Gets a listing given its id'})@ApiResponse({status: 200, description: 'Returns the listing'})@Get('v1/listings/:id')\n                \n            \n\n            \n                \n                    Defined in src/listing/listing.controller.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'en'\n                                    \n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getListingReviews\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getListingReviews(listingId: string, pageIndex: number, pageSize: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Gets page of reviews for a given listing Id'})@ApiResponse({status: 200, description: 'Return page of reviews for a given listing'})@Get('v1/listings/:listingId/reviews')\n                \n            \n\n            \n                \n                    Defined in src/listing/listing.controller.ts:158\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    listingId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pageIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pageSize\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            searchListings\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    searchListings(userId: string, lang: string, searchModel: SearchListingDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Searches listings using provided field criteria'})@ApiResponse({status: 200, description: 'Return all matched listings listings'})@ApiBody({type: 'SearchListingDto'})@Post('v1/listings/search')\n                \n            \n\n            \n                \n                    Defined in src/listing/listing.controller.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'en'\n                                    \n\n                                \n                                \n                                    searchModel\n                                    \n                                                SearchListingDto\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            toggleListingFollow\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleListingFollow(userId: string, toggleModel: ToggleListingFollowDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Toggles the follow record of a given listing'})@ApiResponse({status: 201, description: 'Operation result object'})@ApiBody({type: 'ToggleListingFollowDto'})@Post('v1/listings/toggle-listing-follow')\n                \n            \n\n            \n                \n                    Defined in src/listing/listing.controller.ts:191\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    toggleModel\n                                    \n                                                ToggleListingFollowDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateListing\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateListing(lang: string, id: string, listingData: CreateListingDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Updates an existing listing'})@ApiResponse({status: 201, description: 'The listing has been successfully updated.'})@ApiBody({type: 'CreateListingDto'})@Put('v1/listings/:id')\n                \n            \n\n            \n                \n                    Defined in src/listing/listing.controller.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'en'\n                                    \n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    listingData\n                                    \n                                                CreateListingDto\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            upsertListingReview\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    upsertListingReview(userId: string, id: string, listingReviewData: CreateListingReviewDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Adds/Updates a review'})@ApiResponse({status: 201, description: 'The review has been successfully added/updated.'})@ApiBody({type: 'CreateListingReviewDto'})@Post('v1/listings/:id/reviews')\n                \n            \n\n            \n                \n                    Defined in src/listing/listing.controller.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    listingReviewData\n                                    \n                                            CreateListingReviewDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  Post,\n  Param,\n  Put,\n  Headers,\n  Delete,\n  Query,\n} from '@nestjs/common';\nimport {\n  ApiBearerAuth,\n  ApiTags,\n  ApiOperation,\n  ApiResponse,\n  ApiBody,\n} from '@nestjs/swagger';\nimport { ListingService } from './listing.service';\nimport CreateListingDto from './dto/CreateListingDto';\nimport { User } from '@/user/user.decorator';\nimport ListingDto from './dto/ListingDto';\nimport { v4 } from 'uuid';\nimport { execOperation } from './../utils/Utils';\nimport SearchListingDto from './dto/SearchListingDto';\nimport CreateListingReviewDto from './dto/CreateListingReviewDto';\nimport ListingReviewDto from './dto/ListingReviewDto';\nimport ToggleListingFollowDto from './dto/ToggleListingFollowDto';\nimport OperationResult from '@/shared/models/OperationResult';\n\n@ApiBearerAuth()\n@ApiTags('Listings')\n@Controller()\nexport class ListingController {\n  constructor(private readonly listingService: ListingService) {}\n\n  @ApiOperation({ summary: 'Create new listing' })\n  @ApiResponse({\n    status: 201,\n    description: 'The listing has been successfully created.',\n  })\n  @ApiBody({ type: 'CreateListingDto' })\n  @Post('v1/listings')\n  async createListing(\n    @Headers('lang') lang = 'en',\n    @User('id') userid: string,\n    @Body() listingData: CreateListingDto,\n  ): Promise {\n    return await execOperation(async () => {\n      listingData.ownerId = userid;\n      listingData.id = v4();\n      listingData.viewsCount = 0;\n      listingData.url = listingData.url ?? '';\n      listingData.isEdited = false;\n      const listing = await this.listingService.addListing(lang, listingData);\n      return listing;\n    });\n  }\n\n  @ApiOperation({ summary: 'Updates an existing listing' })\n  @ApiResponse({\n    status: 201,\n    description: 'The listing has been successfully updated.',\n  })\n  @ApiBody({ type: 'CreateListingDto' })\n  @Put('v1/listings/:id')\n  async updateListing(\n    @Headers('lang') lang = 'en',\n    @Param('id') id: string,\n    @Body() listingData: CreateListingDto,\n  ): Promise {\n    listingData.isEdited = true;\n    const listing = await this.listingService.updateListing(\n      id,\n      lang,\n      listingData,\n    );\n    return listing;\n  }\n\n  @ApiOperation({ summary: 'Gets all listings' })\n  @ApiResponse({ status: 200, description: 'Return all listings' })\n  @Get('v1/listings')\n  async getAllListings(@Headers('lang') lang = 'en'): Promise {\n    const listings = await this.listingService.getAllListings(lang);\n    return listings;\n  }\n\n  @ApiOperation({ summary: 'Searches listings using provided field criteria' })\n  @ApiResponse({\n    status: 200,\n    description: 'Return all matched listings listings',\n  })\n  @ApiBody({ type: 'SearchListingDto' })\n  @Post('v1/listings/search')\n  async searchListings(\n    @User('id') userId: string,\n    @Headers('lang') lang = 'en',\n    @Body() searchModel: SearchListingDto,\n  ): Promise {\n    const listings = await this.listingService.searchListings(\n      searchModel,\n      lang,\n      userId,\n    );\n    return listings;\n  }\n\n  @ApiOperation({ summary: 'Gets a listing given its id' })\n  @ApiResponse({ status: 200, description: 'Returns the listing' })\n  @Get('v1/listings/:id')\n  async getListing(\n    @User('id') userId: string,\n    @Headers('lang') lang = 'en',\n    @Param('id') id: string,\n  ): Promise {\n    const listing = await this.listingService.getListing(id, lang, userId);\n    return listing;\n  }\n\n  @ApiOperation({ summary: 'Deletes a listing given its id' })\n  @ApiResponse({ status: 200, description: 'Returns Operation Result' })\n  @Delete('v1/listings/:id')\n  async deleteListing(\n    @User('id') userId: string,\n    @Param('id') id: string,\n  ): Promise {\n    const result = await this.listingService.deleteListing(userId, id);\n    return result;\n  }\n\n  @ApiOperation({ summary: 'Adds/Updates a review' })\n  @ApiResponse({\n    status: 201,\n    description: 'The review has been successfully added/updated.',\n  })\n  @ApiBody({ type: 'CreateListingReviewDto' })\n  @Post('v1/listings/:id/reviews')\n  async upsertListingReview(\n    @User('id') userId: string,\n    @Param('id') id: string,\n    @Body() listingReviewData: CreateListingReviewDto,\n  ): Promise {\n    listingReviewData.userId = userId;\n    listingReviewData.listingId = id;\n    const listingReview = await this.listingService.upsertReview(\n      listingReviewData,\n    );\n    return listingReview;\n  }\n\n  @ApiOperation({ summary: 'Gets page of reviews for a given listing Id' })\n  @ApiResponse({\n    status: 200,\n    description: 'Return page of reviews for a given listing',\n  })\n  @Get('v1/listings/:listingId/reviews')\n  async getListingReviews(\n    @Param('listingId') listingId: string,\n    @Query('pageIndex') pageIndex: number,\n    @Query('pageSize') pageSize: number,\n  ): Promise {\n    const reviews = await this.listingService.getListingReviews(\n      listingId,\n      pageIndex ?? 1,\n      pageSize ?? 10,\n    );\n    return reviews;\n  }\n\n  @ApiOperation({ summary: 'Deletes a review given its id' })\n  @ApiResponse({ status: 200, description: 'Returns Operation Result' })\n  @Delete('v1/listings/:listingId/reviews/:reviewId')\n  async deleteListingReview(\n    @User('id') userId: string,\n    @Param('listingId') listingId: string,\n    @Param('reviewId') reviewId: string,\n  ): Promise {\n    const result = await this.listingService.deleteReview(\n      userId,\n      reviewId,\n      listingId,\n    );\n    return result;\n  }\n\n  @ApiOperation({ summary: 'Toggles the follow record of a given listing' })\n  @ApiResponse({ status: 201, description: 'Operation result object' })\n  @ApiBody({ type: 'ToggleListingFollowDto' })\n  @Post('v1/listings/toggle-listing-follow')\n  async toggleListingFollow(\n    @User('id') userId: string,\n    @Body() toggleModel: ToggleListingFollowDto,\n  ): Promise {\n    toggleModel.userId = userId;\n    const result = await this.listingService.toggleListingFollow(toggleModel);\n    return result;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ListingDto.html":{"url":"interfaces/ListingDto.html","title":"interface - ListingDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ListingDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/listing/dto/ListingDto.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        advantages\n                                \n                                \n                                        avgReviews\n                                \n                                \n                                        brandName\n                                \n                                \n                                        createdAt\n                                \n                                \n                                        credentials\n                                \n                                \n                                            Optional\n                                        currencyId\n                                \n                                \n                                            Optional\n                                        currencyName\n                                \n                                \n                                            Optional\n                                        currencyStandardCode\n                                \n                                \n                                            Optional\n                                        currencySymbol\n                                \n                                \n                                        description\n                                \n                                \n                                            Optional\n                                        hiringTypeId\n                                \n                                \n                                            Optional\n                                        hiringTypeName\n                                \n                                \n                                        id\n                                \n                                \n                                        isEdited\n                                \n                                \n                                        isFollowed\n                                \n                                \n                                        isReviewed\n                                \n                                \n                                        listingTypeId\n                                \n                                \n                                        listingTypeName\n                                \n                                \n                                        media\n                                \n                                \n                                        name\n                                \n                                \n                                        offerDescription\n                                \n                                \n                                        offerPrice\n                                \n                                \n                                            Optional\n                                        otherHiring\n                                \n                                \n                                            Optional\n                                        otherPriceType\n                                \n                                \n                                        owner\n                                \n                                \n                                        ownerId\n                                \n                                \n                                        pageType\n                                \n                                \n                                        price\n                                \n                                \n                                        priceTypeFormat\n                                \n                                \n                                        priceTypeId\n                                \n                                \n                                        priceTypeName\n                                \n                                \n                                        privacy\n                                \n                                \n                                        reviewsCount\n                                \n                                \n                                        socialLinks\n                                \n                                \n                                        status\n                                \n                                \n                                        stockAvailability\n                                \n                                \n                                        type\n                                \n                                \n                                        updatedAt\n                                \n                                \n                                        url\n                                \n                                \n                                        uses\n                                \n                                \n                                        viewsCount\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        advantages\n                                    \n                                \n                                \n                                    \n                                        advantages:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        avgReviews\n                                    \n                                \n                                \n                                    \n                                        avgReviews:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        brandName\n                                    \n                                \n                                \n                                    \n                                        brandName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        credentials\n                                    \n                                \n                                \n                                    \n                                        credentials:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        currencyId\n                                    \n                                \n                                \n                                    \n                                        currencyId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        currencyName\n                                    \n                                \n                                \n                                    \n                                        currencyName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        currencyStandardCode\n                                    \n                                \n                                \n                                    \n                                        currencyStandardCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        currencySymbol\n                                    \n                                \n                                \n                                    \n                                        currencySymbol:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hiringTypeId\n                                    \n                                \n                                \n                                    \n                                        hiringTypeId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hiringTypeName\n                                    \n                                \n                                \n                                    \n                                        hiringTypeName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isEdited\n                                    \n                                \n                                \n                                    \n                                        isEdited:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isFollowed\n                                    \n                                \n                                \n                                    \n                                        isFollowed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isReviewed\n                                    \n                                \n                                \n                                    \n                                        isReviewed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        listingTypeId\n                                    \n                                \n                                \n                                    \n                                        listingTypeId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        listingTypeName\n                                    \n                                \n                                \n                                    \n                                        listingTypeName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        media\n                                    \n                                \n                                \n                                    \n                                        media:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offerDescription\n                                    \n                                \n                                \n                                    \n                                        offerDescription:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offerPrice\n                                    \n                                \n                                \n                                    \n                                        offerPrice:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        otherHiring\n                                    \n                                \n                                \n                                    \n                                        otherHiring:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        otherPriceType\n                                    \n                                \n                                \n                                    \n                                        otherPriceType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        owner\n                                    \n                                \n                                \n                                    \n                                        owner:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ownerId\n                                    \n                                \n                                \n                                    \n                                        ownerId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageType\n                                    \n                                \n                                \n                                    \n                                        pageType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                    \n                                \n                                \n                                    \n                                        price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        priceTypeFormat\n                                    \n                                \n                                \n                                    \n                                        priceTypeFormat:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        priceTypeId\n                                    \n                                \n                                \n                                    \n                                        priceTypeId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        priceTypeName\n                                    \n                                \n                                \n                                    \n                                        priceTypeName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        privacy\n                                    \n                                \n                                \n                                    \n                                        privacy:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reviewsCount\n                                    \n                                \n                                \n                                    \n                                        reviewsCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        socialLinks\n                                    \n                                \n                                \n                                    \n                                        socialLinks:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stockAvailability\n                                    \n                                \n                                \n                                    \n                                        stockAvailability:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uses\n                                    \n                                \n                                \n                                    \n                                        uses:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewsCount\n                                    \n                                \n                                \n                                    \n                                        viewsCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export default interface ListingDto {\n  id: string;\n  type: string;\n  ownerId: string;\n  owner: any;\n  pageType: string;\n  listingTypeId: string;\n  listingTypeName: string;\n  privacy: string;\n  media: any;\n  name: string;\n  brandName: string;\n  description: string;\n  credentials: string;\n  uses: string;\n  stockAvailability: string;\n  advantages: string;\n  url: string;\n  price: number;\n  priceTypeId: string;\n  otherPriceType?: string;\n  priceTypeName: string;\n  priceTypeFormat: string;\n  currencyId?: string;\n  currencyName?: string;\n  currencySymbol?: string;\n  currencyStandardCode?: string;\n  hiringTypeId?: string;\n  hiringTypeName?: string;\n  otherHiring?: string;\n  offerPrice: number;\n  offerDescription: string;\n  socialLinks: any;\n  viewsCount: number;\n  createdAt: Date;\n  updatedAt: Date;\n  status: number;\n  isEdited: boolean;\n  isReviewed: boolean;\n  isFollowed: boolean;\n  avgReviews: number;\n  reviewsCount: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ListingFollower.html":{"url":"classes/ListingFollower.html","title":"class - ListingFollower","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ListingFollower\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/ListingFollower.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n            \n                Implements\n            \n            \n                            ListingFollowerAttributes\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                listingId\n                            \n                            \n                                    Public\n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Public\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/ListingFollower.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/ListingFollower.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            listingId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/ListingFollower.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/ListingFollower.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/ListingFollower.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { DataTypes, Model, Optional } from 'sequelize';\nimport sequelize from '../shared/core/Database';\n\ninterface ListingFollowerAttributes {\n  id: string;\n  userId: string;\n  listingId: string;\n}\n\ntype ListingFollowerCreationAttributes = Optional;\n\nexport default class ListingFollower\n  extends Model\n  implements ListingFollowerAttributes\n{\n  public id!: string;\n  public userId!: string;\n  public listingId!: string;\n\n  public readonly createdAt!: Date;\n  public readonly updatedAt!: Date;\n}\n\nListingFollower.init(\n  {\n    id: {\n      type: DataTypes.UUID,\n      autoIncrement: true,\n      primaryKey: true,\n    },\n    userId: {\n      type: new DataTypes.STRING(50),\n      allowNull: false,\n    },\n    listingId: {\n      type: new DataTypes.STRING(50),\n      allowNull: false,\n    },\n  },\n  {\n    tableName: 'listing_followers',\n    sequelize,\n  },\n);\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ListingFollowerAttributes.html":{"url":"interfaces/ListingFollowerAttributes.html","title":"interface - ListingFollowerAttributes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ListingFollowerAttributes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/ListingFollower.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        listingId\n                                \n                                \n                                        userId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        listingId\n                                    \n                                \n                                \n                                    \n                                        listingId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DataTypes, Model, Optional } from 'sequelize';\nimport sequelize from '../shared/core/Database';\n\ninterface ListingFollowerAttributes {\n  id: string;\n  userId: string;\n  listingId: string;\n}\n\ntype ListingFollowerCreationAttributes = Optional;\n\nexport default class ListingFollower\n  extends Model\n  implements ListingFollowerAttributes\n{\n  public id!: string;\n  public userId!: string;\n  public listingId!: string;\n\n  public readonly createdAt!: Date;\n  public readonly updatedAt!: Date;\n}\n\nListingFollower.init(\n  {\n    id: {\n      type: DataTypes.UUID,\n      autoIncrement: true,\n      primaryKey: true,\n    },\n    userId: {\n      type: new DataTypes.STRING(50),\n      allowNull: false,\n    },\n    listingId: {\n      type: new DataTypes.STRING(50),\n      allowNull: false,\n    },\n  },\n  {\n    tableName: 'listing_followers',\n    sequelize,\n  },\n);\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ListingModule.html":{"url":"modules/ListingModule.html","title":"module - ListingModule","body":"\n                   \n\n\n\n\n    Modules\n    ListingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ListingModule\n\n\n\ncluster_ListingModule_exports\n\n\n\ncluster_ListingModule_providers\n\n\n\ncluster_ListingModule_imports\n\n\n\n\nAppLoggerModule\n\nAppLoggerModule\n\n\n\nListingModule\n\nListingModule\n\nListingModule -->\n\nAppLoggerModule->ListingModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nListingModule -->\n\nCoreModule->ListingModule\n\n\n\n\n\nLookupsModule\n\nLookupsModule\n\nListingModule -->\n\nLookupsModule->ListingModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nListingModule -->\n\nUserModule->ListingModule\n\n\n\n\n\nListingService \n\nListingService \n\nListingService  -->\n\nListingModule->ListingService \n\n\n\n\n\nListingService\n\nListingService\n\nListingModule -->\n\nListingService->ListingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/listing/listing.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ListingService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ListingController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppLoggerModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            LookupsModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ListingService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    configure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/listing/listing.module.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {\n  MiddlewareConsumer,\n  Module,\n  NestModule,\n  RequestMethod,\n} from '@nestjs/common';\nimport { ListingController } from './listing.controller';\nimport { ListingService } from './listing.service';\nimport { CoreModule } from '@/shared/core/core.module';\nimport { UserModule } from '@/user/user.module';\nimport { LookupsModule } from '@/lookups/lookups.module';\nimport { AppLoggerModule } from '@/shared/appLogger/appLogger.module';\nimport { AuthMiddleware } from '@/user/auth.middleware';\n\n@Module({\n  imports: [CoreModule, LookupsModule, UserModule, AppLoggerModule],\n  providers: [ListingService],\n  controllers: [ListingController],\n  exports: [ListingService],\n})\nexport class ListingModule implements NestModule {\n  public configure(consumer: MiddlewareConsumer) {\n    consumer.apply(AuthMiddleware).forRoutes(\n      { path: 'v1/listings', method: RequestMethod.POST },\n      { path: 'v1/listings/:id', method: RequestMethod.PUT },\n      { path: 'v1/listings', method: RequestMethod.GET },\n      //{path: 'v1/listings/search', method: RequestMethod.POST},\n      { path: 'v1/listings/:id', method: RequestMethod.DELETE },\n      { path: 'v1/listings/:id', method: RequestMethod.GET },\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ListingReview.html":{"url":"classes/ListingReview.html","title":"class - ListingReview","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ListingReview\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/ListingReview.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n            \n                Implements\n            \n            \n                            ListingReviewAttributes\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Public\n                                goodAboutListing\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                listingId\n                            \n                            \n                                    Public\n                                notGoodAboutListing\n                            \n                            \n                                    Public\n                                reviewText\n                            \n                            \n                                    Public\n                                starRating\n                            \n                            \n                                    Public\n                                title\n                            \n                            \n                                    Public\n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Public\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/ListingReview.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            goodAboutListing\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/ListingReview.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/ListingReview.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            listingId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/ListingReview.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notGoodAboutListing\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/ListingReview.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            reviewText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/ListingReview.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            starRating\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/ListingReview.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/ListingReview.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/ListingReview.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/ListingReview.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { DataTypes, Model, Optional } from 'sequelize';\nimport sequelize from '../shared/core/Database';\n\ninterface ListingReviewAttributes {\n  id: string;\n  userId: string;\n  listingId: string;\n  title: string;\n  goodAboutListing: string;\n  notGoodAboutListing: string;\n  reviewText: string;\n  starRating: number;\n}\n\ntype ListingReviewCreationAttributes = Optional;\n\nexport default class ListingReview\n  extends Model\n  implements ListingReviewAttributes\n{\n  public id!: string;\n  public userId!: string;\n  public listingId!: string;\n  public title!: string;\n  public goodAboutListing!: string;\n  public notGoodAboutListing!: string;\n  public reviewText!: string;\n  public starRating!: number;\n\n  public readonly createdAt!: Date;\n  public readonly updatedAt!: Date;\n}\n\nListingReview.init(\n  {\n    id: {\n      type: DataTypes.UUID,\n      autoIncrement: true,\n      primaryKey: true,\n    },\n    userId: {\n      type: new DataTypes.STRING(50),\n      allowNull: false,\n    },\n    listingId: {\n      type: new DataTypes.STRING(50),\n      allowNull: false,\n    },\n    title: {\n      type: new DataTypes.STRING(50),\n      allowNull: false,\n    },\n    goodAboutListing: {\n      type: new DataTypes.STRING(50),\n      allowNull: false,\n    },\n    notGoodAboutListing: {\n      type: new DataTypes.STRING(50),\n      allowNull: false,\n    },\n    reviewText: {\n      type: new DataTypes.STRING(500),\n      allowNull: false,\n    },\n    starRating: {\n      type: DataTypes.FLOAT,\n      allowNull: false,\n    },\n  },\n  {\n    tableName: 'listing_reviews',\n    sequelize,\n  },\n);\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ListingReviewAttributes.html":{"url":"interfaces/ListingReviewAttributes.html","title":"interface - ListingReviewAttributes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ListingReviewAttributes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/ListingReview.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        goodAboutListing\n                                \n                                \n                                        id\n                                \n                                \n                                        listingId\n                                \n                                \n                                        notGoodAboutListing\n                                \n                                \n                                        reviewText\n                                \n                                \n                                        starRating\n                                \n                                \n                                        title\n                                \n                                \n                                        userId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        goodAboutListing\n                                    \n                                \n                                \n                                    \n                                        goodAboutListing:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        listingId\n                                    \n                                \n                                \n                                    \n                                        listingId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        notGoodAboutListing\n                                    \n                                \n                                \n                                    \n                                        notGoodAboutListing:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reviewText\n                                    \n                                \n                                \n                                    \n                                        reviewText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        starRating\n                                    \n                                \n                                \n                                    \n                                        starRating:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DataTypes, Model, Optional } from 'sequelize';\nimport sequelize from '../shared/core/Database';\n\ninterface ListingReviewAttributes {\n  id: string;\n  userId: string;\n  listingId: string;\n  title: string;\n  goodAboutListing: string;\n  notGoodAboutListing: string;\n  reviewText: string;\n  starRating: number;\n}\n\ntype ListingReviewCreationAttributes = Optional;\n\nexport default class ListingReview\n  extends Model\n  implements ListingReviewAttributes\n{\n  public id!: string;\n  public userId!: string;\n  public listingId!: string;\n  public title!: string;\n  public goodAboutListing!: string;\n  public notGoodAboutListing!: string;\n  public reviewText!: string;\n  public starRating!: number;\n\n  public readonly createdAt!: Date;\n  public readonly updatedAt!: Date;\n}\n\nListingReview.init(\n  {\n    id: {\n      type: DataTypes.UUID,\n      autoIncrement: true,\n      primaryKey: true,\n    },\n    userId: {\n      type: new DataTypes.STRING(50),\n      allowNull: false,\n    },\n    listingId: {\n      type: new DataTypes.STRING(50),\n      allowNull: false,\n    },\n    title: {\n      type: new DataTypes.STRING(50),\n      allowNull: false,\n    },\n    goodAboutListing: {\n      type: new DataTypes.STRING(50),\n      allowNull: false,\n    },\n    notGoodAboutListing: {\n      type: new DataTypes.STRING(50),\n      allowNull: false,\n    },\n    reviewText: {\n      type: new DataTypes.STRING(500),\n      allowNull: false,\n    },\n    starRating: {\n      type: DataTypes.FLOAT,\n      allowNull: false,\n    },\n  },\n  {\n    tableName: 'listing_reviews',\n    sequelize,\n  },\n);\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ListingReviewDto.html":{"url":"interfaces/ListingReviewDto.html","title":"interface - ListingReviewDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ListingReviewDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/listing/dto/CreateListingReviewDto.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        goodAboutListing\n                                \n                                \n                                        id\n                                \n                                \n                                        listingId\n                                \n                                \n                                        notGoodAboutListing\n                                \n                                \n                                        reviewText\n                                \n                                \n                                        starRating\n                                \n                                \n                                        title\n                                \n                                \n                                        userId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        goodAboutListing\n                                    \n                                \n                                \n                                    \n                                        goodAboutListing:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        listingId\n                                    \n                                \n                                \n                                    \n                                        listingId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        notGoodAboutListing\n                                    \n                                \n                                \n                                    \n                                        notGoodAboutListing:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reviewText\n                                    \n                                \n                                \n                                    \n                                        reviewText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        starRating\n                                    \n                                \n                                \n                                    \n                                        starRating:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export default interface ListingReviewDto {\n  id: string;\n  userId: string;\n  listingId: string;\n  title: string;\n  goodAboutListing: string;\n  notGoodAboutListing: string;\n  reviewText: string;\n  starRating: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ListingReviewDto-1.html":{"url":"interfaces/ListingReviewDto-1.html","title":"interface - ListingReviewDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ListingReviewDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/listing/dto/ListingReviewDto.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        createdAt\n                                \n                                \n                                        goodAboutListing\n                                \n                                \n                                        id\n                                \n                                \n                                        listingId\n                                \n                                \n                                        notGoodAboutListing\n                                \n                                \n                                        reviewText\n                                \n                                \n                                        starRating\n                                \n                                \n                                        title\n                                \n                                \n                                        updatedAt\n                                \n                                \n                                        userId\n                                \n                                \n                                        userName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        goodAboutListing\n                                    \n                                \n                                \n                                    \n                                        goodAboutListing:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        listingId\n                                    \n                                \n                                \n                                    \n                                        listingId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        notGoodAboutListing\n                                    \n                                \n                                \n                                    \n                                        notGoodAboutListing:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reviewText\n                                    \n                                \n                                \n                                    \n                                        reviewText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        starRating\n                                    \n                                \n                                \n                                    \n                                        starRating:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userName\n                                    \n                                \n                                \n                                    \n                                        userName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export default interface ListingReviewDto {\n  id: string;\n  userId: string;\n  userName: string;\n  listingId: string;\n  title: string;\n  goodAboutListing: string;\n  notGoodAboutListing: string;\n  reviewText: string;\n  starRating: number;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ListingType.html":{"url":"classes/ListingType.html","title":"class - ListingType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ListingType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/ListingType.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n            \n                Implements\n            \n            \n                            ListingTypeAttributes\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                associations\n                            \n                            \n                                    Public\n                                category\n                            \n                            \n                                    Public\n                                code\n                            \n                            \n                                    Public\n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                localizedListingTypes\n                            \n                            \n                                    Public\n                                    Readonly\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            associations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/ListingType.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            category\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/ListingType.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/ListingType.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/ListingType.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/ListingType.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                                Optional\n                            localizedListingTypes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     LocalizedListingType[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/ListingType.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/ListingType.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Association, DataTypes, Model, Optional } from 'sequelize';\nimport sequelize from '../shared/core/Database';\nimport LocalizedListingType from './ListingType.Localized';\n\ninterface ListingTypeAttributes {\n  id: string;\n  code: string;\n  category: string;\n}\n\ntype ListingTypeCreationAttributes = Optional;\n\nexport default class ListingType\n  extends Model\n  implements ListingTypeAttributes\n{\n  public id!: string;\n  public code!: string;\n  public category!: string;\n\n  public readonly createdAt!: Date;\n  public readonly updatedAt!: Date;\n\n  public readonly localizedListingTypes?: LocalizedListingType[];\n\n  public static associations: {\n    products: Association;\n  };\n}\n\nListingType.init(\n  {\n    id: {\n      type: DataTypes.UUID,\n      autoIncrement: true,\n      primaryKey: true,\n    },\n    code: {\n      type: new DataTypes.STRING(150),\n      allowNull: false,\n    },\n    category: {\n      type: new DataTypes.STRING(50),\n      allowNull: false,\n    },\n  },\n  {\n    tableName: 'listing_types',\n    sequelize,\n  },\n);\n\nListingType.hasMany(LocalizedListingType, {\n  sourceKey: 'id',\n  foreignKey: 'refId',\n  as: 'localized_listing_types',\n});\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ListingTypeAttributes.html":{"url":"interfaces/ListingTypeAttributes.html","title":"interface - ListingTypeAttributes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ListingTypeAttributes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/ListingType.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        category\n                                \n                                \n                                        code\n                                \n                                \n                                        id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                    \n                                \n                                \n                                    \n                                        category:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Association, DataTypes, Model, Optional } from 'sequelize';\nimport sequelize from '../shared/core/Database';\nimport LocalizedListingType from './ListingType.Localized';\n\ninterface ListingTypeAttributes {\n  id: string;\n  code: string;\n  category: string;\n}\n\ntype ListingTypeCreationAttributes = Optional;\n\nexport default class ListingType\n  extends Model\n  implements ListingTypeAttributes\n{\n  public id!: string;\n  public code!: string;\n  public category!: string;\n\n  public readonly createdAt!: Date;\n  public readonly updatedAt!: Date;\n\n  public readonly localizedListingTypes?: LocalizedListingType[];\n\n  public static associations: {\n    products: Association;\n  };\n}\n\nListingType.init(\n  {\n    id: {\n      type: DataTypes.UUID,\n      autoIncrement: true,\n      primaryKey: true,\n    },\n    code: {\n      type: new DataTypes.STRING(150),\n      allowNull: false,\n    },\n    category: {\n      type: new DataTypes.STRING(50),\n      allowNull: false,\n    },\n  },\n  {\n    tableName: 'listing_types',\n    sequelize,\n  },\n);\n\nListingType.hasMany(LocalizedListingType, {\n  sourceKey: 'id',\n  foreignKey: 'refId',\n  as: 'localized_listing_types',\n});\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ListingTypeDto.html":{"url":"interfaces/ListingTypeDto.html","title":"interface - ListingTypeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ListingTypeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lookups/dto/ListingTypeDto.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        code\n                                \n                                \n                                        createdAt\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                                \n                                        updatedAt\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export default interface ListingTypeDto {\n  id: string;\n  code: string;\n  name: string;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LocalizedCurrency.html":{"url":"classes/LocalizedCurrency.html","title":"class - LocalizedCurrency","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LocalizedCurrency\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/Currency.Localized.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n            \n                Implements\n            \n            \n                            LocalizedCurrencyAttributes\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                language\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                refId\n                            \n                            \n                                    Public\n                                standardCode\n                            \n                            \n                                    Public\n                                    Readonly\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Currency.Localized.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Currency.Localized.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            language\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Currency.Localized.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Currency.Localized.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            refId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Currency.Localized.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            standardCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Currency.Localized.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Currency.Localized.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { DataTypes, Model, Optional } from 'sequelize';\nimport sequelize from '../shared/core/Database';\n\ninterface LocalizedCurrencyAttributes {\n  id: string;\n  name: string;\n  standardCode: string;\n  refId: string;\n  language: string;\n}\n\ntype LocalizedCurrencyCreationAttributes = Optional;\n\nexport default class LocalizedCurrency\n  extends Model\n  implements LocalizedCurrencyAttributes\n{\n  public id!: string;\n  public name!: string;\n  public standardCode!: string;\n  public refId!: string;\n  public language!: string;\n\n  public readonly createdAt!: Date;\n  public readonly updatedAt!: Date;\n}\n\nLocalizedCurrency.init(\n  {\n    id: {\n      type: DataTypes.UUID,\n      autoIncrement: true,\n      primaryKey: true,\n    },\n    name: {\n      type: new DataTypes.STRING(128),\n      allowNull: false,\n    },\n    standardCode: {\n      type: new DataTypes.STRING(50),\n      allowNull: false,\n    },\n    refId: {\n      type: new DataTypes.STRING(50),\n      allowNull: false,\n    },\n    language: {\n      type: new DataTypes.STRING(5),\n      allowNull: false,\n    },\n  },\n  {\n    tableName: 'localized_currencies',\n    sequelize,\n  },\n);\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LocalizedCurrencyAttributes.html":{"url":"interfaces/LocalizedCurrencyAttributes.html","title":"interface - LocalizedCurrencyAttributes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LocalizedCurrencyAttributes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/Currency.Localized.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        language\n                                \n                                \n                                        name\n                                \n                                \n                                        refId\n                                \n                                \n                                        standardCode\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        language\n                                    \n                                \n                                \n                                    \n                                        language:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refId\n                                    \n                                \n                                \n                                    \n                                        refId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        standardCode\n                                    \n                                \n                                \n                                    \n                                        standardCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DataTypes, Model, Optional } from 'sequelize';\nimport sequelize from '../shared/core/Database';\n\ninterface LocalizedCurrencyAttributes {\n  id: string;\n  name: string;\n  standardCode: string;\n  refId: string;\n  language: string;\n}\n\ntype LocalizedCurrencyCreationAttributes = Optional;\n\nexport default class LocalizedCurrency\n  extends Model\n  implements LocalizedCurrencyAttributes\n{\n  public id!: string;\n  public name!: string;\n  public standardCode!: string;\n  public refId!: string;\n  public language!: string;\n\n  public readonly createdAt!: Date;\n  public readonly updatedAt!: Date;\n}\n\nLocalizedCurrency.init(\n  {\n    id: {\n      type: DataTypes.UUID,\n      autoIncrement: true,\n      primaryKey: true,\n    },\n    name: {\n      type: new DataTypes.STRING(128),\n      allowNull: false,\n    },\n    standardCode: {\n      type: new DataTypes.STRING(50),\n      allowNull: false,\n    },\n    refId: {\n      type: new DataTypes.STRING(50),\n      allowNull: false,\n    },\n    language: {\n      type: new DataTypes.STRING(5),\n      allowNull: false,\n    },\n  },\n  {\n    tableName: 'localized_currencies',\n    sequelize,\n  },\n);\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LocalizedDisclaimer.html":{"url":"classes/LocalizedDisclaimer.html","title":"class - LocalizedDisclaimer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LocalizedDisclaimer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/Disclaimer.Localized.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n            \n                Implements\n            \n            \n                            LocalizedDisclaimerAttributes\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                language\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                refId\n                            \n                            \n                                    Public\n                                    Readonly\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Disclaimer.Localized.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Disclaimer.Localized.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            language\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Disclaimer.Localized.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Disclaimer.Localized.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            refId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Disclaimer.Localized.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Disclaimer.Localized.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { DataTypes, Model, Optional } from 'sequelize';\nimport sequelize from '../shared/core/Database';\n\ninterface LocalizedDisclaimerAttributes {\n  id: string;\n  name: string;\n  refId: string;\n  language: string;\n}\n\ntype LocalizedDisclaimerCreationAttributes = Optional;\n\nexport default class LocalizedDisclaimer\n  extends Model\n  implements LocalizedDisclaimerAttributes\n{\n  public id!: string;\n  public name!: string;\n  public refId!: string;\n  public language!: string;\n\n  public readonly createdAt!: Date;\n  public readonly updatedAt!: Date;\n}\n\nLocalizedDisclaimer.init(\n  {\n    id: {\n      type: DataTypes.UUID,\n      autoIncrement: true,\n      primaryKey: true,\n    },\n    name: {\n      type: new DataTypes.STRING(150),\n      allowNull: false,\n    },\n    refId: {\n      type: new DataTypes.STRING(50),\n      allowNull: false,\n    },\n    language: {\n      type: new DataTypes.STRING(5),\n      allowNull: false,\n    },\n  },\n  {\n    tableName: 'localized_disclaimers',\n    sequelize,\n  },\n);\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LocalizedDisclaimerAttributes.html":{"url":"interfaces/LocalizedDisclaimerAttributes.html","title":"interface - LocalizedDisclaimerAttributes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LocalizedDisclaimerAttributes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/Disclaimer.Localized.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        language\n                                \n                                \n                                        name\n                                \n                                \n                                        refId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        language\n                                    \n                                \n                                \n                                    \n                                        language:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refId\n                                    \n                                \n                                \n                                    \n                                        refId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DataTypes, Model, Optional } from 'sequelize';\nimport sequelize from '../shared/core/Database';\n\ninterface LocalizedDisclaimerAttributes {\n  id: string;\n  name: string;\n  refId: string;\n  language: string;\n}\n\ntype LocalizedDisclaimerCreationAttributes = Optional;\n\nexport default class LocalizedDisclaimer\n  extends Model\n  implements LocalizedDisclaimerAttributes\n{\n  public id!: string;\n  public name!: string;\n  public refId!: string;\n  public language!: string;\n\n  public readonly createdAt!: Date;\n  public readonly updatedAt!: Date;\n}\n\nLocalizedDisclaimer.init(\n  {\n    id: {\n      type: DataTypes.UUID,\n      autoIncrement: true,\n      primaryKey: true,\n    },\n    name: {\n      type: new DataTypes.STRING(150),\n      allowNull: false,\n    },\n    refId: {\n      type: new DataTypes.STRING(50),\n      allowNull: false,\n    },\n    language: {\n      type: new DataTypes.STRING(5),\n      allowNull: false,\n    },\n  },\n  {\n    tableName: 'localized_disclaimers',\n    sequelize,\n  },\n);\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LocalizedHiringType.html":{"url":"classes/LocalizedHiringType.html","title":"class - LocalizedHiringType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LocalizedHiringType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/HiringType.Localized.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n            \n                Implements\n            \n            \n                            LocalizedHiringTypeAttributes\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                language\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                refId\n                            \n                            \n                                    Public\n                                    Readonly\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/HiringType.Localized.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/HiringType.Localized.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            language\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/HiringType.Localized.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/HiringType.Localized.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            refId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/HiringType.Localized.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/HiringType.Localized.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { DataTypes, Model, Optional } from 'sequelize';\nimport sequelize from '../shared/core/Database';\n\ninterface LocalizedHiringTypeAttributes {\n  id: string;\n  name: string;\n  refId: string;\n  language: string;\n}\n\ntype LocalizedHiringTypeCreationAttributes = Optional;\n\nexport default class LocalizedHiringType\n  extends Model\n  implements LocalizedHiringTypeAttributes\n{\n  public id!: string;\n  public name!: string;\n  public refId!: string;\n  public language!: string;\n\n  public readonly createdAt!: Date;\n  public readonly updatedAt!: Date;\n}\n\nLocalizedHiringType.init(\n  {\n    id: {\n      type: DataTypes.UUID,\n      autoIncrement: true,\n      primaryKey: true,\n    },\n    name: {\n      type: new DataTypes.STRING(128),\n      allowNull: false,\n    },\n    refId: {\n      type: new DataTypes.STRING(50),\n      allowNull: false,\n    },\n    language: {\n      type: new DataTypes.STRING(5),\n      allowNull: false,\n    },\n  },\n  {\n    tableName: 'localized_hiring_types',\n    sequelize,\n  },\n);\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LocalizedHiringTypeAttributes.html":{"url":"interfaces/LocalizedHiringTypeAttributes.html","title":"interface - LocalizedHiringTypeAttributes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LocalizedHiringTypeAttributes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/HiringType.Localized.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        language\n                                \n                                \n                                        name\n                                \n                                \n                                        refId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        language\n                                    \n                                \n                                \n                                    \n                                        language:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refId\n                                    \n                                \n                                \n                                    \n                                        refId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DataTypes, Model, Optional } from 'sequelize';\nimport sequelize from '../shared/core/Database';\n\ninterface LocalizedHiringTypeAttributes {\n  id: string;\n  name: string;\n  refId: string;\n  language: string;\n}\n\ntype LocalizedHiringTypeCreationAttributes = Optional;\n\nexport default class LocalizedHiringType\n  extends Model\n  implements LocalizedHiringTypeAttributes\n{\n  public id!: string;\n  public name!: string;\n  public refId!: string;\n  public language!: string;\n\n  public readonly createdAt!: Date;\n  public readonly updatedAt!: Date;\n}\n\nLocalizedHiringType.init(\n  {\n    id: {\n      type: DataTypes.UUID,\n      autoIncrement: true,\n      primaryKey: true,\n    },\n    name: {\n      type: new DataTypes.STRING(128),\n      allowNull: false,\n    },\n    refId: {\n      type: new DataTypes.STRING(50),\n      allowNull: false,\n    },\n    language: {\n      type: new DataTypes.STRING(5),\n      allowNull: false,\n    },\n  },\n  {\n    tableName: 'localized_hiring_types',\n    sequelize,\n  },\n);\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LocalizedListingType.html":{"url":"classes/LocalizedListingType.html","title":"class - LocalizedListingType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LocalizedListingType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/ListingType.Localized.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n            \n                Implements\n            \n            \n                            LocalizedListingTypeAttributes\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                language\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                refId\n                            \n                            \n                                    Public\n                                    Readonly\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/ListingType.Localized.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/ListingType.Localized.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            language\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/ListingType.Localized.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/ListingType.Localized.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            refId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/ListingType.Localized.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/ListingType.Localized.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { DataTypes, Model, Optional } from 'sequelize';\nimport sequelize from '../shared/core/Database';\n\ninterface LocalizedListingTypeAttributes {\n  id: string;\n  name: string;\n  refId: string;\n  language: string;\n}\n\ntype LocalizedListingTypeCreationAttributes = Optional;\n\nexport default class LocalizedListingType\n  extends Model\n  implements LocalizedListingTypeAttributes\n{\n  public id!: string;\n  public name!: string;\n  public refId!: string;\n  public language!: string;\n\n  public readonly createdAt!: Date;\n  public readonly updatedAt!: Date;\n}\n\nLocalizedListingType.init(\n  {\n    id: {\n      type: DataTypes.UUID,\n      autoIncrement: true,\n      primaryKey: true,\n    },\n    name: {\n      type: new DataTypes.STRING(128),\n      allowNull: false,\n    },\n    refId: {\n      type: new DataTypes.STRING(50),\n      allowNull: false,\n    },\n    language: {\n      type: new DataTypes.STRING(5),\n      allowNull: false,\n    },\n  },\n  {\n    tableName: 'localized_listing_types',\n    sequelize,\n  },\n);\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LocalizedListingTypeAttributes.html":{"url":"interfaces/LocalizedListingTypeAttributes.html","title":"interface - LocalizedListingTypeAttributes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LocalizedListingTypeAttributes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/ListingType.Localized.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        language\n                                \n                                \n                                        name\n                                \n                                \n                                        refId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        language\n                                    \n                                \n                                \n                                    \n                                        language:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refId\n                                    \n                                \n                                \n                                    \n                                        refId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DataTypes, Model, Optional } from 'sequelize';\nimport sequelize from '../shared/core/Database';\n\ninterface LocalizedListingTypeAttributes {\n  id: string;\n  name: string;\n  refId: string;\n  language: string;\n}\n\ntype LocalizedListingTypeCreationAttributes = Optional;\n\nexport default class LocalizedListingType\n  extends Model\n  implements LocalizedListingTypeAttributes\n{\n  public id!: string;\n  public name!: string;\n  public refId!: string;\n  public language!: string;\n\n  public readonly createdAt!: Date;\n  public readonly updatedAt!: Date;\n}\n\nLocalizedListingType.init(\n  {\n    id: {\n      type: DataTypes.UUID,\n      autoIncrement: true,\n      primaryKey: true,\n    },\n    name: {\n      type: new DataTypes.STRING(128),\n      allowNull: false,\n    },\n    refId: {\n      type: new DataTypes.STRING(50),\n      allowNull: false,\n    },\n    language: {\n      type: new DataTypes.STRING(5),\n      allowNull: false,\n    },\n  },\n  {\n    tableName: 'localized_listing_types',\n    sequelize,\n  },\n);\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LocalizedPriceType.html":{"url":"classes/LocalizedPriceType.html","title":"class - LocalizedPriceType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LocalizedPriceType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/PriceType.Localized.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n            \n                Implements\n            \n            \n                            LocalizedPriceTypeAttributes\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Public\n                                format\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                language\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                refId\n                            \n                            \n                                    Public\n                                    Readonly\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/PriceType.Localized.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            format\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/PriceType.Localized.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/PriceType.Localized.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            language\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/PriceType.Localized.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/PriceType.Localized.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            refId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/PriceType.Localized.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/PriceType.Localized.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { DataTypes, Model, Optional } from 'sequelize';\nimport sequelize from '../shared/core/Database';\n\ninterface LocalizedPriceTypeAttributes {\n  id: string;\n  name: string;\n  format: string;\n  refId: string;\n  language: string;\n}\n\ntype LocalizedPriceTypeCreationAttributes = Optional;\n\nexport default class LocalizedPriceType\n  extends Model\n  implements LocalizedPriceTypeAttributes\n{\n  public id!: string;\n  public name!: string;\n  public format!: string;\n  public refId!: string;\n  public language!: string;\n\n  public readonly createdAt!: Date;\n  public readonly updatedAt!: Date;\n}\n\nLocalizedPriceType.init(\n  {\n    id: {\n      type: DataTypes.UUID,\n      autoIncrement: true,\n      primaryKey: true,\n    },\n    name: {\n      type: new DataTypes.STRING(128),\n      allowNull: false,\n    },\n    format: {\n      type: new DataTypes.STRING(128),\n      allowNull: false,\n    },\n    refId: {\n      type: new DataTypes.STRING(50),\n      allowNull: false,\n    },\n    language: {\n      type: new DataTypes.STRING(5),\n      allowNull: false,\n    },\n  },\n  {\n    tableName: 'localized_price_types',\n    sequelize,\n  },\n);\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LocalizedPriceTypeAttributes.html":{"url":"interfaces/LocalizedPriceTypeAttributes.html","title":"interface - LocalizedPriceTypeAttributes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LocalizedPriceTypeAttributes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/PriceType.Localized.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        format\n                                \n                                \n                                        id\n                                \n                                \n                                        language\n                                \n                                \n                                        name\n                                \n                                \n                                        refId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                    \n                                \n                                \n                                    \n                                        format:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        language\n                                    \n                                \n                                \n                                    \n                                        language:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refId\n                                    \n                                \n                                \n                                    \n                                        refId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DataTypes, Model, Optional } from 'sequelize';\nimport sequelize from '../shared/core/Database';\n\ninterface LocalizedPriceTypeAttributes {\n  id: string;\n  name: string;\n  format: string;\n  refId: string;\n  language: string;\n}\n\ntype LocalizedPriceTypeCreationAttributes = Optional;\n\nexport default class LocalizedPriceType\n  extends Model\n  implements LocalizedPriceTypeAttributes\n{\n  public id!: string;\n  public name!: string;\n  public format!: string;\n  public refId!: string;\n  public language!: string;\n\n  public readonly createdAt!: Date;\n  public readonly updatedAt!: Date;\n}\n\nLocalizedPriceType.init(\n  {\n    id: {\n      type: DataTypes.UUID,\n      autoIncrement: true,\n      primaryKey: true,\n    },\n    name: {\n      type: new DataTypes.STRING(128),\n      allowNull: false,\n    },\n    format: {\n      type: new DataTypes.STRING(128),\n      allowNull: false,\n    },\n    refId: {\n      type: new DataTypes.STRING(50),\n      allowNull: false,\n    },\n    language: {\n      type: new DataTypes.STRING(5),\n      allowNull: false,\n    },\n  },\n  {\n    tableName: 'localized_price_types',\n    sequelize,\n  },\n);\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginUserDto.html":{"url":"classes/LoginUserDto.html","title":"class - LoginUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/LoginUserDto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsEmail()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/LoginUserDto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/LoginUserDto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty } from 'class-validator';\n\nexport default class LoginUserDto {\n  @IsEmail()\n  email: string;\n  @IsNotEmpty()\n  password: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LookupsController.html":{"url":"controllers/LookupsController.html","title":"controller - LookupsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LookupsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lookups/lookups.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getCurrencies\n                            \n                            \n                                    Async\n                                getDisclaimers\n                            \n                            \n                                    Async\n                                getHiringTypes\n                            \n                            \n                                    Async\n                                getListingTypes\n                            \n                            \n                                    Async\n                                getPriceTypes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getCurrencies\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCurrencies(lang: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Gets currencies'})@ApiResponse({status: 200, description: 'Returns the currency list'})@Get('v1/lookups/currencies')\n                \n            \n\n            \n                \n                    Defined in src/lookups/lookups.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'en'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getDisclaimers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDisclaimers(lang: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Gets Disclaimer options'})@ApiResponse({status: 200, description: 'Returns the disclaimer options'})@Get('v1/lookups/disclaimers')\n                \n            \n\n            \n                \n                    Defined in src/lookups/lookups.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'en'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getHiringTypes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getHiringTypes(lang: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Gets hiring types'})@ApiResponse({status: 200, description: 'Returns the hiring types'})@Get('v1/lookups/hiring-types')\n                \n            \n\n            \n                \n                    Defined in src/lookups/lookups.controller.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'en'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getListingTypes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getListingTypes(type: string, lang: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Gets listing types'})@ApiResponse({status: 200, description: 'Returns the listing types'})@Get('v1/lookups/listing-types/:type')\n                \n            \n\n            \n                \n                    Defined in src/lookups/lookups.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'en'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getPriceTypes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPriceTypes(lang: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Gets price types'})@ApiResponse({status: 200, description: 'Returns the price types'})@Get('v1/lookups/price-types')\n                \n            \n\n            \n                \n                    Defined in src/lookups/lookups.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'en'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Headers, Param } from '@nestjs/common';\nimport {\n  ApiBearerAuth,\n  ApiOperation,\n  ApiResponse,\n  ApiTags /*,ApiOperation, ApiResponse, ApiBody*/,\n} from '@nestjs/swagger';\nimport CurrencyDto from './dto/CurrencyDto';\nimport DisclaimerDto from './dto/DisclaimerDto';\nimport HiringTypeDto from './dto/HiringTypeDto';\nimport ListingTypeDto from './dto/ListingTypeDto';\nimport PriceTypeDto from './dto/PriceTypeDto';\nimport { LookupsService } from './lookups.service';\n\n@ApiBearerAuth()\n@ApiTags('Lookups')\n@Controller()\nexport class LookupsController {\n  constructor(private readonly lookupsService: LookupsService) {}\n\n  @ApiOperation({ summary: 'Gets listing types' })\n  @ApiResponse({ status: 200, description: 'Returns the listing types' })\n  @Get('v1/lookups/listing-types/:type')\n  async getListingTypes(\n    @Param('type') type: string,\n    @Headers('lang') lang = 'en',\n  ): Promise {\n    return await this.lookupsService.getListingTypes(type, lang);\n  }\n\n  @ApiOperation({ summary: 'Gets price types' })\n  @ApiResponse({ status: 200, description: 'Returns the price types' })\n  @Get('v1/lookups/price-types')\n  async getPriceTypes(@Headers('lang') lang = 'en'): Promise {\n    return await this.lookupsService.getPriceTypes(lang);\n  }\n\n  @ApiOperation({ summary: 'Gets currencies' })\n  @ApiResponse({ status: 200, description: 'Returns the currency list' })\n  @Get('v1/lookups/currencies')\n  async getCurrencies(@Headers('lang') lang = 'en'): Promise {\n    return await this.lookupsService.getCurrencies(lang);\n  }\n\n  @ApiOperation({ summary: 'Gets hiring types' })\n  @ApiResponse({ status: 200, description: 'Returns the hiring types' })\n  @Get('v1/lookups/hiring-types')\n  async getHiringTypes(@Headers('lang') lang = 'en'): Promise {\n    return await this.lookupsService.getHiringTypes(lang);\n  }\n\n  @ApiOperation({ summary: 'Gets Disclaimer options' })\n  @ApiResponse({ status: 200, description: 'Returns the disclaimer options' })\n  @Get('v1/lookups/disclaimers')\n  async getDisclaimers(@Headers('lang') lang = 'en'): Promise {\n    return await this.lookupsService.getDisclaimers(lang);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LookupsModule.html":{"url":"modules/LookupsModule.html","title":"module - LookupsModule","body":"\n                   \n\n\n\n\n    Modules\n    LookupsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LookupsModule\n\n\n\ncluster_LookupsModule_exports\n\n\n\ncluster_LookupsModule_imports\n\n\n\ncluster_LookupsModule_providers\n\n\n\n\nCoreModule\n\nCoreModule\n\n\n\nLookupsModule\n\nLookupsModule\n\nLookupsModule -->\n\nCoreModule->LookupsModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nLookupsModule -->\n\nUserModule->LookupsModule\n\n\n\n\n\nLookupsService \n\nLookupsService \n\nLookupsService  -->\n\nLookupsModule->LookupsService \n\n\n\n\n\nLookupsService\n\nLookupsService\n\nLookupsModule -->\n\nLookupsService->LookupsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lookups/lookups.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LookupsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            LookupsController\n                        \n                        \n                            FilesController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CoreModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LookupsService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    configure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/lookups/lookups.module.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {\n  MiddlewareConsumer,\n  Module,\n  NestModule,\n  RequestMethod,\n} from '@nestjs/common';\nimport { LookupsController } from './lookups.controller';\nimport { LookupsService } from './lookups.service';\nimport { CoreModule } from './../shared/core/core.module';\nimport { FilesController } from './file.controller';\nimport { AuthMiddleware } from '@/user/auth.middleware';\nimport { UserModule } from '@/user/user.module';\n\n@Module({\n  imports: [CoreModule, UserModule],\n  providers: [LookupsService],\n  controllers: [LookupsController, FilesController],\n  exports: [LookupsService],\n})\nexport class LookupsModule implements NestModule {\n  public configure(consumer: MiddlewareConsumer) {\n    consumer\n      .apply(AuthMiddleware)\n      .forRoutes(\n        { path: 'v1/files/:bucket/:type/upload', method: RequestMethod.POST },\n        { path: 'v1/files/:bucket/:type/:name', method: RequestMethod.DELETE },\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LookupsService.html":{"url":"injectables/LookupsService.html","title":"injectable - LookupsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LookupsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lookups/lookups.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                deleteFile\n                            \n                            \n                                    Public\n                                duplicateFile\n                            \n                            \n                                    Public\n                                    Async\n                                getAllListingTypes\n                            \n                            \n                                    Public\n                                    Async\n                                getCurrencies\n                            \n                            \n                                    Public\n                                    Async\n                                getDisclaimers\n                            \n                            \n                                    Public\n                                getFile\n                            \n                            \n                                    Public\n                                    Async\n                                getHiringTypes\n                            \n                            \n                                    Public\n                                    Async\n                                getListingTypes\n                            \n                            \n                                    Public\n                                    Async\n                                getPriceTypes\n                            \n                            \n                                    Public\n                                saveFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lookups/lookups.service.ts:26\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            deleteFile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteFile(bucket: string, type: string, fileName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lookups/lookups.service.ts:302\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bucket\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fileName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            duplicateFile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    duplicateFile(bucket: string, type: string, fileName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lookups/lookups.service.ts:291\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bucket\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fileName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getAllListingTypes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllListingTypes(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lookups/lookups.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getCurrencies\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCurrencies(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lookups/lookups.service.ts:148\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getDisclaimers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDisclaimers(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lookups/lookups.service.ts:225\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFile(bucket: string, type: string, fileName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lookups/lookups.service.ts:285\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bucket\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fileName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getHiringTypes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getHiringTypes(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lookups/lookups.service.ts:189\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getListingTypes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getListingTypes(category: string, lang: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lookups/lookups.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    category\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getPriceTypes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPriceTypes(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lookups/lookups.service.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            saveFile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    saveFile(bucket: string, type: string, fileName: string, fileContent: any)\n                \n            \n\n\n            \n                \n                    Defined in src/lookups/lookups.service.ts:261\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bucket\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fileName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fileContent\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import ListingType from '@/models/ListingType';\nimport { Injectable } from '@nestjs/common';\nimport ListingTypeDto from './dto/ListingTypeDto';\nimport LocalizedListingType from '@/models/ListingType.Localized';\nimport PriceTypeDto from './dto/PriceTypeDto';\nimport PriceType from '@/models/PriceType';\nimport LocalizedPriceType from '@/models/PriceType.Localized';\nimport Currency from '@/models/Currency';\nimport LocalizedCurrency from '@/models/Currency.Localized';\nimport CurrencyDto from './dto/CurrencyDto';\nimport { AppCache } from '@/shared/core/Cache';\nimport HiringTypeDto from './dto/HiringTypeDto';\nimport HiringType from '@/models/HiringType';\nimport LocalizedHiringType from '@/models/HiringType.Localized';\nimport DisclaimerDto from './dto/DisclaimerDto';\nimport Disclaimer from '@/models/Disclaimer';\nimport LocalizedDisclaimer from '@/models/Disclaimer.Localized';\nimport { v4 } from 'uuid';\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport env from '@/shared/core/Environment';\n\nconst rootDir = env.UPLOAD_ROOT_DIR;\n\n@Injectable()\nexport class LookupsService {\n  constructor() {}\n\n  public async getListingTypes(\n    category: string,\n    lang: string,\n  ): Promise {\n    const data = await AppCache.getAsync(\n      `__listingTypes_${category}_${lang}__`,\n      60 * 120,\n      async () => {\n        const result = new Array();\n        const listingTypes = await ListingType.findAll({\n          where: {\n            category: category,\n          },\n        });\n\n        const localizedListingTypes = await LocalizedListingType.findAll({\n          where: {\n            refId: listingTypes.map((lt) => lt.id),\n            language: lang,\n          },\n        });\n\n        for (const listingType of listingTypes) {\n          const type = {\n            id: listingType.id,\n            code: listingType.code,\n            createdAt: listingType.createdAt,\n            updatedAt: listingType.updatedAt,\n            name: '',\n          };\n          const localizedListingType = localizedListingTypes.find(\n            (llt) => llt.refId === listingType.id,\n          );\n          if (localizedListingType) {\n            type.name = localizedListingType.name;\n          }\n          result.push(type);\n        }\n        return result;\n      },\n    );\n    return data;\n  }\n\n  public async getAllListingTypes(lang: string): Promise {\n    const data = await AppCache.getAsync(\n      `__listingTypes_${lang}__`,\n      60 * 120,\n      async () => {\n        const result = new Array();\n        const listingTypes = await ListingType.findAll();\n\n        const localizedListingTypes = await LocalizedListingType.findAll({\n          where: {\n            refId: listingTypes.map((lt) => lt.id),\n            language: lang,\n          },\n        });\n\n        for (const listingType of listingTypes) {\n          const type = {\n            id: listingType.id,\n            code: listingType.code,\n            createdAt: listingType.createdAt,\n            updatedAt: listingType.updatedAt,\n            name: '',\n          };\n          const localizedListingType = localizedListingTypes.find(\n            (llt) => llt.refId === listingType.id,\n          );\n          if (localizedListingType) {\n            type.name = localizedListingType.name;\n          }\n          result.push(type);\n        }\n        return result;\n      },\n    );\n    return data;\n  }\n\n  public async getPriceTypes(lang: string): Promise {\n    const data = await AppCache.getAsync(\n      `__priceTypes_${lang}__`,\n      60 * 120,\n      async () => {\n        const result = new Array();\n        const priceTypes = await PriceType.findAll();\n\n        const localizedPriceTypes = await LocalizedPriceType.findAll({\n          where: {\n            language: lang,\n          },\n        });\n\n        for (const priceType of priceTypes) {\n          const type = {\n            id: priceType.id,\n            code: priceType.code,\n            createdAt: priceType.createdAt,\n            updatedAt: priceType.updatedAt,\n            name: '',\n            format: '',\n          };\n          const localizedPriceType = localizedPriceTypes.find(\n            (lpt) => lpt.refId === priceType.id,\n          );\n          if (localizedPriceType) {\n            type.name = localizedPriceType.name;\n            type.format = localizedPriceType.format;\n          }\n          result.push(type);\n        }\n        return result;\n      },\n    );\n    return data;\n  }\n\n  public async getCurrencies(lang: string): Promise {\n    const data = await AppCache.getAsync(\n      `__currencies_${lang}__`,\n      60 * 120,\n      async () => {\n        const result = new Array();\n        const currencies = await Currency.findAll();\n\n        const localizedCurrencies = await LocalizedCurrency.findAll({\n          where: {\n            refId: currencies.map((lt) => lt.id),\n            language: lang,\n          },\n          order: ['name'],\n        });\n\n        for (const localizedCurrency of localizedCurrencies) {\n          const currency = currencies.find(\n            (c) => c.id === localizedCurrency.refId,\n          );\n          if (currency) {\n            const type = {\n              id: currency.id,\n              createdAt: currency.createdAt,\n              updatedAt: currency.updatedAt,\n              code: currency.code,\n              symbol: currency.symbol,\n              name: localizedCurrency.name,\n              standardCode: localizedCurrency.standardCode,\n            };\n            type.name = localizedCurrency.name;\n            type.standardCode = localizedCurrency.standardCode;\n            result.push(type);\n          }\n        }\n        return result;\n      },\n    );\n    return data;\n  }\n\n  public async getHiringTypes(lang: string): Promise {\n    const data = await AppCache.getAsync(\n      `__hiringTypes_${lang}__`,\n      60 * 120,\n      async () => {\n        const result = new Array();\n        const hiringTypes = await HiringType.findAll();\n\n        const localizedHiringTypes = await LocalizedHiringType.findAll({\n          where: {\n            language: lang,\n          },\n        });\n\n        for (const hiringType of hiringTypes) {\n          const type = {\n            id: hiringType.id,\n            code: hiringType.code,\n            createdAt: hiringType.createdAt,\n            updatedAt: hiringType.updatedAt,\n            name: '',\n          };\n          const localizedHiringType = localizedHiringTypes.find(\n            (lpt) => lpt.refId === hiringType.id,\n          );\n          if (localizedHiringType) {\n            type.name = localizedHiringType.name;\n          }\n          result.push(type);\n        }\n        return result;\n      },\n    );\n    return data;\n  }\n\n  public async getDisclaimers(lang: string): Promise {\n    const data = await AppCache.getAsync(\n      `__disclaimers_${lang}__`,\n      60 * 120,\n      async () => {\n        const result = new Array();\n        const disclaimers = await Disclaimer.findAll();\n\n        const localizedDisclaimers = await LocalizedDisclaimer.findAll({\n          where: {\n            language: lang,\n          },\n        });\n\n        for (const disclaimer of disclaimers) {\n          const type = {\n            id: disclaimer.id,\n            code: disclaimer.code,\n            createdAt: disclaimer.createdAt,\n            updatedAt: disclaimer.updatedAt,\n            name: '',\n          };\n          const localizedDisclaimer = localizedDisclaimers.find(\n            (lpt) => lpt.refId === disclaimer.id,\n          );\n          if (localizedDisclaimer) {\n            type.name = localizedDisclaimer.name;\n          }\n          result.push(type);\n        }\n        return result;\n      },\n    );\n    return data;\n  }\n\n  public saveFile(\n    bucket: string,\n    type: string,\n    fileName: string,\n    fileContent: any,\n  ): any {\n    const bucketDir = path.join(rootDir, bucket);\n    if (!fs.existsSync(bucketDir)) {\n      fs.mkdirSync(bucketDir);\n    }\n    const fileTypeDir = path.join(rootDir, bucket, type);\n    if (!fs.existsSync(fileTypeDir)) {\n      fs.mkdirSync(fileTypeDir);\n    }\n    fs.writeFile(path.join(fileTypeDir, fileName), fileContent, (err) => {\n      console.log(err);\n    });\n    return {\n      bucket: bucket,\n      type: type,\n      fileName: fileName,\n    };\n  }\n\n  public getFile(bucket: string, type: string, fileName: string): any {\n    const filePath = path.join(rootDir, bucket, type, fileName);\n    if (!fs.existsSync(filePath)) return null;\n    return filePath;\n  }\n\n  public duplicateFile(bucket: string, type: string, fileName: string): any {\n    const filePath = path.join(rootDir, bucket, type, fileName);\n    if (!fs.existsSync(filePath)) return null;\n    const newFileName = `${v4()}${path.extname(filePath)}`;\n    fs.copyFileSync(\n      filePath,\n      `${path.join(rootDir, bucket, type, newFileName)}`,\n    );\n    return newFileName;\n  }\n\n  public deleteFile(bucket: string, type: string, fileName: string): boolean {\n    try {\n      const filePath = path.join(rootDir, bucket, type, fileName);\n      if (!fs.existsSync(filePath)) return false;\n      fs.unlinkSync(filePath);\n      return true;\n    } catch (error) {\n      return false;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailManager.html":{"url":"injectables/MailManager.html","title":"injectable - MailManager","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MailManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/core/MailManager.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                sendRecoveryLink\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/shared/core/MailManager.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            sendRecoveryLink\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendRecoveryLink(email: string, name: string, recoveryLink: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/core/MailManager.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    recoveryLink\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import EmailTemplate from '@/assets/password-recovery-email';\n\nimport { Injectable } from '@nestjs/common';\nimport sgMail from '@sendgrid/mail';\n\n@Injectable()\nexport default class MailManager {\n  constructor() {\n    sgMail.setApiKey(process.env.SENDGRID_API_KEY || '');\n  }\n\n  public async sendRecoveryLink(\n    email: string,\n    name: string,\n    recoveryLink: string,\n  ) {\n    const recoveryEmailTemplate = EmailTemplate.replace('{{name}}', name)\n      .replace('{{recoveryLink}}', recoveryLink)\n      .replace('{{year}}', new Date().getFullYear().toString());\n\n    return sgMail.send({\n      to: email,\n      from: 'noreply@imaginativenews.com',\n      subject: 'ImaginativeNews - Recovery Code',\n      html: recoveryEmailTemplate,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NoDataResult.html":{"url":"classes/NoDataResult.html","title":"class - NoDataResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NoDataResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/models/NoDataResult.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Result\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                error\n                            \n                            \n                                    Public\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/shared/models/NoDataResult.ts:2\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                            \n                                \n                                    Inherited from         Result\n\n                                \n                            \n                        \n                            \n                                    Defined in         Result:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                            \n                                \n                                    Inherited from         Result\n\n                                \n                            \n                        \n                            \n                                    Defined in         Result:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Result\n\n                                \n                            \n                        \n                            \n                                    Defined in         Result:6\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import Result from './Result';\nexport default class NoDataResult extends Result {\n  constructor() {\n    super('NO_DATA');\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotFoundResult.html":{"url":"classes/NotFoundResult.html","title":"class - NotFoundResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotFoundResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/models/NotFoundResult.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Result\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                error\n                            \n                            \n                                    Public\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/shared/models/NotFoundResult.ts:2\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                            \n                                \n                                    Inherited from         Result\n\n                                \n                            \n                        \n                            \n                                    Defined in         Result:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                            \n                                \n                                    Inherited from         Result\n\n                                \n                            \n                        \n                            \n                                    Defined in         Result:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Result\n\n                                \n                            \n                        \n                            \n                                    Defined in         Result:6\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import Result from './Result';\nexport default class NotFoundResult extends Result {\n  constructor() {\n    super('NOT_FOUND');\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OperationResult.html":{"url":"classes/OperationResult.html","title":"class - OperationResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OperationResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/models/OperationResult.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                code\n                            \n                            \n                                    Public\n                                    Optional\n                                message\n                            \n                            \n                                    Public\n                                success\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/OperationResult.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/OperationResult.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            success\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/OperationResult.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export default class OperationResult {\n  public success = true;\n  public code?: string;\n  public message?: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PasswordRecoveryToken.html":{"url":"classes/PasswordRecoveryToken.html","title":"class - PasswordRecoveryToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PasswordRecoveryToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/PasswordRecoveryToken.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n            \n                Implements\n            \n            \n                            PasswordRecoveryTokenAttributes\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                token\n                            \n                            \n                                    Public\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/PasswordRecoveryToken.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/PasswordRecoveryToken.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/PasswordRecoveryToken.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { DataTypes, Model, Optional } from 'sequelize';\nimport sequelize from '../shared/core/Database';\n\ninterface PasswordRecoveryTokenAttributes {\n  id: string;\n  userId: string;\n  token: string;\n}\n\ntype PasswordRecoveryTokenCreationAttributes = Optional;\n\nexport default class PasswordRecoveryToken\n  extends Model\n  implements PasswordRecoveryTokenAttributes\n{\n  public id!: string;\n  public userId!: string;\n  public token!: string;\n}\n\nPasswordRecoveryToken.init(\n  {\n    id: {\n      type: DataTypes.UUID,\n      autoIncrement: true,\n      primaryKey: true,\n    },\n    userId: {\n      type: new DataTypes.STRING(128),\n      allowNull: false,\n    },\n    token: {\n      type: new DataTypes.TEXT(),\n      allowNull: false,\n    },\n  },\n  {\n    tableName: 'password_recovery_tokens',\n    sequelize,\n  },\n);\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PasswordRecoveryTokenAttributes.html":{"url":"interfaces/PasswordRecoveryTokenAttributes.html","title":"interface - PasswordRecoveryTokenAttributes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PasswordRecoveryTokenAttributes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/PasswordRecoveryToken.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        token\n                                \n                                \n                                        userId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DataTypes, Model, Optional } from 'sequelize';\nimport sequelize from '../shared/core/Database';\n\ninterface PasswordRecoveryTokenAttributes {\n  id: string;\n  userId: string;\n  token: string;\n}\n\ntype PasswordRecoveryTokenCreationAttributes = Optional;\n\nexport default class PasswordRecoveryToken\n  extends Model\n  implements PasswordRecoveryTokenAttributes\n{\n  public id!: string;\n  public userId!: string;\n  public token!: string;\n}\n\nPasswordRecoveryToken.init(\n  {\n    id: {\n      type: DataTypes.UUID,\n      autoIncrement: true,\n      primaryKey: true,\n    },\n    userId: {\n      type: new DataTypes.STRING(128),\n      allowNull: false,\n    },\n    token: {\n      type: new DataTypes.TEXT(),\n      allowNull: false,\n    },\n  },\n  {\n    tableName: 'password_recovery_tokens',\n    sequelize,\n  },\n);\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PriceType.html":{"url":"classes/PriceType.html","title":"class - PriceType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PriceType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/PriceType.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n            \n                Implements\n            \n            \n                            PriceTypeAttributes\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                associations\n                            \n                            \n                                    Public\n                                code\n                            \n                            \n                                    Public\n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                localizedPriceTypes\n                            \n                            \n                                    Public\n                                    Readonly\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            associations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/PriceType.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/PriceType.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/PriceType.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/PriceType.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                                Optional\n                            localizedPriceTypes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     LocalizedPriceType[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/PriceType.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/PriceType.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Association, DataTypes, Model, Optional } from 'sequelize';\nimport sequelize from '../shared/core/Database';\nimport LocalizedPriceType from './PriceType.Localized';\n\ninterface PriceTypeAttributes {\n  id: string;\n  code: string;\n}\n\ntype PriceTypeCreationAttributes = Optional;\n\nexport default class PriceType\n  extends Model\n  implements PriceTypeAttributes\n{\n  public id!: string;\n  public code!: string;\n\n  public readonly createdAt!: Date;\n  public readonly updatedAt!: Date;\n\n  public readonly localizedPriceTypes?: LocalizedPriceType[];\n\n  public static associations: {\n    products: Association;\n  };\n}\n\nPriceType.init(\n  {\n    id: {\n      type: DataTypes.UUID,\n      autoIncrement: true,\n      primaryKey: true,\n    },\n    code: {\n      type: new DataTypes.STRING(150),\n      allowNull: false,\n    },\n  },\n  {\n    tableName: 'price_types',\n    sequelize,\n  },\n);\n\nPriceType.hasMany(LocalizedPriceType, {\n  sourceKey: 'id',\n  foreignKey: 'refId',\n  as: 'localized_price_types',\n});\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PriceTypeAttributes.html":{"url":"interfaces/PriceTypeAttributes.html","title":"interface - PriceTypeAttributes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PriceTypeAttributes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/PriceType.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        code\n                                \n                                \n                                        id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Association, DataTypes, Model, Optional } from 'sequelize';\nimport sequelize from '../shared/core/Database';\nimport LocalizedPriceType from './PriceType.Localized';\n\ninterface PriceTypeAttributes {\n  id: string;\n  code: string;\n}\n\ntype PriceTypeCreationAttributes = Optional;\n\nexport default class PriceType\n  extends Model\n  implements PriceTypeAttributes\n{\n  public id!: string;\n  public code!: string;\n\n  public readonly createdAt!: Date;\n  public readonly updatedAt!: Date;\n\n  public readonly localizedPriceTypes?: LocalizedPriceType[];\n\n  public static associations: {\n    products: Association;\n  };\n}\n\nPriceType.init(\n  {\n    id: {\n      type: DataTypes.UUID,\n      autoIncrement: true,\n      primaryKey: true,\n    },\n    code: {\n      type: new DataTypes.STRING(150),\n      allowNull: false,\n    },\n  },\n  {\n    tableName: 'price_types',\n    sequelize,\n  },\n);\n\nPriceType.hasMany(LocalizedPriceType, {\n  sourceKey: 'id',\n  foreignKey: 'refId',\n  as: 'localized_price_types',\n});\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PriceTypeDto.html":{"url":"interfaces/PriceTypeDto.html","title":"interface - PriceTypeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PriceTypeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lookups/dto/PriceTypeDto.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        code\n                                \n                                \n                                        createdAt\n                                \n                                \n                                        format\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                                \n                                        updatedAt\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                    \n                                \n                                \n                                    \n                                        format:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export default interface PriceTypeDto {\n  id: string;\n  code: string;\n  name: string;\n  format: string;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/core/prisma.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onModuleDestroy\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onModuleDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/shared/core/prisma.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onModuleInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/shared/core/prisma.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnModuleInit, OnModuleDestroy } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService\n  extends PrismaClient\n  implements OnModuleInit, OnModuleDestroy\n{\n  async onModuleInit() {\n    await this.$connect();\n  }\n\n  async onModuleDestroy() {\n    await this.$disconnect();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterUser.html":{"url":"classes/RegisterUser.html","title":"class - RegisterUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/RegisterUser.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                hash\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                notificationsEnabled\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsEmail()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/RegisterUser.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hash\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/RegisterUser.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/RegisterUser.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/RegisterUser.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notificationsEnabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/RegisterUser.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/RegisterUser.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty } from 'class-validator';\n\nexport default class RegisterUser {\n  id: string;\n  @IsNotEmpty()\n  name: string;\n  @IsEmail()\n  email: string;\n  password: string;\n  notificationsEnabled: boolean;\n  hash: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ResetPassword.html":{"url":"interfaces/ResetPassword.html","title":"interface - ResetPassword","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ResetPassword\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/ResetPassword.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        newPassword\n                                \n                                \n                                        token\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        newPassword\n                                    \n                                \n                                \n                                    \n                                        newPassword:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export default interface ResetPassword {\n  email: string;\n  token: string;\n  newPassword: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Result.html":{"url":"classes/Result.html","title":"class - Result","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Result\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/models/Result.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                error\n                            \n                            \n                                    Public\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(status: string)\n                    \n                \n                        \n                            \n                                Defined in src/shared/models/Result.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/Result.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/Result.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/Result.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export default class Result {\n  constructor(status: string) {\n    this.status = status;\n  }\n\n  public status: string;\n  public error: any = null;\n  public data: any = null;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SearchListingDto.html":{"url":"classes/SearchListingDto.html","title":"class - SearchListingDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SearchListingDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/listing/dto/SearchListingDto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                followerId\n                            \n                            \n                                    Optional\n                                freeText\n                            \n                            \n                                    Optional\n                                listingTypeId\n                            \n                            \n                                    Optional\n                                ownerId\n                            \n                            \n                                    Optional\n                                pageIndex\n                            \n                            \n                                    Optional\n                                pageSize\n                            \n                            \n                                    Optional\n                                pageType\n                            \n                            \n                                    Optional\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            followerId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/listing/dto/SearchListingDto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            freeText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/listing/dto/SearchListingDto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            listingTypeId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/listing/dto/SearchListingDto.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            ownerId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/listing/dto/SearchListingDto.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            pageIndex\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/listing/dto/SearchListingDto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            pageSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/listing/dto/SearchListingDto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            pageType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/listing/dto/SearchListingDto.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                        \n                            \n                                    Defined in src/listing/dto/SearchListingDto.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export default class SearchListingDto {\n  ownerId?: string;\n  pageType?: string;\n  listingTypeId?: string;\n  freeText?: string;\n  status?: number = undefined;\n  pageIndex?: number;\n  pageSize?: number;\n  followerId?: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SearchResultDto.html":{"url":"classes/SearchResultDto.html","title":"class - SearchResultDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SearchResultDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/models/SearchResultDto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                count\n                            \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            count\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/SearchResultDto.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/SearchResultDto.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export default class SearchResultDto {\n  public count = 0;\n  public data: Array = [];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SearchStoryDto.html":{"url":"classes/SearchStoryDto.html","title":"class - SearchStoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SearchStoryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/story/dto/SearchStoryDto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                listingId\n                            \n                            \n                                    Optional\n                                ownerId\n                            \n                            \n                                    Optional\n                                pageIndex\n                            \n                            \n                                    Optional\n                                pageSize\n                            \n                            \n                                    Optional\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            listingId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/story/dto/SearchStoryDto.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            ownerId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/story/dto/SearchStoryDto.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            pageIndex\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/story/dto/SearchStoryDto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            pageSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/story/dto/SearchStoryDto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                        \n                            \n                                    Defined in src/story/dto/SearchStoryDto.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export default class SearchStoryDto {\n  ownerId?: string;\n  listingId?: string;\n  status?: number = undefined;\n  pageIndex?: number;\n  pageSize?: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Story.html":{"url":"classes/Story.html","title":"class - Story","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Story\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/Story.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n            \n                Implements\n            \n            \n                            StoryAttributes\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                body\n                            \n                            \n                                    Public\n                                    Optional\n                                conclusion\n                            \n                            \n                                    Public\n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Public\n                                disclaimerId\n                            \n                            \n                                    Public\n                                headerLine\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                imaginativeYear\n                            \n                            \n                                    Public\n                                    Optional\n                                intro\n                            \n                            \n                                    Public\n                                    Optional\n                                listingId\n                            \n                            \n                                    Public\n                                media\n                            \n                            \n                                    Public\n                                ownerId\n                            \n                            \n                                    Public\n                                privacy\n                            \n                            \n                                    Public\n                                status\n                            \n                            \n                                    Public\n                                    Optional\n                                tagline\n                            \n                            \n                                    Public\n                                    Readonly\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            body\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Story.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            conclusion\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Story.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Story.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            disclaimerId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Story.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            headerLine\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Story.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Story.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            imaginativeYear\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Story.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            intro\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Story.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            listingId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Story.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            media\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Story.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ownerId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Story.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            privacy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Story.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Story.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            tagline\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Story.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Story.ts:41\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { DataTypes, Model, Optional } from 'sequelize';\nimport sequelize from '../shared/core/Database';\n\ninterface StoryAttributes {\n  id: string;\n  ownerId: string;\n  listingId?: string | null;\n  privacy: string;\n  media: any;\n  headerLine: string;\n  disclaimerId: string;\n  intro?: string;\n  body?: string;\n  tagline?: string;\n  conclusion?: string;\n  imaginativeYear: number;\n  status: number;\n}\n\ntype StoryCreationAttributes = Optional;\n\nexport default class Story\n  extends Model\n  implements StoryAttributes\n{\n  public id!: string;\n  public ownerId!: string;\n  public listingId?: string | null;\n  public privacy!: string;\n  public media!: any;\n  public headerLine!: string;\n  public disclaimerId!: string;\n  public intro?: string;\n  public body?: string;\n  public tagline?: string;\n  public conclusion?: string;\n  public imaginativeYear!: number;\n  public status!: number; //0-draft|1- published,2-user_template|3-example_template\n\n  public readonly createdAt!: Date;\n  public readonly updatedAt!: Date;\n}\n\nStory.init(\n  {\n    id: {\n      type: DataTypes.UUID,\n      autoIncrement: true,\n      primaryKey: true,\n    },\n    ownerId: {\n      type: new DataTypes.STRING(50),\n      allowNull: false,\n    },\n    listingId: {\n      type: new DataTypes.STRING(50),\n      allowNull: true,\n    },\n    privacy: {\n      type: new DataTypes.STRING(50),\n      allowNull: false,\n    },\n    media: {\n      type: DataTypes.JSON,\n      allowNull: false,\n    },\n    headerLine: {\n      type: new DataTypes.STRING(200),\n      allowNull: false,\n    },\n    disclaimerId: {\n      type: new DataTypes.STRING(50),\n      allowNull: false,\n    },\n    intro: {\n      type: new DataTypes.STRING(3000),\n      allowNull: true,\n    },\n    body: {\n      type: new DataTypes.STRING(3000),\n      allowNull: true,\n    },\n    tagline: {\n      type: new DataTypes.STRING(200),\n      allowNull: true,\n    },\n    conclusion: {\n      type: new DataTypes.STRING(3000),\n      allowNull: true,\n    },\n    imaginativeYear: {\n      type: DataTypes.NUMBER,\n      allowNull: false,\n    },\n    status: {\n      type: DataTypes.NUMBER,\n      allowNull: false,\n    },\n  },\n  {\n    tableName: 'stories',\n    sequelize,\n  },\n);\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StoryAttributes.html":{"url":"interfaces/StoryAttributes.html","title":"interface - StoryAttributes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StoryAttributes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/Story.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        body\n                                \n                                \n                                            Optional\n                                        conclusion\n                                \n                                \n                                        disclaimerId\n                                \n                                \n                                        headerLine\n                                \n                                \n                                        id\n                                \n                                \n                                        imaginativeYear\n                                \n                                \n                                            Optional\n                                        intro\n                                \n                                \n                                            Optional\n                                        listingId\n                                \n                                \n                                        media\n                                \n                                \n                                        ownerId\n                                \n                                \n                                        privacy\n                                \n                                \n                                        status\n                                \n                                \n                                            Optional\n                                        tagline\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                    \n                                \n                                \n                                    \n                                        body:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        conclusion\n                                    \n                                \n                                \n                                    \n                                        conclusion:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disclaimerId\n                                    \n                                \n                                \n                                    \n                                        disclaimerId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headerLine\n                                    \n                                \n                                \n                                    \n                                        headerLine:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imaginativeYear\n                                    \n                                \n                                \n                                    \n                                        imaginativeYear:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        intro\n                                    \n                                \n                                \n                                    \n                                        intro:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        listingId\n                                    \n                                \n                                \n                                    \n                                        listingId:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        media\n                                    \n                                \n                                \n                                    \n                                        media:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ownerId\n                                    \n                                \n                                \n                                    \n                                        ownerId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        privacy\n                                    \n                                \n                                \n                                    \n                                        privacy:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tagline\n                                    \n                                \n                                \n                                    \n                                        tagline:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DataTypes, Model, Optional } from 'sequelize';\nimport sequelize from '../shared/core/Database';\n\ninterface StoryAttributes {\n  id: string;\n  ownerId: string;\n  listingId?: string | null;\n  privacy: string;\n  media: any;\n  headerLine: string;\n  disclaimerId: string;\n  intro?: string;\n  body?: string;\n  tagline?: string;\n  conclusion?: string;\n  imaginativeYear: number;\n  status: number;\n}\n\ntype StoryCreationAttributes = Optional;\n\nexport default class Story\n  extends Model\n  implements StoryAttributes\n{\n  public id!: string;\n  public ownerId!: string;\n  public listingId?: string | null;\n  public privacy!: string;\n  public media!: any;\n  public headerLine!: string;\n  public disclaimerId!: string;\n  public intro?: string;\n  public body?: string;\n  public tagline?: string;\n  public conclusion?: string;\n  public imaginativeYear!: number;\n  public status!: number; //0-draft|1- published,2-user_template|3-example_template\n\n  public readonly createdAt!: Date;\n  public readonly updatedAt!: Date;\n}\n\nStory.init(\n  {\n    id: {\n      type: DataTypes.UUID,\n      autoIncrement: true,\n      primaryKey: true,\n    },\n    ownerId: {\n      type: new DataTypes.STRING(50),\n      allowNull: false,\n    },\n    listingId: {\n      type: new DataTypes.STRING(50),\n      allowNull: true,\n    },\n    privacy: {\n      type: new DataTypes.STRING(50),\n      allowNull: false,\n    },\n    media: {\n      type: DataTypes.JSON,\n      allowNull: false,\n    },\n    headerLine: {\n      type: new DataTypes.STRING(200),\n      allowNull: false,\n    },\n    disclaimerId: {\n      type: new DataTypes.STRING(50),\n      allowNull: false,\n    },\n    intro: {\n      type: new DataTypes.STRING(3000),\n      allowNull: true,\n    },\n    body: {\n      type: new DataTypes.STRING(3000),\n      allowNull: true,\n    },\n    tagline: {\n      type: new DataTypes.STRING(200),\n      allowNull: true,\n    },\n    conclusion: {\n      type: new DataTypes.STRING(3000),\n      allowNull: true,\n    },\n    imaginativeYear: {\n      type: DataTypes.NUMBER,\n      allowNull: false,\n    },\n    status: {\n      type: DataTypes.NUMBER,\n      allowNull: false,\n    },\n  },\n  {\n    tableName: 'stories',\n    sequelize,\n  },\n);\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/StoryController.html":{"url":"controllers/StoryController.html","title":"controller - StoryController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  StoryController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/story/story.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createStory\n                            \n                            \n                                    Async\n                                deleteStory\n                            \n                            \n                                    Async\n                                getAllStories\n                            \n                            \n                                    Async\n                                getStory\n                            \n                            \n                                    Async\n                                searchStories\n                            \n                            \n                                    Async\n                                updateStory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createStory\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createStory(lang: string, userid: string, storyData: CreateStoryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Creates new story'})@ApiResponse({status: 201, description: 'The story has been successfully created.'})@ApiBody({type: 'CreateStoryDto'})@Post('v1/stories')\n                \n            \n\n            \n                \n                    Defined in src/story/story.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'en'\n                                    \n\n                                \n                                \n                                    userid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    storyData\n                                    \n                                                CreateStoryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteStory\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteStory(userId: string, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Deletes a story given its id'})@ApiResponse({status: 200, description: 'Returns Operation Result'})@Delete('v1/stories/:id')\n                \n            \n\n            \n                \n                    Defined in src/story/story.controller.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAllStories\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllStories(lang: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Gets all stories'})@ApiResponse({status: 200, description: 'Return all stories'})@Get('v1/stories')\n                \n            \n\n            \n                \n                    Defined in src/story/story.controller.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'en'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getStory\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getStory(userId: string, lang: string, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Gets a story given its id'})@ApiResponse({status: 200, description: 'Returns the story'})@Get('v1/stories/:id')\n                \n            \n\n            \n                \n                    Defined in src/story/story.controller.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'en'\n                                    \n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            searchStories\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    searchStories(userId: string, lang: string, searchModel: SearchStoryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Searches stories using provided field criteria'})@ApiResponse({status: 200, description: 'Return all matched stories'})@ApiBody({type: 'SearchStoryDto'})@Post('v1/stories/search')\n                \n            \n\n            \n                \n                    Defined in src/story/story.controller.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'en'\n                                    \n\n                                \n                                \n                                    searchModel\n                                    \n                                                SearchStoryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateStory\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateStory(lang: string, id: string, listingData: CreateStoryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Updates an existing story'})@ApiResponse({status: 201, description: 'The story has been successfully updated.'})@ApiBody({type: 'CreateStoryDto'})@Put('v1/stories/:id')\n                \n            \n\n            \n                \n                    Defined in src/story/story.controller.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'en'\n                                    \n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    listingData\n                                    \n                                                CreateStoryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  Post,\n  Param,\n  Put,\n  Headers,\n  Delete,\n} from '@nestjs/common';\nimport {\n  ApiBearerAuth,\n  ApiTags,\n  ApiOperation,\n  ApiResponse,\n  ApiBody,\n} from '@nestjs/swagger';\nimport { StoryService } from './story.service';\nimport CreateStoryDto from './dto/CreateStoryDto';\nimport { User } from '@/user/user.decorator';\nimport StoryDto from './dto/StoryDto';\nimport { v4 } from 'uuid';\nimport { execOperation } from '../utils/Utils';\nimport SearchStoryDto from './dto/SearchStoryDto';\n\n@ApiBearerAuth()\n@ApiTags('Stories')\n@Controller()\nexport class StoryController {\n  constructor(private readonly storyService: StoryService) {}\n\n  @ApiOperation({ summary: 'Creates new story' })\n  @ApiResponse({\n    status: 201,\n    description: 'The story has been successfully created.',\n  })\n  @ApiBody({ type: 'CreateStoryDto' })\n  @Post('v1/stories')\n  async createStory(\n    @Headers('lang') lang = 'en',\n    @User('id') userid: string,\n    @Body() storyData: CreateStoryDto,\n  ): Promise {\n    return await execOperation(async () => {\n      storyData.ownerId = userid;\n      storyData.id = v4();\n      const story = await this.storyService.addStory(lang, storyData);\n      return story;\n    });\n  }\n\n  @ApiOperation({ summary: 'Updates an existing story' })\n  @ApiResponse({\n    status: 201,\n    description: 'The story has been successfully updated.',\n  })\n  @ApiBody({ type: 'CreateStoryDto' })\n  @Put('v1/stories/:id')\n  async updateStory(\n    @Headers('lang') lang = 'en',\n    @Param('id') id: string,\n    @Body() listingData: CreateStoryDto,\n  ): Promise {\n    const story = await this.storyService.updateStory(id, lang, listingData);\n    return story;\n  }\n\n  @ApiOperation({ summary: 'Gets all stories' })\n  @ApiResponse({ status: 200, description: 'Return all stories' })\n  @Get('v1/stories')\n  async getAllStories(@Headers('lang') lang = 'en'): Promise {\n    const stories = await this.storyService.getAllStories(lang);\n    return stories;\n  }\n\n  @ApiOperation({ summary: 'Searches stories using provided field criteria' })\n  @ApiResponse({ status: 200, description: 'Return all matched stories' })\n  @ApiBody({ type: 'SearchStoryDto' })\n  @Post('v1/stories/search')\n  async searchStories(\n    @User('id') userId: string,\n    @Headers('lang') lang = 'en',\n    @Body() searchModel: SearchStoryDto,\n  ): Promise {\n    const stories = await this.storyService.searchStories(\n      searchModel,\n      lang,\n      userId,\n    );\n    return stories;\n  }\n\n  @ApiOperation({ summary: 'Gets a story given its id' })\n  @ApiResponse({ status: 200, description: 'Returns the story' })\n  @Get('v1/stories/:id')\n  async getStory(\n    @User('id') userId: string,\n    @Headers('lang') lang = 'en',\n    @Param('id') id: string,\n  ): Promise {\n    const story = await this.storyService.getStory(id, lang, userId);\n    return story;\n  }\n\n  @ApiOperation({ summary: 'Deletes a story given its id' })\n  @ApiResponse({ status: 200, description: 'Returns Operation Result' })\n  @Delete('v1/stories/:id')\n  async deleteStory(\n    @User('id') userId: string,\n    @Param('id') id: string,\n  ): Promise {\n    const result = await this.storyService.deleteStory(userId, id);\n    return result;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StoryDto.html":{"url":"interfaces/StoryDto.html","title":"interface - StoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StoryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/story/dto/StoryDto.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        body\n                                \n                                \n                                            Optional\n                                        conclusion\n                                \n                                \n                                        createdAt\n                                \n                                \n                                        disclaimerId\n                                \n                                \n                                        disclaimerName\n                                \n                                \n                                        headerLine\n                                \n                                \n                                        id\n                                \n                                \n                                        imaginativeYear\n                                \n                                \n                                            Optional\n                                        intro\n                                \n                                \n                                        isUserFollowed\n                                \n                                \n                                            Optional\n                                        listing\n                                \n                                \n                                            Optional\n                                        listingId\n                                \n                                \n                                        media\n                                \n                                \n                                        owner\n                                \n                                \n                                        privacy\n                                \n                                \n                                        status\n                                \n                                \n                                            Optional\n                                        tagline\n                                \n                                \n                                        type\n                                \n                                \n                                        updatedAt\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                    \n                                \n                                \n                                    \n                                        body:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        conclusion\n                                    \n                                \n                                \n                                    \n                                        conclusion:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disclaimerId\n                                    \n                                \n                                \n                                    \n                                        disclaimerId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disclaimerName\n                                    \n                                \n                                \n                                    \n                                        disclaimerName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headerLine\n                                    \n                                \n                                \n                                    \n                                        headerLine:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imaginativeYear\n                                    \n                                \n                                \n                                    \n                                        imaginativeYear:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        intro\n                                    \n                                \n                                \n                                    \n                                        intro:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isUserFollowed\n                                    \n                                \n                                \n                                    \n                                        isUserFollowed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        listing\n                                    \n                                \n                                \n                                    \n                                        listing:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        listingId\n                                    \n                                \n                                \n                                    \n                                        listingId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        media\n                                    \n                                \n                                \n                                    \n                                        media:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        owner\n                                    \n                                \n                                \n                                    \n                                        owner:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        privacy\n                                    \n                                \n                                \n                                    \n                                        privacy:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tagline\n                                    \n                                \n                                \n                                    \n                                        tagline:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export default interface StoryDto {\n  id: string;\n  type: string;\n  owner: any;\n  listingId?: string;\n  listing?: any;\n  privacy: string;\n  media: any;\n  headerLine: string;\n  disclaimerId: string;\n  disclaimerName: string;\n  intro?: string;\n  body?: string;\n  tagline?: string;\n  conclusion?: string;\n  imaginativeYear: number;\n  status: number;\n  isUserFollowed: boolean;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StoryModule.html":{"url":"modules/StoryModule.html","title":"module - StoryModule","body":"\n                   \n\n\n\n\n    Modules\n    StoryModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StoryModule\n\n\n\ncluster_StoryModule_providers\n\n\n\ncluster_StoryModule_exports\n\n\n\ncluster_StoryModule_imports\n\n\n\n\nAppLoggerModule\n\nAppLoggerModule\n\n\n\nStoryModule\n\nStoryModule\n\nStoryModule -->\n\nAppLoggerModule->StoryModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nStoryModule -->\n\nCoreModule->StoryModule\n\n\n\n\n\nListingModule\n\nListingModule\n\nStoryModule -->\n\nListingModule->StoryModule\n\n\n\n\n\nLookupsModule\n\nLookupsModule\n\nStoryModule -->\n\nLookupsModule->StoryModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nStoryModule -->\n\nUserModule->StoryModule\n\n\n\n\n\nStoryService \n\nStoryService \n\nStoryService  -->\n\nStoryModule->StoryService \n\n\n\n\n\nStoryService\n\nStoryService\n\nStoryModule -->\n\nStoryService->StoryModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/story/story.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            StoryService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            StoryController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppLoggerModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            ListingModule\n                        \n                        \n                            LookupsModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StoryService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    configure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/story/story.module.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {\n  MiddlewareConsumer,\n  Module,\n  NestModule,\n  RequestMethod,\n} from '@nestjs/common';\nimport { StoryController } from './story.controller';\nimport { StoryService } from './story.service';\nimport { CoreModule } from '@/shared/core/core.module';\nimport { UserModule } from '@/user/user.module';\nimport { LookupsModule } from '@/lookups/lookups.module';\nimport { AppLoggerModule } from '@/shared/appLogger/appLogger.module';\nimport { ListingModule } from '@/listing/listing.module';\nimport { AuthMiddleware } from '@/user/auth.middleware';\n\n@Module({\n  imports: [\n    CoreModule,\n    LookupsModule,\n    UserModule,\n    ListingModule,\n    AppLoggerModule,\n  ],\n  providers: [StoryService],\n  controllers: [StoryController],\n  exports: [StoryService],\n})\nexport class StoryModule implements NestModule {\n  public configure(consumer: MiddlewareConsumer) {\n    consumer.apply(AuthMiddleware).forRoutes(\n      { path: 'v1/stories', method: RequestMethod.POST },\n      { path: 'v1/stories/:id', method: RequestMethod.PUT },\n      { path: 'v1/stories', method: RequestMethod.GET },\n      //{path: 'v1/stories/search', method: RequestMethod.POST},\n      { path: 'v1/stories/:id', method: RequestMethod.DELETE },\n      { path: 'v1/stories/:id', method: RequestMethod.GET },\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StoryService.html":{"url":"injectables/StoryService.html","title":"injectable - StoryService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/story/story.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                addStory\n                            \n                            \n                                    Public\n                                    Async\n                                deleteStory\n                            \n                            \n                                    Public\n                                    Async\n                                getAllStories\n                            \n                            \n                                getListingSnippet\n                            \n                            \n                                    Public\n                                    Async\n                                getStory\n                            \n                            \n                                    Async\n                                mapStory\n                            \n                            \n                                    Public\n                                    Async\n                                searchStories\n                            \n                            \n                                    Public\n                                    Async\n                                updateStory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(lookupsService: LookupsService, userService: UserService, listingService: ListingService)\n                    \n                \n                        \n                            \n                                Defined in src/story/story.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        lookupsService\n                                                  \n                                                        \n                                                                        LookupsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        listingService\n                                                  \n                                                        \n                                                                        ListingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            addStory\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addStory(lang: string, storyData: CreateStoryDto)\n                \n            \n\n\n            \n                \n                    Defined in src/story/story.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    storyData\n                                    \n                                                CreateStoryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            deleteStory\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteStory(ownerId: string, id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/story/story.service.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ownerId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getAllStories\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllStories(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in src/story/story.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getListingSnippet\n                        \n                        \n                    \n                \n            \n            \n                \ngetListingSnippet(listing?: ListingDto)\n                \n            \n\n\n            \n                \n                    Defined in src/story/story.service.ts:223\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    listing\n                                    \n                                                ListingDto\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getStory\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getStory(id: string, lang: string, userId?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/story/story.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            mapStory\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapStory(story: any, lang: string, userFollowings: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/story/story.service.ts:191\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    story\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    userFollowings\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            searchStories\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    searchStories(searchModel: SearchStoryDto, lang: string, userId?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/story/story.service.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    searchModel\n                                    \n                                                SearchStoryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            updateStory\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateStory(id: string, lang: string, storyData: CreateStoryDto)\n                \n            \n\n\n            \n                \n                    Defined in src/story/story.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    storyData\n                                    \n                                                CreateStoryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport Story from '../models/Story';\nimport CreateStoryDto from './dto/CreateStoryDto';\nimport StoryDto from './dto/StoryDto';\nimport { LookupsService } from '../lookups/lookups.service';\nimport { UserService } from '@/user/user.service';\nimport OperationResult from '../shared/models/OperationResult';\nimport { ErrorCodes } from '@/shared/constants';\nimport SearchResultDto from '@/shared/models/SearchResultDto';\nimport SearchStoryDto from './dto/SearchStoryDto';\nimport { ListingService } from '@/listing/listing.service';\nimport ListingDto from '@/listing/dto/ListingDto';\n\n@Injectable()\nexport class StoryService {\n  constructor(\n    private lookupsService: LookupsService,\n    private userService: UserService,\n    private listingService: ListingService,\n  ) {}\n\n  public async addStory(\n    lang: string,\n    storyData: CreateStoryDto,\n  ): Promise {\n    const story = await Story.create(storyData);\n    return this.mapStory(story, lang);\n  }\n\n  public async updateStory(\n    id: string,\n    lang: string,\n    storyData: CreateStoryDto,\n  ): Promise {\n    await Story.update(storyData, {\n      where: {\n        id: id,\n      },\n    });\n    const story = await Story.findOne({\n      where: {\n        id: id,\n      },\n    });\n    return this.mapStory(story, lang);\n  }\n\n  public async getAllStories(lang: string): Promise {\n    const stories = await Story.findAll({\n      order: [['createdAt', 'DESC']],\n    });\n    const storyDtos: StoryDto[] = [];\n    for (const story of stories) {\n      storyDtos.push(await this.mapStory(story, lang));\n    }\n    return storyDtos;\n  }\n\n  public async getStory(\n    id: string,\n    lang: string,\n    userId?: string,\n  ): Promise {\n    const dbStory = await Story.findOne({\n      where: {\n        id: id,\n      },\n    });\n    if (dbStory) {\n      let userFollowings: string[] = [];\n      if (dbStory && userId) {\n        userFollowings = await this.userService.getUserFollowedUsers(userId, [\n          dbStory.ownerId,\n        ]);\n      }\n      const story = await this.mapStory(dbStory, lang, userFollowings);\n      if (dbStory?.listingId) {\n        const listing = await this.listingService.getListing(\n          dbStory.listingId,\n          lang,\n        );\n        if (listing) {\n          story.listing = this.getListingSnippet(listing);\n        }\n      }\n      return story;\n    }\n    return null;\n  }\n\n  public async deleteStory(\n    ownerId: string,\n    id: string,\n  ): Promise {\n    const result = new OperationResult();\n    try {\n      const story = await Story.findOne({\n        where: {\n          id: id,\n          ownerId: ownerId,\n        },\n      });\n      if (!story) {\n        result.success = false;\n        result.code = ErrorCodes.NOT_FOUND;\n      } else {\n        const mediaFiles = story.media;\n        if (mediaFiles) {\n          for (const media of mediaFiles) {\n            if (media.bucket && media.type && media.fileName)\n              this.lookupsService.deleteFile(\n                media.bucket,\n                media.type,\n                media.fileName,\n              );\n          }\n        }\n        await Story.destroy({\n          where: {\n            id: id,\n            ownerId: ownerId,\n          },\n        });\n        result.success = true;\n      }\n    } catch (error) {\n      result.success = false;\n      result.code = ErrorCodes.GENERAL_ERROR;\n      result.message = error;\n    }\n    return result;\n  }\n\n  public async searchStories(\n    searchModel: SearchStoryDto,\n    lang: string,\n    userId?: string,\n  ): Promise> {\n    const where: any = {};\n    if (searchModel.ownerId && searchModel.ownerId !== '') {\n      where.ownerId = searchModel.ownerId;\n    }\n    if (searchModel.listingId && searchModel.listingId !== '') {\n      where.listingId = searchModel.listingId;\n    }\n    if (searchModel.status != undefined) {\n      where.status = searchModel.status;\n    }\n\n    const stories = await Story.findAndCountAll({\n      where: where,\n      offset: ((searchModel.pageIndex || 1) - 1) * (searchModel.pageSize || 10),\n      limit: searchModel.pageSize,\n      order: [['createdAt', 'DESC']],\n    });\n\n    const result = new SearchResultDto();\n    result.count = stories.count;\n    if (result.count > 0) {\n      const storiesWithListings = stories.rows.filter(\n        (story) => story.listingId != undefined,\n      );\n      let listings: ListingDto[] = [];\n      if (storiesWithListings && storiesWithListings.length > 0) {\n        const listingIds = storiesWithListings.map(\n          (story) => story.listingId || '',\n        );\n        listings = await this.listingService.getListingsByIds(lang, listingIds);\n      }\n      const ownerIds = stories.rows.map((s) => s.ownerId);\n\n      let userFollowings: string[] = [];\n      if (userId)\n        userFollowings = await this.userService.getUserFollowedUsers(\n          userId,\n          ownerIds,\n        );\n      for (const dbStory of stories.rows) {\n        const story = await this.mapStory(dbStory, lang, userFollowings);\n        if (dbStory.listingId != undefined) {\n          story.listing = this.getListingSnippet(\n            listings.find((l) => l.id === dbStory.listingId),\n          );\n        }\n        result.data.push(story);\n      }\n    }\n    return result;\n  }\n\n  async mapStory(\n    story: any,\n    lang: string,\n    userFollowings: string[] = [],\n  ): Promise {\n    const disclaimers = await this.lookupsService.getDisclaimers(lang);\n    const user = await this.userService.getUser(story.ownerId);\n    return {\n      id: story.id,\n      type: 'Story',\n      owner: user,\n      listingId: story.listingId,\n      disclaimerId: story.disclaimerId,\n      disclaimerName:\n        disclaimers.find((lt) => lt.id === story.disclaimerId)?.name || '',\n      privacy: story.privacy,\n      media: story.media,\n      headerLine: story.headerLine,\n      body: story.body,\n      intro: story.intro,\n      tagline: story.tagline,\n      conclusion: story.conclusion,\n      imaginativeYear: story.imaginativeYear,\n      status: story.status,\n      isUserFollowed: userFollowings.find((f) => f === story.ownerId)\n        ? true\n        : false,\n      createdAt: story.createdAt,\n      updatedAt: story.updatedAt,\n    };\n  }\n\n  getListingSnippet(listing?: ListingDto): any {\n    if (listing) {\n      return {\n        id: listing.id,\n        brandName: listing.brandName,\n        name: listing.name,\n        ratings: 0,\n        media: listing.media,\n        followers: 0,\n        stories: 1,\n        priceType: listing.priceTypeName,\n        hiringType: listing.otherHiring || listing.hiringTypeName,\n        otherPriceType: listing.otherPriceType,\n        priceTypeFormat: listing.priceTypeFormat,\n        stockAvailability: listing.stockAvailability,\n        price: listing.price,\n        currencySymbol: listing.currencySymbol,\n        currencyCode: listing.currencyStandardCode,\n        offerPrice: listing.offerPrice,\n        avgReviews: Number(listing.avgReviews ?? 0),\n        reviewsCount: Number(listing.reviewsCount ?? 0),\n      };\n    }\n    return null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SuccessResult.html":{"url":"classes/SuccessResult.html","title":"class - SuccessResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SuccessResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/models/SuccessResult.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Result\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                error\n                            \n                            \n                                    Public\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_data: any)\n                    \n                \n                        \n                            \n                                Defined in src/shared/models/SuccessResult.ts:2\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                            \n                                \n                                    Inherited from         Result\n\n                                \n                            \n                        \n                            \n                                    Defined in         Result:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                            \n                                \n                                    Inherited from         Result\n\n                                \n                            \n                        \n                            \n                                    Defined in         Result:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Result\n\n                                \n                            \n                        \n                            \n                                    Defined in         Result:6\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import Result from './Result';\nexport default class SuccessResult extends Result {\n  constructor(_data: any) {\n    super('SUCCESS');\n    this.data = _data;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ToggleListingFollowDto.html":{"url":"interfaces/ToggleListingFollowDto.html","title":"interface - ToggleListingFollowDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ToggleListingFollowDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/listing/dto/ToggleListingFollowDto.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        isFollowed\n                                \n                                \n                                        listingId\n                                \n                                \n                                        userId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isFollowed\n                                    \n                                \n                                \n                                    \n                                        isFollowed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        listingId\n                                    \n                                \n                                \n                                    \n                                        listingId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export default interface ToggleListingFollowDto {\n  userId: string;\n  listingId: string;\n  isFollowed: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ToggleUserFollowDto.html":{"url":"classes/ToggleUserFollowDto.html","title":"class - ToggleUserFollowDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ToggleUserFollowDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/ToggleUserFollowDto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                followerId\n                            \n                            \n                                isFollowed\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            followerId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/ToggleUserFollowDto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFollowed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsBoolean()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/ToggleUserFollowDto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/ToggleUserFollowDto.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsBoolean, IsNotEmpty } from 'class-validator';\n\nexport default class ToggleUserFollowDto {\n  @IsNotEmpty()\n  userId: string;\n\n  @IsNotEmpty()\n  followerId: string;\n\n  @IsBoolean()\n  isFollowed: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/User.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n            \n                Implements\n            \n            \n                            UserAttributes\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                associations\n                            \n                            \n                                    Public\n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Public\n                                facebookId\n                            \n                            \n                                    Public\n                                    Optional\n                                featuredProductId\n                            \n                            \n                                    Public\n                                    Optional\n                                featuredProductName\n                            \n                            \n                                    Public\n                                googleId\n                            \n                            \n                                    Public\n                                hash\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                listings\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                notificationsEnabled\n                            \n                            \n                                    Public\n                                    Optional\n                                photoUrl\n                            \n                            \n                                    Public\n                                    Readonly\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            associations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/User.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/User.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/User.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            facebookId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/User.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            featuredProductId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/User.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            featuredProductName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/User.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            googleId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/User.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hash\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/User.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/User.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                                Optional\n                            listings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Listing[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/User.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/User.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notificationsEnabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/User.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            photoUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/User.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/User.ts:41\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Association, DataTypes, Model, Optional } from 'sequelize';\nimport sequelize from '../shared/core/Database';\nimport Listing from './Listing';\nimport PasswordRecoveryToken from './PasswordRecoveryToken';\n\ninterface UserAttributes {\n  id: string;\n  name: string;\n  email: string;\n  photoUrl?: string;\n  featuredProductName?: string;\n  featuredProductId?: string;\n  hash: string | null;\n  googleId: string | null;\n  facebookId: string | null;\n  notificationsEnabled: boolean;\n}\n\ntype UserCreationAttributes = Optional;\n\nexport default class User\n  extends Model\n  implements UserAttributes\n{\n  public id!: string;\n  public name!: string;\n  public email!: string;\n  public photoUrl?: string;\n  public featuredProductName?: string;\n  public featuredProductId?: string;\n\n  public hash!: string | null;\n  public googleId!: string | null;\n  public facebookId!: string | null;\n  public notificationsEnabled!: boolean;\n\n  public readonly createdAt!: Date;\n  public readonly updatedAt!: Date;\n\n  public readonly listings?: Listing[];\n\n  public static associations: {\n    listings: Association;\n    passwordRecoveryToken: Association;\n  };\n}\n\nUser.init(\n  {\n    id: {\n      type: DataTypes.UUID,\n      autoIncrement: true,\n      primaryKey: true,\n    },\n    name: {\n      type: new DataTypes.STRING(128),\n      allowNull: false,\n    },\n    email: {\n      type: new DataTypes.STRING(128),\n      allowNull: false,\n    },\n    photoUrl: {\n      type: new DataTypes.STRING(300),\n      allowNull: true,\n    },\n    featuredProductName: {\n      type: new DataTypes.STRING(200),\n      allowNull: true,\n    },\n    featuredProductId: {\n      type: new DataTypes.STRING(50),\n      allowNull: true,\n    },\n    hash: {\n      type: new DataTypes.STRING(128),\n      allowNull: false,\n    },\n    googleId: {\n      type: DataTypes.TEXT,\n      allowNull: true,\n    },\n    facebookId: {\n      type: DataTypes.TEXT,\n      allowNull: true,\n    },\n    notificationsEnabled: {\n      type: DataTypes.BOOLEAN,\n      allowNull: false,\n    },\n  },\n  {\n    tableName: 'users',\n    sequelize,\n  },\n);\n\nUser.hasMany(Listing, {\n  sourceKey: 'id',\n  foreignKey: 'ownerId',\n  as: 'listings',\n});\n\nUser.hasOne(PasswordRecoveryToken, {\n  sourceKey: 'id',\n  foreignKey: 'userId',\n  as: 'password_recovery_tokens',\n});\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserAttributes.html":{"url":"interfaces/UserAttributes.html","title":"interface - UserAttributes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserAttributes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/User.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        facebookId\n                                \n                                \n                                            Optional\n                                        featuredProductId\n                                \n                                \n                                            Optional\n                                        featuredProductName\n                                \n                                \n                                        googleId\n                                \n                                \n                                        hash\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                                \n                                        notificationsEnabled\n                                \n                                \n                                            Optional\n                                        photoUrl\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        facebookId\n                                    \n                                \n                                \n                                    \n                                        facebookId:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        featuredProductId\n                                    \n                                \n                                \n                                    \n                                        featuredProductId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        featuredProductName\n                                    \n                                \n                                \n                                    \n                                        featuredProductName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        googleId\n                                    \n                                \n                                \n                                    \n                                        googleId:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hash\n                                    \n                                \n                                \n                                    \n                                        hash:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        notificationsEnabled\n                                    \n                                \n                                \n                                    \n                                        notificationsEnabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        photoUrl\n                                    \n                                \n                                \n                                    \n                                        photoUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Association, DataTypes, Model, Optional } from 'sequelize';\nimport sequelize from '../shared/core/Database';\nimport Listing from './Listing';\nimport PasswordRecoveryToken from './PasswordRecoveryToken';\n\ninterface UserAttributes {\n  id: string;\n  name: string;\n  email: string;\n  photoUrl?: string;\n  featuredProductName?: string;\n  featuredProductId?: string;\n  hash: string | null;\n  googleId: string | null;\n  facebookId: string | null;\n  notificationsEnabled: boolean;\n}\n\ntype UserCreationAttributes = Optional;\n\nexport default class User\n  extends Model\n  implements UserAttributes\n{\n  public id!: string;\n  public name!: string;\n  public email!: string;\n  public photoUrl?: string;\n  public featuredProductName?: string;\n  public featuredProductId?: string;\n\n  public hash!: string | null;\n  public googleId!: string | null;\n  public facebookId!: string | null;\n  public notificationsEnabled!: boolean;\n\n  public readonly createdAt!: Date;\n  public readonly updatedAt!: Date;\n\n  public readonly listings?: Listing[];\n\n  public static associations: {\n    listings: Association;\n    passwordRecoveryToken: Association;\n  };\n}\n\nUser.init(\n  {\n    id: {\n      type: DataTypes.UUID,\n      autoIncrement: true,\n      primaryKey: true,\n    },\n    name: {\n      type: new DataTypes.STRING(128),\n      allowNull: false,\n    },\n    email: {\n      type: new DataTypes.STRING(128),\n      allowNull: false,\n    },\n    photoUrl: {\n      type: new DataTypes.STRING(300),\n      allowNull: true,\n    },\n    featuredProductName: {\n      type: new DataTypes.STRING(200),\n      allowNull: true,\n    },\n    featuredProductId: {\n      type: new DataTypes.STRING(50),\n      allowNull: true,\n    },\n    hash: {\n      type: new DataTypes.STRING(128),\n      allowNull: false,\n    },\n    googleId: {\n      type: DataTypes.TEXT,\n      allowNull: true,\n    },\n    facebookId: {\n      type: DataTypes.TEXT,\n      allowNull: true,\n    },\n    notificationsEnabled: {\n      type: DataTypes.BOOLEAN,\n      allowNull: false,\n    },\n  },\n  {\n    tableName: 'users',\n    sequelize,\n  },\n);\n\nUser.hasMany(Listing, {\n  sourceKey: 'id',\n  foreignKey: 'ownerId',\n  as: 'listings',\n});\n\nUser.hasOne(PasswordRecoveryToken, {\n  sourceKey: 'id',\n  foreignKey: 'userId',\n  as: 'password_recovery_tokens',\n});\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                facebookLogin\n                            \n                            \n                                    Async\n                                forgotPassword\n                            \n                            \n                                    Async\n                                getFollowedUsers\n                            \n                            \n                                    Async\n                                getListingFollowers\n                            \n                            \n                                    Async\n                                getUser\n                            \n                            \n                                    Async\n                                getUserFollowers\n                            \n                            \n                                    Async\n                                getUserProfile\n                            \n                            \n                                    Async\n                                googleLogin\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                resetPassword\n                            \n                            \n                                    Async\n                                toggleUserFollow\n                            \n                            \n                                    Async\n                                updateUserProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            facebookLogin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    facebookLogin(req: Request, _res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('v1/auth/facebook')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            forgotPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forgotPassword(req: Request, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('v1/auth/forgot-password')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getFollowedUsers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFollowedUsers(userId: string, pageIndex?: number, pageSize?: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Gets list of users followed by a given user'})@ApiResponse({status: 201, description: 'page of users'})@Post('v1/users/:userId/following')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:248\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pageIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    pageSize\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getListingFollowers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getListingFollowers(userId: string, listingId: string, pageIndex?: number, pageSize?: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Gets list of followers for a given listing'})@ApiResponse({status: 201, description: 'page of users'})@Post('v1/listings/:listingId/followers')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:264\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    listingId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pageIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    pageSize\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser(userId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('v1/auth/me')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:190\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUserFollowers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserFollowers(userId: string, pageIndex?: number, pageSize?: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Gets list of followers for a given user'})@ApiResponse({status: 201, description: 'page of users'})@Post('v1/users/:userId/followers')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:232\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pageIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    pageSize\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUserProfile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserProfile(userId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Gets user profile details given its Id'})@Get('v1/users/:userId/profile')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:200\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            googleLogin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    googleLogin(req: Request, _res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('v1/auth/google')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:154\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(loginDto: LoginUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('v1/auth/login')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginDto\n                                    \n                                                LoginUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(req: Request, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('v1/auth/register')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            resetPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetPassword(req: Request, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('v1/auth/reset-password')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            toggleUserFollow\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleUserFollow(followerId: string, toggleModel: ToggleUserFollowDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Toggles the follow record of a given user'})@ApiResponse({status: 201, description: 'Operation result object'})@ApiBody({type: 'ToggleUserFollowDto'})@Post('v1/users/toggle-user-follow')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:220\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    followerId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    toggleModel\n                                    \n                                                ToggleUserFollowDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateUserProfile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUserProfile(userId: string, userProfile: UserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Updates currently logged in user profile details'})@ApiResponse({status: 201, description: 'Operation result object'})@ApiBody({type: 'UserDto'})@Post('v1/users/profile')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:208\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userProfile\n                                    \n                                                UserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Post,\n  Controller,\n  Get,\n  Req,\n  Res,\n  Body,\n  Param,\n  Query,\n} from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { HttpStatus } from '@nestjs/common';\nimport { Request, Response } from 'express';\nimport {\n  ApiBearerAuth,\n  ApiBody,\n  ApiOperation,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { endWithInternalServerError } from './../utils/Http';\nimport { HttpException } from '@nestjs/common/exceptions/http.exception';\nimport LoginUserDto from './dto/LoginUserDto';\nimport { User } from './user.decorator';\nimport OperationResult from '@/shared/models/OperationResult';\nimport ToggleUserFollowDto from './dto/ToggleUserFollowDto';\nimport UserDto from './dto/UserDto';\nimport { UserSnippetDto } from './dto/UserSnippetDto';\n\n@ApiBearerAuth()\n@ApiTags('Authentication')\n@Controller()\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n\n  @Post('v1/auth/register')\n  async register(@Req() req: Request, @Res() res: Response): Promise {\n    const result = await this.userService.register(req.body);\n    if (result.status === 'ERROR') {\n      throw new HttpException(\n        { errors: result.error },\n        HttpStatus.INTERNAL_SERVER_ERROR,\n      );\n    } else if (result.status === 'SUCCESS') {\n      const token = this.userService.generateJWT(result.data);\n      res.send({\n        id: result.data.id,\n        name: result.data.name,\n        email: result.data.email,\n        token: token,\n      });\n      // return req.logIn(result.data, (err) => {\n      //   if (err) {\n      //     return next(err);\n      //   }\n      //   return res.send({ ...(result.data as any).dataValues, hash: null });\n      // });\n    }\n  }\n\n  @Post('v1/auth/forgot-password')\n  async forgotPassword(\n    @Req() req: Request,\n    @Res() res: Response,\n  ): Promise {\n    const result = await this.userService.forgotPassword(req.body.email);\n    if (result.status === 'NOT_FOUND') {\n      return res.status(HttpStatus.NOT_FOUND).end();\n    } else if (result.status === 'SUCCESS') {\n      res.send({ message: 'Recovery token sent successfully!' });\n    } else {\n      endWithInternalServerError(res, result.error);\n    }\n  }\n\n  @Post('v1/auth/reset-password')\n  async resetPassword(@Req() req: Request, @Res() res: Response): Promise {\n    const result = await this.userService.resetPassword(req.body);\n    if (result.status === 'NOT_FOUND') {\n      return res.status(HttpStatus.NOT_FOUND).end();\n    } else {\n      res.send({ message: 'Password reset successfully!' });\n    }\n  }\n\n  //@UsePipes(new ValidationPipe())\n  @Post('v1/auth/login')\n  async login(@Body() loginDto: LoginUserDto): Promise {\n    const result = await this.userService.localLogin(\n      loginDto.email,\n      loginDto.password,\n    );\n    if (result.status === 'SUCCESS') {\n      const token = await this.userService.generateJWT(result.data);\n      return {\n        id: result.data.id,\n        name: result.data.name,\n        email: result.data.email,\n        token: token,\n      };\n    } else {\n      throw new HttpException({ errors: result.error }, 401);\n    }\n\n    // return passport.authenticate(\"local\", (err, user, info) => {\n    //   if (err) {\n    //     return next(err);\n    //   }\n    //   if (!user) {\n    //     return res.status(HttpStatus.UNAUTHORIZED).send({\n    //       errors: [!!info ? info.message : \"Incorrect email or password!\"],\n    //     });\n    //   }\n    //   req.logIn(user, (err) => {\n    //     if (err) {\n    //       return next(err);\n    //     }\n    //     return res.send({ ...user.dataValues, hash: null });\n    //   });\n    // })(req, res, next);\n  }\n\n  @Post('v1/auth/facebook')\n  async facebookLogin(\n    @Req() req: Request,\n    @Res() _res: Response,\n  ): Promise {\n    const result = await this.userService.facebookLogin(req.body.token);\n\n    if (result.status === 'SUCCESS') {\n      const token = await this.userService.generateJWT(result.data);\n      return _res.send({\n        id: result.data.id,\n        name: result.data.name,\n        email: result.data.email,\n        token: token,\n      });\n    } else {\n      throw new HttpException({ errors: result.error }, 401);\n    }\n\n    // if (result.status === \"NO_DATA\") {\n    //   res\n    //     .status(HttpStatus.BAD_REQUEST)\n    //     .send({ errors: [getStatusText(HttpStatus.BAD_REQUEST)] });\n    // } else if (result.status === \"ERROR\") {\n    //   endWithInternalServerError(res, result.error);\n    // } else {\n    //   res.send((result.data as any).dataValues);\n    // }\n  }\n\n  @Post('v1/auth/google')\n  async googleLogin(@Req() req: Request, @Res() _res: Response): Promise {\n    const result = await this.userService.googleLogin(req.body.token);\n\n    if (result.status === 'SUCCESS') {\n      const token = await this.userService.generateJWT(result.data);\n      _res.send({\n        id: result.data.id,\n        name: result.data.name,\n        email: result.data.email,\n        token: token,\n      });\n    } else {\n      throw new HttpException({ errors: result.error }, 401);\n    }\n\n    // if (result.status === \"NO_DATA\") {\n    //   res\n    //     .status(HttpStatus.BAD_REQUEST)\n    //     .send({ errors: [getStatusText(HttpStatus.BAD_REQUEST)] });\n    // } else if (result.status === \"ERROR\") {\n    //   endWithInternalServerError(res, result.error);\n    // } else {\n    //   res.send((result.data as any).dataValues);\n    // }\n  }\n\n  // @Post(\"v1/auth/logout\")\n  // async logout(@Req() req: Request, @Res() res: Response) {\n  //   if (!req.isAuthenticated || !req.isAuthenticated()) {\n  //     res.status(HttpStatus.BAD_REQUEST).end();\n  //   }\n  //   req.logout();\n  //   res.status(HttpStatus.OK).end();\n  // }\n\n  @Get('v1/auth/me')\n  async getUser(@User('id') userId: string) {\n    if (!userId) {\n      throw new HttpException({ errors: 'Unauthorized' }, 401);\n    }\n    const result = this.userService.getUser(userId);\n    return result;\n  }\n\n  @ApiOperation({ summary: 'Gets user profile details given its Id' })\n  @Get('v1/users/:userId/profile')\n  async getUserProfile(@Param('userId') userId: string): Promise {\n    return await this.userService.getUser(userId);\n  }\n\n  @ApiOperation({ summary: 'Updates currently logged in user profile details' })\n  @ApiResponse({ status: 201, description: 'Operation result object' })\n  @ApiBody({ type: 'UserDto' })\n  @Post('v1/users/profile')\n  async updateUserProfile(\n    @User('id') userId: string,\n    @Body() userProfile: UserDto,\n  ): Promise {\n    userProfile.id = userId;\n    return await this.userService.updateUserProfile(userProfile);\n  }\n\n  @ApiOperation({ summary: 'Toggles the follow record of a given user' })\n  @ApiResponse({ status: 201, description: 'Operation result object' })\n  @ApiBody({ type: 'ToggleUserFollowDto' })\n  @Post('v1/users/toggle-user-follow')\n  async toggleUserFollow(\n    @User('id') followerId: string,\n    @Body() toggleModel: ToggleUserFollowDto,\n  ): Promise {\n    toggleModel.followerId = followerId;\n    const result = await this.userService.toggleUserFollow(toggleModel);\n    return result;\n  }\n\n  @ApiOperation({ summary: 'Gets list of followers for a given user' })\n  @ApiResponse({ status: 201, description: 'page of users' })\n  @Post('v1/users/:userId/followers')\n  async getUserFollowers(\n    @Param('userId') userId: string,\n    @Query('pageIndex') pageIndex?: number,\n    @Query('pageSize') pageSize?: number,\n  ): Promise {\n    const result = await this.userService.getUserFollowers(\n      userId,\n      pageIndex ?? 1,\n      pageSize ?? 10,\n    );\n    return result;\n  }\n\n  @ApiOperation({ summary: 'Gets list of users followed by a given user' })\n  @ApiResponse({ status: 201, description: 'page of users' })\n  @Post('v1/users/:userId/following')\n  async getFollowedUsers(\n    @Param('userId') userId: string,\n    @Query('pageIndex') pageIndex?: number,\n    @Query('pageSize') pageSize?: number,\n  ): Promise {\n    const result = await this.userService.getFollowedUsers(\n      userId,\n      pageIndex ?? 1,\n      pageSize ?? 10,\n    );\n    return result;\n  }\n\n  @ApiOperation({ summary: 'Gets list of followers for a given listing' })\n  @ApiResponse({ status: 201, description: 'page of users' })\n  @Post('v1/listings/:listingId/followers')\n  async getListingFollowers(\n    @User('id') userId: string,\n    @Param('listingId') listingId: string,\n    @Query('pageIndex') pageIndex?: number,\n    @Query('pageSize') pageSize?: number,\n  ): Promise {\n    const result = await this.userService.getListingFollowers(\n      userId,\n      listingId,\n      pageIndex ?? 1,\n      pageSize ?? 10,\n    );\n    return result;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDto.html":{"url":"classes/UserDto.html","title":"class - UserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/UserDto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                featuredProductId\n                            \n                            \n                                    Optional\n                                featuredProductName\n                            \n                            \n                                followersCount\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                photoUrl\n                            \n                            \n                                productsCount\n                            \n                            \n                                storiesCount\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            featuredProductId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/UserDto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            featuredProductName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/UserDto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            followersCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/UserDto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/UserDto.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/UserDto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            photoUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/UserDto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            productsCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/UserDto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            storiesCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/UserDto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/UserDto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\n\nexport default class UserDto {\n  id: string;\n  @IsNotEmpty()\n  name: string;\n  type: string;\n  photoUrl?: string;\n  featuredProductName?: string;\n  featuredProductId?: string;\n  followersCount: number;\n  storiesCount: number;\n  productsCount: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserFollower.html":{"url":"classes/UserFollower.html","title":"class - UserFollower","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserFollower\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/UserFollower.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n            \n                Implements\n            \n            \n                            UserFollowerAttributes\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Public\n                                followerId\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Public\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/UserFollower.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            followerId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/UserFollower.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/UserFollower.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/UserFollower.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/UserFollower.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { DataTypes, Model, Optional } from 'sequelize';\nimport sequelize from '../shared/core/Database';\n\ninterface UserFollowerAttributes {\n  id: string;\n  userId: string;\n  followerId: string;\n}\n\ntype UserFollowerCreationAttributes = Optional;\n\nexport default class UserFollower\n  extends Model\n  implements UserFollowerAttributes\n{\n  public id!: string;\n  public userId!: string;\n  public followerId!: string;\n\n  public readonly createdAt!: Date;\n  public readonly updatedAt!: Date;\n}\n\nUserFollower.init(\n  {\n    id: {\n      type: DataTypes.UUID,\n      autoIncrement: true,\n      primaryKey: true,\n    },\n    userId: {\n      type: new DataTypes.STRING(50),\n      allowNull: false,\n    },\n    followerId: {\n      type: new DataTypes.STRING(50),\n      allowNull: false,\n    },\n  },\n  {\n    tableName: 'user_followers',\n    sequelize,\n  },\n);\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserFollowerAttributes.html":{"url":"interfaces/UserFollowerAttributes.html","title":"interface - UserFollowerAttributes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserFollowerAttributes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/UserFollower.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        followerId\n                                \n                                \n                                        id\n                                \n                                \n                                        userId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        followerId\n                                    \n                                \n                                \n                                    \n                                        followerId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DataTypes, Model, Optional } from 'sequelize';\nimport sequelize from '../shared/core/Database';\n\ninterface UserFollowerAttributes {\n  id: string;\n  userId: string;\n  followerId: string;\n}\n\ntype UserFollowerCreationAttributes = Optional;\n\nexport default class UserFollower\n  extends Model\n  implements UserFollowerAttributes\n{\n  public id!: string;\n  public userId!: string;\n  public followerId!: string;\n\n  public readonly createdAt!: Date;\n  public readonly updatedAt!: Date;\n}\n\nUserFollower.init(\n  {\n    id: {\n      type: DataTypes.UUID,\n      autoIncrement: true,\n      primaryKey: true,\n    },\n    userId: {\n      type: new DataTypes.STRING(50),\n      allowNull: false,\n    },\n    followerId: {\n      type: new DataTypes.STRING(50),\n      allowNull: false,\n    },\n  },\n  {\n    tableName: 'user_followers',\n    sequelize,\n  },\n);\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nCoreModule\n\nCoreModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nCoreModule->UserModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CoreModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    configure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.module.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {\n  MiddlewareConsumer,\n  Module,\n  NestModule,\n  RequestMethod,\n} from '@nestjs/common';\nimport { UserController } from './user.controller';\nimport { UserService } from './user.service';\nimport { AuthMiddleware } from './auth.middleware';\nimport { CoreModule } from './../shared/core/core.module';\n\n@Module({\n  imports: [CoreModule],\n  providers: [UserService],\n  controllers: [UserController],\n  exports: [UserService],\n})\nexport class UserModule implements NestModule {\n  public configure(consumer: MiddlewareConsumer) {\n    consumer\n      .apply(AuthMiddleware)\n      .forRoutes({ path: 'v1/auth/me', method: RequestMethod.GET });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserSnippetDto.html":{"url":"classes/UserSnippetDto.html","title":"class - UserSnippetDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserSnippetDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/UserSnippetDto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                featuredProductId\n                            \n                            \n                                featuredProductName\n                            \n                            \n                                id\n                            \n                            \n                                isFollowed\n                            \n                            \n                                isFollower\n                            \n                            \n                                isFriend\n                            \n                            \n                                name\n                            \n                            \n                                photoUrl\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            featuredProductId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/UserSnippetDto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            featuredProductName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/UserSnippetDto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/UserSnippetDto.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFollowed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/UserSnippetDto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFollower\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/UserSnippetDto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFriend\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/UserSnippetDto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/UserSnippetDto.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            photoUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/UserSnippetDto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/user/dto/UserSnippetDto.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UserSnippetDto {\n  type: string;\n  id: string;\n  name: string;\n  photoUrl: string;\n  featuredProductName: string;\n  featuredProductId: string;\n  isFriend: boolean;\n  isFollower: boolean;\n  isFollowed: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidationPipe.html":{"url":"injectables/ValidationPipe.html","title":"injectable - ValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/pipes/validation.pipe.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                buildError\n                            \n                            \n                                    Private\n                                toValidate\n                            \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            buildError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    buildError(errors)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/pipes/validation.pipe.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errors\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            toValidate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toValidate(metatype)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/pipes/validation.pipe.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    metatype\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value, metadata: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/pipes/validation.pipe.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  PipeTransform,\n  ArgumentMetadata,\n  BadRequestException,\n  HttpStatus,\n  Injectable,\n} from '@nestjs/common';\nimport { validate } from 'class-validator';\nimport { plainToClass } from 'class-transformer';\nimport { HttpException } from '@nestjs/common/exceptions/http.exception';\n\n@Injectable()\nexport class ValidationPipe implements PipeTransform {\n  async transform(value, metadata: ArgumentMetadata) {\n    if (!value) {\n      throw new BadRequestException('No data submitted');\n    }\n\n    const { metatype } = metadata;\n    if (!metatype || !this.toValidate(metatype)) {\n      return value;\n    }\n    const object = plainToClass(metatype, value);\n    const errors = await validate(object);\n    if (errors.length > 0) {\n      throw new HttpException(\n        {\n          message: 'Input data validation failed',\n          errors: this.buildError(errors),\n        },\n        HttpStatus.BAD_REQUEST,\n      );\n    }\n    return value;\n  }\n\n  private buildError(errors) {\n    const result = {};\n    errors.forEach((el) => {\n      const prop = el.property;\n      Object.entries(el.constraints).forEach((constraint) => {\n        result[prop + constraint[0]] = `${constraint[1]}`;\n      });\n    });\n    return result;\n  }\n\n  private toValidate(metatype): boolean {\n    const types = [String, Boolean, Number, Array, Object];\n    return !types.find((type) => metatype === type);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/dev/cache.controller.ts\n            \n            controller\n            CacheController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/dev/dev.controller.ts\n            \n            controller\n            DevController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/dev/dev.controller.ts\n            \n            variable\n            umzug\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/listing/dto/CreateListingDto.ts\n            \n            interface\n            CreateListingDto\n            \n                0 %\n                (0/29)\n            \n        \n        \n            \n                \n                src/listing/dto/CreateListingReviewDto.ts\n            \n            interface\n            ListingReviewDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/listing/dto/ListingDto.ts\n            \n            interface\n            ListingDto\n            \n                0 %\n                (0/42)\n            \n        \n        \n            \n                \n                src/listing/dto/ListingReviewDto.ts\n            \n            interface\n            ListingReviewDto\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/listing/dto/SearchListingDto.ts\n            \n            class\n            SearchListingDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/listing/dto/ToggleListingFollowDto.ts\n            \n            interface\n            ToggleListingFollowDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/listing/listing.controller.ts\n            \n            controller\n            ListingController\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/listing/listing.service.ts\n            \n            injectable\n            ListingService\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/lookups/dto/CurrencyDto.ts\n            \n            interface\n            CurrencyDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/lookups/dto/DisclaimerDto.ts\n            \n            interface\n            DisclaimerDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/lookups/dto/HiringTypeDto.ts\n            \n            interface\n            HiringTypeDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/lookups/dto/ListingTypeDto.ts\n            \n            interface\n            ListingTypeDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/lookups/dto/PriceTypeDto.ts\n            \n            interface\n            PriceTypeDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/lookups/file.controller.ts\n            \n            controller\n            FilesController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/lookups/file.controller.ts\n            \n            variable\n            domain\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lookups/lookups.controller.ts\n            \n            controller\n            LookupsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/lookups/lookups.service.ts\n            \n            injectable\n            LookupsService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/lookups/lookups.service.ts\n            \n            variable\n            rootDir\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            onListening\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            debug\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            module\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/Currency.Localized.ts\n            \n            class\n            LocalizedCurrency\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/models/Currency.Localized.ts\n            \n            interface\n            LocalizedCurrencyAttributes\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/models/Currency.ts\n            \n            class\n            Currency\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/models/Currency.ts\n            \n            interface\n            CurrencyAttributes\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/models/Disclaimer.Localized.ts\n            \n            class\n            LocalizedDisclaimer\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/models/Disclaimer.Localized.ts\n            \n            interface\n            LocalizedDisclaimerAttributes\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/models/Disclaimer.ts\n            \n            class\n            Disclaimer\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/models/Disclaimer.ts\n            \n            interface\n            DisclaimerAttributes\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/models/HiringType.Localized.ts\n            \n            class\n            LocalizedHiringType\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/models/HiringType.Localized.ts\n            \n            interface\n            LocalizedHiringTypeAttributes\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/models/HiringType.ts\n            \n            class\n            HiringType\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/models/HiringType.ts\n            \n            interface\n            HiringTypeAttributes\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/models/Listing.ts\n            \n            class\n            Listing\n            \n                0 %\n                (0/31)\n            \n        \n        \n            \n                \n                src/models/Listing.ts\n            \n            interface\n            ListingAttributes\n            \n                0 %\n                (0/29)\n            \n        \n        \n            \n                \n                src/models/ListingFollower.ts\n            \n            class\n            ListingFollower\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/models/ListingFollower.ts\n            \n            interface\n            ListingFollowerAttributes\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/models/ListingReview.ts\n            \n            class\n            ListingReview\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/models/ListingReview.ts\n            \n            interface\n            ListingReviewAttributes\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/models/ListingType.Localized.ts\n            \n            class\n            LocalizedListingType\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/models/ListingType.Localized.ts\n            \n            interface\n            LocalizedListingTypeAttributes\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/models/ListingType.ts\n            \n            class\n            ListingType\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/models/ListingType.ts\n            \n            interface\n            ListingTypeAttributes\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/models/PasswordRecoveryToken.ts\n            \n            class\n            PasswordRecoveryToken\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/models/PasswordRecoveryToken.ts\n            \n            interface\n            PasswordRecoveryTokenAttributes\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/models/PriceType.Localized.ts\n            \n            class\n            LocalizedPriceType\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/models/PriceType.Localized.ts\n            \n            interface\n            LocalizedPriceTypeAttributes\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/models/PriceType.ts\n            \n            class\n            PriceType\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/models/PriceType.ts\n            \n            interface\n            PriceTypeAttributes\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/models/Story.ts\n            \n            class\n            Story\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/models/Story.ts\n            \n            interface\n            StoryAttributes\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/models/User.ts\n            \n            class\n            User\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/models/User.ts\n            \n            interface\n            UserAttributes\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/models/UserFollower.ts\n            \n            class\n            UserFollower\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/models/UserFollower.ts\n            \n            interface\n            UserFollowerAttributes\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/shared/appLogger/appLogger.service.ts\n            \n            injectable\n            AppLogger\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/appLogger/appLogger.service.ts\n            \n            variable\n            logFile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/constants.ts\n            \n            class\n            ErrorCodes\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/shared/core/Cache.ts\n            \n            class\n            AppCache\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/shared/core/Cache.ts\n            \n            class\n            CacheObject\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/shared/core/Database.ts\n            \n            variable\n            pgPool\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/core/Database.ts\n            \n            variable\n            sequelize\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/core/Database.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/core/Environment.ts\n            \n            variable\n            env\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/core/Environment.ts\n            \n            variable\n            envFilePath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/core/Environment.ts\n            \n            variable\n            NODE_ENV\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/core/FireBase.ts\n            \n            injectable\n            FireBase\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/core/MailManager.ts\n            \n            injectable\n            MailManager\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/core/OneSignal.ts\n            \n            function\n            sendNotification\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/core/OneSignal.ts\n            \n            function\n            sendWelcomeNotification\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/core/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/models/ErrorResult.ts\n            \n            class\n            ErrorResult\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/shared/models/KeyValuePair.ts\n            \n            class\n            KeyValuePair\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/shared/models/NoDataResult.ts\n            \n            class\n            NoDataResult\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/shared/models/NotFoundResult.ts\n            \n            class\n            NotFoundResult\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/shared/models/OperationResult.ts\n            \n            class\n            OperationResult\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/shared/models/Result.ts\n            \n            class\n            Result\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/shared/models/SearchResultDto.ts\n            \n            class\n            SearchResultDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/models/SuccessResult.ts\n            \n            class\n            SuccessResult\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/shared/pipes/validation.pipe.ts\n            \n            injectable\n            ValidationPipe\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/story/dto/CreateStoryDto.ts\n            \n            interface\n            CreateStoryDto\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/story/dto/SearchStoryDto.ts\n            \n            class\n            SearchStoryDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/story/dto/StoryDto.ts\n            \n            interface\n            StoryDto\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/story/story.controller.ts\n            \n            controller\n            StoryController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/story/story.service.ts\n            \n            injectable\n            StoryService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/user/auth.middleware.ts\n            \n            injectable\n            AuthMiddleware\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/auth.middleware.ts\n            \n            variable\n            JWT_SECRET\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/dto/GooglePofile.ts\n            \n            interface\n            IGoogleProfile\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/user/dto/LoginUserDto.ts\n            \n            class\n            LoginUserDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/dto/RegisterUser.ts\n            \n            class\n            RegisterUser\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/user/dto/ResetPassword.ts\n            \n            interface\n            ResetPassword\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/dto/ToggleUserFollowDto.ts\n            \n            class\n            ToggleUserFollowDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/dto/UserDto.ts\n            \n            class\n            UserDto\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/user/dto/UserSnippetDto.ts\n            \n            class\n            UserSnippetDto\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/user/user.decorator.ts\n            \n            variable\n            JWT_SECRET\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/user.decorator.ts\n            \n            variable\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            variable\n            JWT_SECRET\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            variable\n            OAuth2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            variable\n            oauth2Client\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/Http.ts\n            \n            function\n            endWithInternalServerError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/Utils.ts\n            \n            variable\n            execOperation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/Utils.ts\n            \n            variable\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.6.15\n        \n            @nestjs/core : ^7.6.15\n        \n            @nestjs/platform-express : ^7.6.15\n        \n            @nestjs/swagger : ^4.4.0\n        \n            @prisma/client : ^2.23.0\n        \n            @sendgrid/mail : ^7.2.5\n        \n            app-root-path : ^3.0.0\n        \n            axios : ^0.20.0\n        \n            class-transformer : ^0.3.1\n        \n            class-validator : ^0.12.2\n        \n            dotenv : ^8.2.0\n        \n            googleapis : ^59.0.0\n        \n            http-status-codes : ^2.1.3\n        \n            jsonwebtoken : ^8.5.1\n        \n            moment : ^2.29.1\n        \n            morgan : ^1.9.1\n        \n            onesignal-node : ^3.1.5\n        \n            passport : ^0.4.1\n        \n            passport-google-oauth20 : ^2.0.0\n        \n            passport-local : ^1.0.0\n        \n            pg : ^8.3.3\n        \n            pg-hstore : ^2.3.3\n        \n            prisma : ^2.23.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.6\n        \n            sequelize : ^6.3.5\n        \n            sequelize-cli : ^6.2.0\n        \n            sequelize-typescript : ^1.1.0\n        \n            swagger-ui-express : ^4.1.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ListingStatus   (src/.../constants.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/shared/constants.ts\n    \n        \n            \n                \n                    \n                        \n                        ListingStatus\n                    \n                \n                        \n                            \n                                 Draft\n                            \n                        \n                        \n                            \n                                 Published\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            endWithInternalServerError   (src/.../Http.ts)\n                        \n                        \n                            onListening   (src/.../main.ts)\n                        \n                        \n                            sendNotification   (src/.../OneSignal.ts)\n                        \n                        \n                            sendWelcomeNotification   (src/.../OneSignal.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onListening\n                        \n                        \n                    \n                \n            \n            \n                \nonListening()\n                \n            \n\n\n\n\n        \n    \n    src/utils/Http.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            endWithInternalServerError\n                        \n                        \n                    \n                \n            \n            \n                \nendWithInternalServerError(res, err)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    err\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/shared/core/OneSignal.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            sendNotification\n                        \n                        \n                    \n                \n            \n            \n                \nsendNotification(email, header, body)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    header\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendWelcomeNotification\n                        \n                        \n                    \n                \n            \n            \n                \nsendWelcomeNotification(email)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nDescription\nImaginative News Backend\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSwagger Docs\nhttp://localhost:3000/docs/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ApplicationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppLoggerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DevModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ListingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LookupsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StoryModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ApplicationModule\n\n\n\ncluster_ApplicationModule_imports\n\n\n\ncluster_AppLoggerModule\n\n\n\ncluster_AppLoggerModule_exports\n\n\n\ncluster_AppLoggerModule_providers\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_exports\n\n\n\ncluster_CoreModule_providers\n\n\n\ncluster_ListingModule\n\n\n\ncluster_ListingModule_exports\n\n\n\ncluster_ListingModule_providers\n\n\n\ncluster_LookupsModule\n\n\n\ncluster_LookupsModule_exports\n\n\n\ncluster_LookupsModule_providers\n\n\n\ncluster_StoryModule\n\n\n\ncluster_StoryModule_exports\n\n\n\ncluster_StoryModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAppLoggerModule\n\nAppLoggerModule\n\n\n\nListingModule\n\nListingModule\n\nListingModule -->\n\nAppLoggerModule->ListingModule\n\n\n\n\n\nStoryModule\n\nStoryModule\n\nStoryModule -->\n\nAppLoggerModule->StoryModule\n\n\n\n\n\nApplicationModule\n\nApplicationModule\n\nApplicationModule -->\n\nAppLoggerModule->ApplicationModule\n\n\n\n\n\nAppLogger \n\nAppLogger \n\nAppLogger  -->\n\nAppLoggerModule->AppLogger \n\n\n\n\n\nDevModule\n\nDevModule\n\nApplicationModule -->\n\nDevModule->ApplicationModule\n\n\n\nStoryModule -->\n\nListingModule->StoryModule\n\n\n\nApplicationModule -->\n\nListingModule->ApplicationModule\n\n\n\n\n\nListingService \n\nListingService \n\nListingService  -->\n\nListingModule->ListingService \n\n\n\n\n\nLookupsModule\n\nLookupsModule\n\nListingModule -->\n\nLookupsModule->ListingModule\n\n\n\nStoryModule -->\n\nLookupsModule->StoryModule\n\n\n\nApplicationModule -->\n\nLookupsModule->ApplicationModule\n\n\n\n\n\nLookupsService \n\nLookupsService \n\nLookupsService  -->\n\nLookupsModule->LookupsService \n\n\n\nApplicationModule -->\n\nStoryModule->ApplicationModule\n\n\n\n\n\nStoryService \n\nStoryService \n\nStoryService  -->\n\nStoryModule->StoryService \n\n\n\n\n\nUserModule\n\nUserModule\n\nListingModule -->\n\nUserModule->ListingModule\n\n\n\nLookupsModule -->\n\nUserModule->LookupsModule\n\n\n\nStoryModule -->\n\nUserModule->StoryModule\n\n\n\nApplicationModule -->\n\nUserModule->ApplicationModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nAppLogger\n\nAppLogger\n\nAppLoggerModule -->\n\nAppLogger->AppLoggerModule\n\n\n\n\n\nFireBase \n\nFireBase \n\n\n\nMailManager \n\nMailManager \n\n\n\nPrismaService \n\nPrismaService \n\n\n\nCoreModule\n\nCoreModule\n\nDevModule -->\n\nCoreModule->DevModule\n\n\n\nListingModule -->\n\nCoreModule->ListingModule\n\n\n\nLookupsModule -->\n\nCoreModule->LookupsModule\n\n\n\nStoryModule -->\n\nCoreModule->StoryModule\n\n\n\nUserModule -->\n\nCoreModule->UserModule\n\n\n\nFireBase  -->\n\nCoreModule->FireBase \n\n\n\nMailManager  -->\n\nCoreModule->MailManager \n\n\n\nPrismaService  -->\n\nCoreModule->PrismaService \n\n\n\n\n\nFireBase\n\nFireBase\n\nCoreModule -->\n\nFireBase->CoreModule\n\n\n\n\n\nMailManager\n\nMailManager\n\nCoreModule -->\n\nMailManager->CoreModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nCoreModule -->\n\nPrismaService->CoreModule\n\n\n\n\n\nListingService\n\nListingService\n\nListingModule -->\n\nListingService->ListingModule\n\n\n\n\n\nLookupsService\n\nLookupsService\n\nLookupsModule -->\n\nLookupsService->LookupsModule\n\n\n\n\n\nStoryService\n\nStoryService\n\nStoryModule -->\n\nStoryService->StoryModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        8 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    7 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    10 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    35 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    31 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CurrencyCreationAttributes   (src/.../Currency.ts)\n                        \n                        \n                            DisclaimerCreationAttributes   (src/.../Disclaimer.ts)\n                        \n                        \n                            HiringTypeCreationAttributes   (src/.../HiringType.ts)\n                        \n                        \n                            ListingCreationAttributes   (src/.../Listing.ts)\n                        \n                        \n                            ListingFollowerCreationAttributes   (src/.../ListingFollower.ts)\n                        \n                        \n                            ListingReviewCreationAttributes   (src/.../ListingReview.ts)\n                        \n                        \n                            ListingTypeCreationAttributes   (src/.../ListingType.ts)\n                        \n                        \n                            LocalizedCurrencyCreationAttributes   (src/.../Currency.Localized.ts)\n                        \n                        \n                            LocalizedDisclaimerCreationAttributes   (src/.../Disclaimer.Localized.ts)\n                        \n                        \n                            LocalizedHiringTypeCreationAttributes   (src/.../HiringType.Localized.ts)\n                        \n                        \n                            LocalizedListingTypeCreationAttributes   (src/.../ListingType.Localized.ts)\n                        \n                        \n                            LocalizedPriceTypeCreationAttributes   (src/.../PriceType.Localized.ts)\n                        \n                        \n                            PasswordRecoveryTokenCreationAttributes   (src/.../PasswordRecoveryToken.ts)\n                        \n                        \n                            PriceTypeCreationAttributes   (src/.../PriceType.ts)\n                        \n                        \n                            StoryCreationAttributes   (src/.../Story.ts)\n                        \n                        \n                            UserCreationAttributes   (src/.../User.ts)\n                        \n                        \n                            UserFollowerCreationAttributes   (src/.../UserFollower.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/models/Currency.ts\n    \n    \n        \n            \n                \n                    \n                    CurrencyCreationAttributes\n                \n            \n            \n                \n                            Optional\n\n                \n            \n        \n    \n    src/models/Disclaimer.ts\n    \n    \n        \n            \n                \n                    \n                    DisclaimerCreationAttributes\n                \n            \n            \n                \n                            Optional\n\n                \n            \n        \n    \n    src/models/HiringType.ts\n    \n    \n        \n            \n                \n                    \n                    HiringTypeCreationAttributes\n                \n            \n            \n                \n                            Optional\n\n                \n            \n        \n    \n    src/models/Listing.ts\n    \n    \n        \n            \n                \n                    \n                    ListingCreationAttributes\n                \n            \n            \n                \n                            Optional\n\n                \n            \n        \n    \n    src/models/ListingFollower.ts\n    \n    \n        \n            \n                \n                    \n                    ListingFollowerCreationAttributes\n                \n            \n            \n                \n                            Optional\n\n                \n            \n        \n    \n    src/models/ListingReview.ts\n    \n    \n        \n            \n                \n                    \n                    ListingReviewCreationAttributes\n                \n            \n            \n                \n                            Optional\n\n                \n            \n        \n    \n    src/models/ListingType.ts\n    \n    \n        \n            \n                \n                    \n                    ListingTypeCreationAttributes\n                \n            \n            \n                \n                            Optional\n\n                \n            \n        \n    \n    src/models/Currency.Localized.ts\n    \n    \n        \n            \n                \n                    \n                    LocalizedCurrencyCreationAttributes\n                \n            \n            \n                \n                        Optional\n\n                \n            \n        \n    \n    src/models/Disclaimer.Localized.ts\n    \n    \n        \n            \n                \n                    \n                    LocalizedDisclaimerCreationAttributes\n                \n            \n            \n                \n                        Optional\n\n                \n            \n        \n    \n    src/models/HiringType.Localized.ts\n    \n    \n        \n            \n                \n                    \n                    LocalizedHiringTypeCreationAttributes\n                \n            \n            \n                \n                        Optional\n\n                \n            \n        \n    \n    src/models/ListingType.Localized.ts\n    \n    \n        \n            \n                \n                    \n                    LocalizedListingTypeCreationAttributes\n                \n            \n            \n                \n                        Optional\n\n                \n            \n        \n    \n    src/models/PriceType.Localized.ts\n    \n    \n        \n            \n                \n                    \n                    LocalizedPriceTypeCreationAttributes\n                \n            \n            \n                \n                        Optional\n\n                \n            \n        \n    \n    src/models/PasswordRecoveryToken.ts\n    \n    \n        \n            \n                \n                    \n                    PasswordRecoveryTokenCreationAttributes\n                \n            \n            \n                \n                            Optional\n\n                \n            \n        \n    \n    src/models/PriceType.ts\n    \n    \n        \n            \n                \n                    \n                    PriceTypeCreationAttributes\n                \n            \n            \n                \n                            Optional\n\n                \n            \n        \n    \n    src/models/Story.ts\n    \n    \n        \n            \n                \n                    \n                    StoryCreationAttributes\n                \n            \n            \n                \n                            Optional\n\n                \n            \n        \n    \n    src/models/User.ts\n    \n    \n        \n            \n                \n                    \n                    UserCreationAttributes\n                \n            \n            \n                \n                            Optional\n\n                \n            \n        \n    \n    src/models/UserFollower.ts\n    \n    \n        \n            \n                \n                    \n                    UserFollowerCreationAttributes\n                \n            \n            \n                \n                            Optional\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            debug   (src/.../main.ts)\n                        \n                        \n                            domain   (src/.../file.controller.ts)\n                        \n                        \n                            env   (src/.../Environment.ts)\n                        \n                        \n                            envFilePath   (src/.../Environment.ts)\n                        \n                        \n                            execOperation   (src/.../Utils.ts)\n                        \n                        \n                            JWT_SECRET   (src/.../auth.middleware.ts)\n                        \n                        \n                            JWT_SECRET   (src/.../user.decorator.ts)\n                        \n                        \n                            JWT_SECRET   (src/.../user.service.ts)\n                        \n                        \n                            logFile   (src/.../appLogger.service.ts)\n                        \n                        \n                            logger   (src/.../Utils.ts)\n                        \n                        \n                            module   (src/.../main.ts)\n                        \n                        \n                            NODE_ENV   (src/.../Environment.ts)\n                        \n                        \n                            OAuth2   (src/.../user.service.ts)\n                        \n                        \n                            oauth2Client   (src/.../user.service.ts)\n                        \n                        \n                            pgPool   (src/.../Database.ts)\n                        \n                        \n                            rootDir   (src/.../lookups.service.ts)\n                        \n                        \n                            sequelize   (src/.../Database.ts)\n                        \n                        \n                            umzug   (src/.../dev.controller.ts)\n                        \n                        \n                            User   (src/.../user.decorator.ts)\n                        \n                        \n                               (src/.../Database.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            debug\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : debug0('imaginativenews-api:server')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            module\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/lookups/file.controller.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            domain\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : env.APP_DOMAIN\n                        \n                    \n\n\n            \n        \n\n    src/shared/core/Environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            env\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : dotenv.config({\n    path: envFilePath,\n  }).parsed || {}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            envFilePath\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : NODE_ENV === 'production' ? '.env' : '.env.example'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            NODE_ENV\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : process.env.NODE_ENV\n                        \n                    \n\n\n            \n        \n\n    src/utils/Utils.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            execOperation\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : async (func: any) => {\n  try {\n    return await func();\n  } catch (error) {\n    logger.error(error + '\\n------------------------------------\\n', '');\n    throw new HttpException(error, HttpStatus.INTERNAL_SERVER_ERROR);\n  }\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new AppLogger('App')\n                        \n                    \n\n\n            \n        \n\n    src/user/auth.middleware.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            JWT_SECRET\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : env.JWT_SECRET\n                        \n                    \n\n\n            \n        \n\n    src/user/user.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            JWT_SECRET\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : env.JWT_SECRET\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            User\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createParamDecorator((data: any, ctx: ExecutionContext) => {\n  const req = ctx.switchToHttp().getRequest();\n  // if route is protected, there is a user set in auth.middleware\n  if (!!req.user) {\n    return !!data ? req.user[data] : req.user;\n  }\n\n  // in case a route is not protected, we still want to get the optional auth user from jwt\n  const token = req.headers.authorization\n    ? (req.headers.authorization as string).split(' ')\n    : null;\n  if (token && token[1]) {\n    const decoded: any = jwt.verify(token[1], JWT_SECRET);\n    return !!data ? decoded[data] : decoded.user;\n  }\n})\n                        \n                    \n\n\n            \n        \n\n    src/user/user.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            JWT_SECRET\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : env.JWT_SECRET\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            OAuth2\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : google.auth.OAuth2\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            oauth2Client\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new OAuth2()\n                        \n                    \n\n\n            \n        \n\n    src/shared/appLogger/appLogger.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            logFile\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : env.APP_LOG_FILE\n                        \n                    \n\n\n            \n        \n\n    src/shared/core/Database.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            pgPool\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new pg.Pool({\n  user: PGUSER,\n  database: PGNAME,\n  password: PGPASS,\n  port: +PGPORT,\n  host: PGHOST,\n})\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sequelize\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Sequelize(\n  `postgres://${PGUSER}:${PGPASS}@${PGHOST}:${PGPORT}/${PGNAME}`,\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : env\n                        \n                    \n\n\n            \n        \n\n    src/lookups/lookups.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            rootDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : env.UPLOAD_ROOT_DIR\n                        \n                    \n\n\n            \n        \n\n    src/dev/dev.controller.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            umzug\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Umzug({\n  storage: 'sequelize',\n  storageOptions: { sequelize },\n  migrations: {\n    params: [sequelize.getQueryInterface(), sequelize],\n    path: approot.resolve('migrations'),\n  },\n})\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
